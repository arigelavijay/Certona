//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18034
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Resonance.Insight3.Web.CertonaService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestBase", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Request" +
        "Objects")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetApplicationRemarketingCampaignsRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetRemarketingCampaignDetailsRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.UpdateRemarketingCampaignStatusesRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.ActivateRemarketingCampaignRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.CreateRemarketingCampaignRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.UpdateRemarketingCampaignRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetApplicationFrequencyCapRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.SetApplicationFrequencyCapsRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetAllAbandonmentTypesRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetAllAbandonmentFiltersRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetAbandonmentFiltersByAbandonmentIDRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetAllAbandonmentIntervalsRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetAllDeliveryMethodsRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetAllServiceHeadersRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetAllServiceProtocolsRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetAllServiceProtocolsAvailableRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetAllServiceTypesRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetCatalogsForApplicationRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetCatalogCurrencyFieldsRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetRemarketingEmailSchemesRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetRemarketingESPConfigInfoRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.CheckESPCampaignIDUniquenessRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.CheckCampaignNameUniquenessRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetCampaignVariantRuleRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetAccountNameByApplicationIdRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetEmailServiceProviderConfigurationRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetSchemeNumberOfItemsByExperienceRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetSchemeDetailsRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetSchemeContextRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetSchemeEventContextRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetToolsListRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetStatusListRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetReportsListRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetContentPanelRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.SetContentPanelSectionStateRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetAccountsByUserRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetAccountExplorerStatusRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetPanelBarStatesRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetAccountExplorerTreeRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetAssetExplorerTreeRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.SetPanelBarWidthRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.SetSelectedNodeRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.SetAccountExplorerStatusRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetPanelBarWidthRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.SetAccountExplorerNodeStateRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.SetAssetExplorerNodeStateRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.SetPanelBarStatesRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetApplicationCatalogsByExperienceRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetApplicationDetailsRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetApplicationPackagesRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetApplicationCatalogsRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetApplicationSchemesRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetApplicationSegmentsRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetReportingDataLastUpdatedRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetTrendsDataRequestBase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetTrendsDataApplicationRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetTrendsDataPackageRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetTrendsDataSchemeRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetTrendsDataExperienceRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetTrendsDataVariantRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetVariantDetailsRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetVariantRulesRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetVariantBoostsRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetVariantSlotsRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.UpdateVariantStatusRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.UpdateVariantPriorityRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.UpdateVariantDetailsRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.CreateVariantRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.UpdateVariantModifiersRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.CreateRuleRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.UpdateRuleRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.SaveExpressionRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetControlSetRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.DeleteRuleRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.DeleteExpressionRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetContextsRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetRuleOperatorsRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetFilterAttributesRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetConditionAttributesRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetNavigationMappingRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetUserMappingRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetPackageDetailsRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetPackageSchemesRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.AuthenticateUserRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetUserAccountApplicationFeaturesRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.SetUserSettingsRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetLastVariantPriorityByExperienceRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetExperienceBoostsRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetExperienceVariantsRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetExperienceDetailsRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.UpdateExperienceDetailsRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.UpdateExperienceModifiersRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.UpdateExperienceTrafficRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.CreateExperienceRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetModelRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetModelsRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetCatalogDetailsRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetCatalogItemRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetCatalogItemsRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetCatalogRuleContextsRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetCatalogByRuleRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetCatalogMappingFromResonanceFieldRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetRecommendationTypesRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetSegmentItemsRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetSchemeExperiencesRequest))]
    public partial class RequestBase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApplicationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Resonance.Insight3.Web.CertonaService.UserDTO UserField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ApplicationID {
            get {
                return this.ApplicationIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ApplicationIDField, value) != true)) {
                    this.ApplicationIDField = value;
                    this.RaisePropertyChanged("ApplicationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Resonance.Insight3.Web.CertonaService.UserDTO User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserDTO", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.DTOLibr" +
        "ary.Administration")]
    [System.SerializableAttribute()]
    public partial class UserDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsCertonaEmployeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastAccountIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.AccountDTO> AccountsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIDField, value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public bool IsCertonaEmployee {
            get {
                return this.IsCertonaEmployeeField;
            }
            set {
                if ((this.IsCertonaEmployeeField.Equals(value) != true)) {
                    this.IsCertonaEmployeeField = value;
                    this.RaisePropertyChanged("IsCertonaEmployee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public string LastAccountID {
            get {
                return this.LastAccountIDField;
            }
            set {
                if ((object.ReferenceEquals(this.LastAccountIDField, value) != true)) {
                    this.LastAccountIDField = value;
                    this.RaisePropertyChanged("LastAccountID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.AccountDTO> Accounts {
            get {
                return this.AccountsField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountsField, value) != true)) {
                    this.AccountsField = value;
                    this.RaisePropertyChanged("Accounts");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetApplicationRemarketingCampaignsRequest", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Request" +
        "Objects.Remarketing")]
    [System.SerializableAttribute()]
    public partial class GetApplicationRemarketingCampaignsRequest : Resonance.Insight3.Web.CertonaService.RequestBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusFilterField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusFilter {
            get {
                return this.StatusFilterField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusFilterField, value) != true)) {
                    this.StatusFilterField = value;
                    this.RaisePropertyChanged("StatusFilter");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetRemarketingCampaignDetailsRequest", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Request" +
        "Objects.Remarketing")]
    [System.SerializableAttribute()]
    public partial class GetRemarketingCampaignDetailsRequest : Resonance.Insight3.Web.CertonaService.RequestBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RemarketingCampaignIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RemarketingCampaignID {
            get {
                return this.RemarketingCampaignIDField;
            }
            set {
                if ((this.RemarketingCampaignIDField.Equals(value) != true)) {
                    this.RemarketingCampaignIDField = value;
                    this.RaisePropertyChanged("RemarketingCampaignID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UpdateRemarketingCampaignStatusesRequest", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Request" +
        "Objects.Remarketing")]
    [System.SerializableAttribute()]
    public partial class UpdateRemarketingCampaignStatusesRequest : Resonance.Insight3.Web.CertonaService.RequestBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.RemarketingCampaignDTO> UpdateRemarketingCampaignStatusesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.RemarketingCampaignDTO> UpdateRemarketingCampaignStatuses {
            get {
                return this.UpdateRemarketingCampaignStatusesField;
            }
            set {
                if ((object.ReferenceEquals(this.UpdateRemarketingCampaignStatusesField, value) != true)) {
                    this.UpdateRemarketingCampaignStatusesField = value;
                    this.RaisePropertyChanged("UpdateRemarketingCampaignStatuses");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ActivateRemarketingCampaignRequest", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Request" +
        "Objects.Remarketing")]
    [System.SerializableAttribute()]
    public partial class ActivateRemarketingCampaignRequest : Resonance.Insight3.Web.CertonaService.RequestBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CampaignIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CampaignID {
            get {
                return this.CampaignIDField;
            }
            set {
                if ((this.CampaignIDField.Equals(value) != true)) {
                    this.CampaignIDField = value;
                    this.RaisePropertyChanged("CampaignID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CreateRemarketingCampaignRequest", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Request" +
        "Objects.Remarketing")]
    [System.SerializableAttribute()]
    public partial class CreateRemarketingCampaignRequest : Resonance.Insight3.Web.CertonaService.RequestBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Resonance.Insight3.Web.CertonaService.RemarketingCampaignDTO CampaignField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Resonance.Insight3.Web.CertonaService.RemarketingCampaignDTO Campaign {
            get {
                return this.CampaignField;
            }
            set {
                if ((object.ReferenceEquals(this.CampaignField, value) != true)) {
                    this.CampaignField = value;
                    this.RaisePropertyChanged("Campaign");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UpdateRemarketingCampaignRequest", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Request" +
        "Objects.Remarketing")]
    [System.SerializableAttribute()]
    public partial class UpdateRemarketingCampaignRequest : Resonance.Insight3.Web.CertonaService.RequestBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Resonance.Insight3.Web.CertonaService.RemarketingCampaignDTO CampaignField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> SessionIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Resonance.Insight3.Web.CertonaService.RemarketingCampaignDTO Campaign {
            get {
                return this.CampaignField;
            }
            set {
                if ((object.ReferenceEquals(this.CampaignField, value) != true)) {
                    this.CampaignField = value;
                    this.RaisePropertyChanged("Campaign");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> SessionID {
            get {
                return this.SessionIDField;
            }
            set {
                if ((this.SessionIDField.Equals(value) != true)) {
                    this.SessionIDField = value;
                    this.RaisePropertyChanged("SessionID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetApplicationFrequencyCapRequest", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Request" +
        "Objects.Remarketing")]
    [System.SerializableAttribute()]
    public partial class GetApplicationFrequencyCapRequest : Resonance.Insight3.Web.CertonaService.RequestBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SetApplicationFrequencyCapsRequest", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Request" +
        "Objects.Remarketing")]
    [System.SerializableAttribute()]
    public partial class SetApplicationFrequencyCapsRequest : Resonance.Insight3.Web.CertonaService.RequestBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Resonance.Insight3.Web.CertonaService.ApplicationFrequencyCapDTO FrequencyCapDTOField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Resonance.Insight3.Web.CertonaService.ApplicationFrequencyCapDTO FrequencyCapDTO {
            get {
                return this.FrequencyCapDTOField;
            }
            set {
                if ((object.ReferenceEquals(this.FrequencyCapDTOField, value) != true)) {
                    this.FrequencyCapDTOField = value;
                    this.RaisePropertyChanged("FrequencyCapDTO");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetAllAbandonmentTypesRequest", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Request" +
        "Objects.Remarketing")]
    [System.SerializableAttribute()]
    public partial class GetAllAbandonmentTypesRequest : Resonance.Insight3.Web.CertonaService.RequestBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetAllAbandonmentFiltersRequest", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Request" +
        "Objects.Remarketing")]
    [System.SerializableAttribute()]
    public partial class GetAllAbandonmentFiltersRequest : Resonance.Insight3.Web.CertonaService.RequestBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetAbandonmentFiltersByAbandonmentIDRequest", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Request" +
        "Objects.Remarketing")]
    [System.SerializableAttribute()]
    public partial class GetAbandonmentFiltersByAbandonmentIDRequest : Resonance.Insight3.Web.CertonaService.RequestBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AbandonmentIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AbandonmentID {
            get {
                return this.AbandonmentIDField;
            }
            set {
                if ((this.AbandonmentIDField.Equals(value) != true)) {
                    this.AbandonmentIDField = value;
                    this.RaisePropertyChanged("AbandonmentID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetAllAbandonmentIntervalsRequest", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Request" +
        "Objects.Remarketing")]
    [System.SerializableAttribute()]
    public partial class GetAllAbandonmentIntervalsRequest : Resonance.Insight3.Web.CertonaService.RequestBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetAllDeliveryMethodsRequest", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Request" +
        "Objects.Remarketing")]
    [System.SerializableAttribute()]
    public partial class GetAllDeliveryMethodsRequest : Resonance.Insight3.Web.CertonaService.RequestBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetAllServiceHeadersRequest", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Request" +
        "Objects.Remarketing")]
    [System.SerializableAttribute()]
    public partial class GetAllServiceHeadersRequest : Resonance.Insight3.Web.CertonaService.RequestBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetAllServiceProtocolsRequest", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Request" +
        "Objects.Remarketing")]
    [System.SerializableAttribute()]
    public partial class GetAllServiceProtocolsRequest : Resonance.Insight3.Web.CertonaService.RequestBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetAllServiceProtocolsAvailableRequest", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Request" +
        "Objects.Remarketing")]
    [System.SerializableAttribute()]
    public partial class GetAllServiceProtocolsAvailableRequest : Resonance.Insight3.Web.CertonaService.RequestBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetAllServiceTypesRequest", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Request" +
        "Objects.Remarketing")]
    [System.SerializableAttribute()]
    public partial class GetAllServiceTypesRequest : Resonance.Insight3.Web.CertonaService.RequestBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetCatalogsForApplicationRequest", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Request" +
        "Objects.Remarketing")]
    [System.SerializableAttribute()]
    public partial class GetCatalogsForApplicationRequest : Resonance.Insight3.Web.CertonaService.RequestBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetCatalogCurrencyFieldsRequest", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Request" +
        "Objects.Remarketing")]
    [System.SerializableAttribute()]
    public partial class GetCatalogCurrencyFieldsRequest : Resonance.Insight3.Web.CertonaService.RequestBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CatalogIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CatalogID {
            get {
                return this.CatalogIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CatalogIDField, value) != true)) {
                    this.CatalogIDField = value;
                    this.RaisePropertyChanged("CatalogID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetRemarketingEmailSchemesRequest", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Request" +
        "Objects.Remarketing")]
    [System.SerializableAttribute()]
    public partial class GetRemarketingEmailSchemesRequest : Resonance.Insight3.Web.CertonaService.RequestBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetRemarketingESPConfigInfoRequest", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Request" +
        "Objects.Remarketing")]
    [System.SerializableAttribute()]
    public partial class GetRemarketingESPConfigInfoRequest : Resonance.Insight3.Web.CertonaService.RequestBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CheckESPCampaignIDUniquenessRequest", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Request" +
        "Objects.Remarketing")]
    [System.SerializableAttribute()]
    public partial class CheckESPCampaignIDUniquenessRequest : Resonance.Insight3.Web.CertonaService.RequestBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ESPCampaignIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ESPCampaignID {
            get {
                return this.ESPCampaignIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ESPCampaignIDField, value) != true)) {
                    this.ESPCampaignIDField = value;
                    this.RaisePropertyChanged("ESPCampaignID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CheckCampaignNameUniquenessRequest", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Request" +
        "Objects.Remarketing")]
    [System.SerializableAttribute()]
    public partial class CheckCampaignNameUniquenessRequest : Resonance.Insight3.Web.CertonaService.RequestBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CampaignNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CampaignName {
            get {
                return this.CampaignNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CampaignNameField, value) != true)) {
                    this.CampaignNameField = value;
                    this.RaisePropertyChanged("CampaignName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetCampaignVariantRuleRequest", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Request" +
        "Objects.Remarketing")]
    [System.SerializableAttribute()]
    public partial class GetCampaignVariantRuleRequest : Resonance.Insight3.Web.CertonaService.RequestBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CampaignIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CampaignID {
            get {
                return this.CampaignIDField;
            }
            set {
                if ((this.CampaignIDField.Equals(value) != true)) {
                    this.CampaignIDField = value;
                    this.RaisePropertyChanged("CampaignID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetAccountNameByApplicationIdRequest", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Request" +
        "Objects.Remarketing")]
    [System.SerializableAttribute()]
    public partial class GetAccountNameByApplicationIdRequest : Resonance.Insight3.Web.CertonaService.RequestBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetEmailServiceProviderConfigurationRequest", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Request" +
        "Objects.Remarketing")]
    [System.SerializableAttribute()]
    public partial class GetEmailServiceProviderConfigurationRequest : Resonance.Insight3.Web.CertonaService.RequestBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ExportDataServiceHeaderIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ExportDataServiceProtocolIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ExportDataServiceHeaderId {
            get {
                return this.ExportDataServiceHeaderIdField;
            }
            set {
                if ((this.ExportDataServiceHeaderIdField.Equals(value) != true)) {
                    this.ExportDataServiceHeaderIdField = value;
                    this.RaisePropertyChanged("ExportDataServiceHeaderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ExportDataServiceProtocolId {
            get {
                return this.ExportDataServiceProtocolIdField;
            }
            set {
                if ((this.ExportDataServiceProtocolIdField.Equals(value) != true)) {
                    this.ExportDataServiceProtocolIdField = value;
                    this.RaisePropertyChanged("ExportDataServiceProtocolId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetSchemeNumberOfItemsByExperienceRequest", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Request" +
        "Objects.Scheme")]
    [System.SerializableAttribute()]
    public partial class GetSchemeNumberOfItemsByExperienceRequest : Resonance.Insight3.Web.CertonaService.RequestBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ExperienceIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ExperienceID {
            get {
                return this.ExperienceIDField;
            }
            set {
                if ((this.ExperienceIDField.Equals(value) != true)) {
                    this.ExperienceIDField = value;
                    this.RaisePropertyChanged("ExperienceID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetSchemeDetailsRequest", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Request" +
        "Objects.Scheme")]
    [System.SerializableAttribute()]
    public partial class GetSchemeDetailsRequest : Resonance.Insight3.Web.CertonaService.RequestBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SchemeIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SchemeID {
            get {
                return this.SchemeIDField;
            }
            set {
                if ((this.SchemeIDField.Equals(value) != true)) {
                    this.SchemeIDField = value;
                    this.RaisePropertyChanged("SchemeID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetSchemeContextRequest", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Request" +
        "Objects.Scheme")]
    [System.SerializableAttribute()]
    public partial class GetSchemeContextRequest : Resonance.Insight3.Web.CertonaService.RequestBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SchemeIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountID {
            get {
                return this.AccountIDField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountIDField, value) != true)) {
                    this.AccountIDField = value;
                    this.RaisePropertyChanged("AccountID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SchemeID {
            get {
                return this.SchemeIDField;
            }
            set {
                if ((this.SchemeIDField.Equals(value) != true)) {
                    this.SchemeIDField = value;
                    this.RaisePropertyChanged("SchemeID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetSchemeEventContextRequest", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Request" +
        "Objects.Scheme")]
    [System.SerializableAttribute()]
    public partial class GetSchemeEventContextRequest : Resonance.Insight3.Web.CertonaService.RequestBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SchemeIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountID {
            get {
                return this.AccountIDField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountIDField, value) != true)) {
                    this.AccountIDField = value;
                    this.RaisePropertyChanged("AccountID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SchemeID {
            get {
                return this.SchemeIDField;
            }
            set {
                if ((this.SchemeIDField.Equals(value) != true)) {
                    this.SchemeIDField = value;
                    this.RaisePropertyChanged("SchemeID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetToolsListRequest", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Request" +
        "Objects.Framework")]
    [System.SerializableAttribute()]
    public partial class GetToolsListRequest : Resonance.Insight3.Web.CertonaService.RequestBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetStatusListRequest", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Request" +
        "Objects.Framework")]
    [System.SerializableAttribute()]
    public partial class GetStatusListRequest : Resonance.Insight3.Web.CertonaService.RequestBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetReportsListRequest", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Request" +
        "Objects.Framework")]
    [System.SerializableAttribute()]
    public partial class GetReportsListRequest : Resonance.Insight3.Web.CertonaService.RequestBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetContentPanelRequest", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Request" +
        "Objects.Framework")]
    [System.SerializableAttribute()]
    public partial class GetContentPanelRequest : Resonance.Insight3.Web.CertonaService.RequestBase {
        
        private int NodeTypeIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int NodeTypeID {
            get {
                return this.NodeTypeIDField;
            }
            set {
                if ((this.NodeTypeIDField.Equals(value) != true)) {
                    this.NodeTypeIDField = value;
                    this.RaisePropertyChanged("NodeTypeID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SetContentPanelSectionStateRequest", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Request" +
        "Objects.Framework")]
    [System.SerializableAttribute()]
    public partial class SetContentPanelSectionStateRequest : Resonance.Insight3.Web.CertonaService.RequestBase {
        
        private int ContentPanelSectionIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int ContentPanelSectionID {
            get {
                return this.ContentPanelSectionIDField;
            }
            set {
                if ((this.ContentPanelSectionIDField.Equals(value) != true)) {
                    this.ContentPanelSectionIDField = value;
                    this.RaisePropertyChanged("ContentPanelSectionID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetAccountsByUserRequest", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Request" +
        "Objects.Framework")]
    [System.SerializableAttribute()]
    public partial class GetAccountsByUserRequest : Resonance.Insight3.Web.CertonaService.RequestBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetAccountExplorerStatusRequest", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Request" +
        "Objects.Framework")]
    [System.SerializableAttribute()]
    public partial class GetAccountExplorerStatusRequest : Resonance.Insight3.Web.CertonaService.RequestBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetPanelBarStatesRequest", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Request" +
        "Objects.Framework")]
    [System.SerializableAttribute()]
    public partial class GetPanelBarStatesRequest : Resonance.Insight3.Web.CertonaService.RequestBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetAccountExplorerTreeRequest", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Request" +
        "Objects.Framework")]
    [System.SerializableAttribute()]
    public partial class GetAccountExplorerTreeRequest : Resonance.Insight3.Web.CertonaService.RequestBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ClassificationIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ClassificationID {
            get {
                return this.ClassificationIDField;
            }
            set {
                if ((this.ClassificationIDField.Equals(value) != true)) {
                    this.ClassificationIDField = value;
                    this.RaisePropertyChanged("ClassificationID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetAssetExplorerTreeRequest", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Request" +
        "Objects.Framework")]
    [System.SerializableAttribute()]
    public partial class GetAssetExplorerTreeRequest : Resonance.Insight3.Web.CertonaService.RequestBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SetPanelBarWidthRequest", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Request" +
        "Objects.Framework")]
    [System.SerializableAttribute()]
    public partial class SetPanelBarWidthRequest : Resonance.Insight3.Web.CertonaService.RequestBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal WidthField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Width {
            get {
                return this.WidthField;
            }
            set {
                if ((this.WidthField.Equals(value) != true)) {
                    this.WidthField = value;
                    this.RaisePropertyChanged("Width");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SetSelectedNodeRequest", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Request" +
        "Objects.Framework")]
    [System.SerializableAttribute()]
    public partial class SetSelectedNodeRequest : Resonance.Insight3.Web.CertonaService.RequestBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClassificationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ObjectKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ObjectValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClassificationID {
            get {
                return this.ClassificationIDField;
            }
            set {
                if ((this.ClassificationIDField.Equals(value) != true)) {
                    this.ClassificationIDField = value;
                    this.RaisePropertyChanged("ClassificationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ObjectKey {
            get {
                return this.ObjectKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.ObjectKeyField, value) != true)) {
                    this.ObjectKeyField = value;
                    this.RaisePropertyChanged("ObjectKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ObjectValue {
            get {
                return this.ObjectValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ObjectValueField, value) != true)) {
                    this.ObjectValueField = value;
                    this.RaisePropertyChanged("ObjectValue");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SetAccountExplorerStatusRequest", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Request" +
        "Objects.Framework")]
    [System.SerializableAttribute()]
    public partial class SetAccountExplorerStatusRequest : Resonance.Insight3.Web.CertonaService.RequestBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusValue {
            get {
                return this.StatusValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusValueField, value) != true)) {
                    this.StatusValueField = value;
                    this.RaisePropertyChanged("StatusValue");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetPanelBarWidthRequest", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Request" +
        "Objects.Framework")]
    [System.SerializableAttribute()]
    public partial class GetPanelBarWidthRequest : Resonance.Insight3.Web.CertonaService.RequestBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SetAccountExplorerNodeStateRequest", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Request" +
        "Objects.Framework")]
    [System.SerializableAttribute()]
    public partial class SetAccountExplorerNodeStateRequest : Resonance.Insight3.Web.CertonaService.RequestBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Resonance.Insight3.Web.CertonaService.NodeDTO NodeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Resonance.Insight3.Web.CertonaService.NodeDTO Node {
            get {
                return this.NodeField;
            }
            set {
                if ((object.ReferenceEquals(this.NodeField, value) != true)) {
                    this.NodeField = value;
                    this.RaisePropertyChanged("Node");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SetAssetExplorerNodeStateRequest", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Request" +
        "Objects.Framework")]
    [System.SerializableAttribute()]
    public partial class SetAssetExplorerNodeStateRequest : Resonance.Insight3.Web.CertonaService.RequestBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Resonance.Insight3.Web.CertonaService.NodeDTO NodeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Resonance.Insight3.Web.CertonaService.NodeDTO Node {
            get {
                return this.NodeField;
            }
            set {
                if ((object.ReferenceEquals(this.NodeField, value) != true)) {
                    this.NodeField = value;
                    this.RaisePropertyChanged("Node");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SetPanelBarStatesRequest", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Request" +
        "Objects.Framework")]
    [System.SerializableAttribute()]
    public partial class SetPanelBarStatesRequest : Resonance.Insight3.Web.CertonaService.RequestBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.PanelBarDTO> PanelBarsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.PanelBarDTO> PanelBars {
            get {
                return this.PanelBarsField;
            }
            set {
                if ((object.ReferenceEquals(this.PanelBarsField, value) != true)) {
                    this.PanelBarsField = value;
                    this.RaisePropertyChanged("PanelBars");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetApplicationCatalogsByExperienceRequest", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Request" +
        "Objects.Application")]
    [System.SerializableAttribute()]
    public partial class GetApplicationCatalogsByExperienceRequest : Resonance.Insight3.Web.CertonaService.RequestBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ExperienceIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ExperienceID {
            get {
                return this.ExperienceIDField;
            }
            set {
                if ((this.ExperienceIDField.Equals(value) != true)) {
                    this.ExperienceIDField = value;
                    this.RaisePropertyChanged("ExperienceID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetApplicationDetailsRequest", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Request" +
        "Objects.Application")]
    [System.SerializableAttribute()]
    public partial class GetApplicationDetailsRequest : Resonance.Insight3.Web.CertonaService.RequestBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetApplicationPackagesRequest", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Request" +
        "Objects.Application")]
    [System.SerializableAttribute()]
    public partial class GetApplicationPackagesRequest : Resonance.Insight3.Web.CertonaService.RequestBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetApplicationCatalogsRequest", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Request" +
        "Objects.Application")]
    [System.SerializableAttribute()]
    public partial class GetApplicationCatalogsRequest : Resonance.Insight3.Web.CertonaService.RequestBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetApplicationSchemesRequest", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Request" +
        "Objects.Application")]
    [System.SerializableAttribute()]
    public partial class GetApplicationSchemesRequest : Resonance.Insight3.Web.CertonaService.RequestBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetApplicationSegmentsRequest", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Request" +
        "Objects.Application")]
    [System.SerializableAttribute()]
    public partial class GetApplicationSegmentsRequest : Resonance.Insight3.Web.CertonaService.RequestBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetReportingDataLastUpdatedRequest", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Request" +
        "Objects.Reporting")]
    [System.SerializableAttribute()]
    public partial class GetReportingDataLastUpdatedRequest : Resonance.Insight3.Web.CertonaService.RequestBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountID {
            get {
                return this.AccountIDField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountIDField, value) != true)) {
                    this.AccountIDField = value;
                    this.RaisePropertyChanged("AccountID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetTrendsDataRequestBase", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Request" +
        "Objects.Reporting")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetTrendsDataApplicationRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetTrendsDataPackageRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetTrendsDataSchemeRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetTrendsDataExperienceRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetTrendsDataVariantRequest))]
    public partial class GetTrendsDataRequestBase : Resonance.Insight3.Web.CertonaService.RequestBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MetricField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ViewByField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Metric {
            get {
                return this.MetricField;
            }
            set {
                if ((object.ReferenceEquals(this.MetricField, value) != true)) {
                    this.MetricField = value;
                    this.RaisePropertyChanged("Metric");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ViewBy {
            get {
                return this.ViewByField;
            }
            set {
                if ((object.ReferenceEquals(this.ViewByField, value) != true)) {
                    this.ViewByField = value;
                    this.RaisePropertyChanged("ViewBy");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetTrendsDataApplicationRequest", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Request" +
        "Objects.Reporting")]
    [System.SerializableAttribute()]
    public partial class GetTrendsDataApplicationRequest : Resonance.Insight3.Web.CertonaService.GetTrendsDataRequestBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetTrendsDataPackageRequest", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Request" +
        "Objects.Reporting")]
    [System.SerializableAttribute()]
    public partial class GetTrendsDataPackageRequest : Resonance.Insight3.Web.CertonaService.GetTrendsDataRequestBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PackageIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PackageID {
            get {
                return this.PackageIDField;
            }
            set {
                if ((this.PackageIDField.Equals(value) != true)) {
                    this.PackageIDField = value;
                    this.RaisePropertyChanged("PackageID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetTrendsDataSchemeRequest", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Request" +
        "Objects.Reporting")]
    [System.SerializableAttribute()]
    public partial class GetTrendsDataSchemeRequest : Resonance.Insight3.Web.CertonaService.GetTrendsDataRequestBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SchemeIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SchemeID {
            get {
                return this.SchemeIDField;
            }
            set {
                if ((this.SchemeIDField.Equals(value) != true)) {
                    this.SchemeIDField = value;
                    this.RaisePropertyChanged("SchemeID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetTrendsDataExperienceRequest", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Request" +
        "Objects.Reporting")]
    [System.SerializableAttribute()]
    public partial class GetTrendsDataExperienceRequest : Resonance.Insight3.Web.CertonaService.GetTrendsDataRequestBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ExperienceIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ExperienceID {
            get {
                return this.ExperienceIDField;
            }
            set {
                if ((this.ExperienceIDField.Equals(value) != true)) {
                    this.ExperienceIDField = value;
                    this.RaisePropertyChanged("ExperienceID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetTrendsDataVariantRequest", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Request" +
        "Objects.Reporting")]
    [System.SerializableAttribute()]
    public partial class GetTrendsDataVariantRequest : Resonance.Insight3.Web.CertonaService.GetTrendsDataRequestBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VariantIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VariantID {
            get {
                return this.VariantIDField;
            }
            set {
                if ((this.VariantIDField.Equals(value) != true)) {
                    this.VariantIDField = value;
                    this.RaisePropertyChanged("VariantID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetVariantDetailsRequest", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Request" +
        "Objects.Variant")]
    [System.SerializableAttribute()]
    public partial class GetVariantDetailsRequest : Resonance.Insight3.Web.CertonaService.RequestBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VariantIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VariantID {
            get {
                return this.VariantIDField;
            }
            set {
                if ((this.VariantIDField.Equals(value) != true)) {
                    this.VariantIDField = value;
                    this.RaisePropertyChanged("VariantID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetVariantRulesRequest", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Request" +
        "Objects.Variant")]
    [System.SerializableAttribute()]
    public partial class GetVariantRulesRequest : Resonance.Insight3.Web.CertonaService.RequestBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VariantIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VariantID {
            get {
                return this.VariantIDField;
            }
            set {
                if ((this.VariantIDField.Equals(value) != true)) {
                    this.VariantIDField = value;
                    this.RaisePropertyChanged("VariantID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetVariantBoostsRequest", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Request" +
        "Objects.Variant")]
    [System.SerializableAttribute()]
    public partial class GetVariantBoostsRequest : Resonance.Insight3.Web.CertonaService.RequestBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VariantIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VariantID {
            get {
                return this.VariantIDField;
            }
            set {
                if ((this.VariantIDField.Equals(value) != true)) {
                    this.VariantIDField = value;
                    this.RaisePropertyChanged("VariantID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetVariantSlotsRequest", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Request" +
        "Objects.Variant")]
    [System.SerializableAttribute()]
    public partial class GetVariantSlotsRequest : Resonance.Insight3.Web.CertonaService.RequestBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VariantIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VariantID {
            get {
                return this.VariantIDField;
            }
            set {
                if ((this.VariantIDField.Equals(value) != true)) {
                    this.VariantIDField = value;
                    this.RaisePropertyChanged("VariantID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UpdateVariantStatusRequest", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Request" +
        "Objects.Variant")]
    [System.SerializableAttribute()]
    public partial class UpdateVariantStatusRequest : Resonance.Insight3.Web.CertonaService.RequestBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VariantID_ListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VariantID_List {
            get {
                return this.VariantID_ListField;
            }
            set {
                if ((object.ReferenceEquals(this.VariantID_ListField, value) != true)) {
                    this.VariantID_ListField = value;
                    this.RaisePropertyChanged("VariantID_List");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UpdateVariantPriorityRequest", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Request" +
        "Objects.Variant")]
    [System.SerializableAttribute()]
    public partial class UpdateVariantPriorityRequest : Resonance.Insight3.Web.CertonaService.RequestBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VariantIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DirectionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VariantID {
            get {
                return this.VariantIDField;
            }
            set {
                if ((this.VariantIDField.Equals(value) != true)) {
                    this.VariantIDField = value;
                    this.RaisePropertyChanged("VariantID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public string Direction {
            get {
                return this.DirectionField;
            }
            set {
                if ((object.ReferenceEquals(this.DirectionField, value) != true)) {
                    this.DirectionField = value;
                    this.RaisePropertyChanged("Direction");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UpdateVariantDetailsRequest", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Request" +
        "Objects.Variant")]
    [System.SerializableAttribute()]
    public partial class UpdateVariantDetailsRequest : Resonance.Insight3.Web.CertonaService.RequestBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CatalogIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExplanationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MethodIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberOfItemsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PriorityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VariantIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountID {
            get {
                return this.AccountIDField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountIDField, value) != true)) {
                    this.AccountIDField = value;
                    this.RaisePropertyChanged("AccountID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CatalogID {
            get {
                return this.CatalogIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CatalogIDField, value) != true)) {
                    this.CatalogIDField = value;
                    this.RaisePropertyChanged("CatalogID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Explanation {
            get {
                return this.ExplanationField;
            }
            set {
                if ((object.ReferenceEquals(this.ExplanationField, value) != true)) {
                    this.ExplanationField = value;
                    this.RaisePropertyChanged("Explanation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MethodID {
            get {
                return this.MethodIDField;
            }
            set {
                if ((this.MethodIDField.Equals(value) != true)) {
                    this.MethodIDField = value;
                    this.RaisePropertyChanged("MethodID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumberOfItems {
            get {
                return this.NumberOfItemsField;
            }
            set {
                if ((this.NumberOfItemsField.Equals(value) != true)) {
                    this.NumberOfItemsField = value;
                    this.RaisePropertyChanged("NumberOfItems");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Priority {
            get {
                return this.PriorityField;
            }
            set {
                if ((this.PriorityField.Equals(value) != true)) {
                    this.PriorityField = value;
                    this.RaisePropertyChanged("Priority");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VariantID {
            get {
                return this.VariantIDField;
            }
            set {
                if ((this.VariantIDField.Equals(value) != true)) {
                    this.VariantIDField = value;
                    this.RaisePropertyChanged("VariantID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CreateVariantRequest", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Request" +
        "Objects.Variant")]
    [System.SerializableAttribute()]
    public partial class CreateVariantRequest : Resonance.Insight3.Web.CertonaService.RequestBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CatalogIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContainerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ExperienceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MethodIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberOfAssetsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PriorityField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountID {
            get {
                return this.AccountIDField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountIDField, value) != true)) {
                    this.AccountIDField = value;
                    this.RaisePropertyChanged("AccountID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CatalogID {
            get {
                return this.CatalogIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CatalogIDField, value) != true)) {
                    this.CatalogIDField = value;
                    this.RaisePropertyChanged("CatalogID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContainerName {
            get {
                return this.ContainerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ContainerNameField, value) != true)) {
                    this.ContainerNameField = value;
                    this.RaisePropertyChanged("ContainerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ExperienceID {
            get {
                return this.ExperienceIDField;
            }
            set {
                if ((this.ExperienceIDField.Equals(value) != true)) {
                    this.ExperienceIDField = value;
                    this.RaisePropertyChanged("ExperienceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MethodID {
            get {
                return this.MethodIDField;
            }
            set {
                if ((this.MethodIDField.Equals(value) != true)) {
                    this.MethodIDField = value;
                    this.RaisePropertyChanged("MethodID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumberOfAssets {
            get {
                return this.NumberOfAssetsField;
            }
            set {
                if ((this.NumberOfAssetsField.Equals(value) != true)) {
                    this.NumberOfAssetsField = value;
                    this.RaisePropertyChanged("NumberOfAssets");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Priority {
            get {
                return this.PriorityField;
            }
            set {
                if ((this.PriorityField.Equals(value) != true)) {
                    this.PriorityField = value;
                    this.RaisePropertyChanged("Priority");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UpdateVariantModifiersRequest", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Request" +
        "Objects.Variant")]
    [System.SerializableAttribute()]
    public partial class UpdateVariantModifiersRequest : Resonance.Insight3.Web.CertonaService.RequestBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.VariantBiasDTO> VariantBiasesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Resonance.Insight3.Web.CertonaService.VariantDetailsDTO VariantDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.VariantModelDTO> VariantModelsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.VariantBiasDTO> VariantBiases {
            get {
                return this.VariantBiasesField;
            }
            set {
                if ((object.ReferenceEquals(this.VariantBiasesField, value) != true)) {
                    this.VariantBiasesField = value;
                    this.RaisePropertyChanged("VariantBiases");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Resonance.Insight3.Web.CertonaService.VariantDetailsDTO VariantDetails {
            get {
                return this.VariantDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.VariantDetailsField, value) != true)) {
                    this.VariantDetailsField = value;
                    this.RaisePropertyChanged("VariantDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.VariantModelDTO> VariantModels {
            get {
                return this.VariantModelsField;
            }
            set {
                if ((object.ReferenceEquals(this.VariantModelsField, value) != true)) {
                    this.VariantModelsField = value;
                    this.RaisePropertyChanged("VariantModels");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CreateRuleRequest", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Request" +
        "Objects.BusinessRule")]
    [System.SerializableAttribute()]
    public partial class CreateRuleRequest : Resonance.Insight3.Web.CertonaService.RequestBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SessionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VariantIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Enabled {
            get {
                return this.EnabledField;
            }
            set {
                if ((this.EnabledField.Equals(value) != true)) {
                    this.EnabledField = value;
                    this.RaisePropertyChanged("Enabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SessionID {
            get {
                return this.SessionIDField;
            }
            set {
                if ((this.SessionIDField.Equals(value) != true)) {
                    this.SessionIDField = value;
                    this.RaisePropertyChanged("SessionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VariantID {
            get {
                return this.VariantIDField;
            }
            set {
                if ((this.VariantIDField.Equals(value) != true)) {
                    this.VariantIDField = value;
                    this.RaisePropertyChanged("VariantID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UpdateRuleRequest", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Request" +
        "Objects.BusinessRule")]
    [System.SerializableAttribute()]
    public partial class UpdateRuleRequest : Resonance.Insight3.Web.CertonaService.RequestBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RuleIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Enabled {
            get {
                return this.EnabledField;
            }
            set {
                if ((this.EnabledField.Equals(value) != true)) {
                    this.EnabledField = value;
                    this.RaisePropertyChanged("Enabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RuleID {
            get {
                return this.RuleIDField;
            }
            set {
                if ((this.RuleIDField.Equals(value) != true)) {
                    this.RuleIDField = value;
                    this.RaisePropertyChanged("RuleID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SaveExpressionRequest", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Request" +
        "Objects.BusinessRule")]
    [System.SerializableAttribute()]
    public partial class SaveExpressionRequest : Resonance.Insight3.Web.CertonaService.RequestBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ExpressionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.ExpressionDTO> RuleExpressionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RuleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RuleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SessionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VariantIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ExpressionID {
            get {
                return this.ExpressionIDField;
            }
            set {
                if ((this.ExpressionIDField.Equals(value) != true)) {
                    this.ExpressionIDField = value;
                    this.RaisePropertyChanged("ExpressionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.ExpressionDTO> RuleExpression {
            get {
                return this.RuleExpressionField;
            }
            set {
                if ((object.ReferenceEquals(this.RuleExpressionField, value) != true)) {
                    this.RuleExpressionField = value;
                    this.RaisePropertyChanged("RuleExpression");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RuleID {
            get {
                return this.RuleIDField;
            }
            set {
                if ((this.RuleIDField.Equals(value) != true)) {
                    this.RuleIDField = value;
                    this.RaisePropertyChanged("RuleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RuleName {
            get {
                return this.RuleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RuleNameField, value) != true)) {
                    this.RuleNameField = value;
                    this.RaisePropertyChanged("RuleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SessionID {
            get {
                return this.SessionIDField;
            }
            set {
                if ((this.SessionIDField.Equals(value) != true)) {
                    this.SessionIDField = value;
                    this.RaisePropertyChanged("SessionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VariantID {
            get {
                return this.VariantIDField;
            }
            set {
                if ((this.VariantIDField.Equals(value) != true)) {
                    this.VariantIDField = value;
                    this.RaisePropertyChanged("VariantID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetControlSetRequest", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Request" +
        "Objects.BusinessRule")]
    [System.SerializableAttribute()]
    public partial class GetControlSetRequest : Resonance.Insight3.Web.CertonaService.RequestBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AttributeTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OperatorTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AttributeType {
            get {
                return this.AttributeTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.AttributeTypeField, value) != true)) {
                    this.AttributeTypeField = value;
                    this.RaisePropertyChanged("AttributeType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OperatorType {
            get {
                return this.OperatorTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.OperatorTypeField, value) != true)) {
                    this.OperatorTypeField = value;
                    this.RaisePropertyChanged("OperatorType");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeleteRuleRequest", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Request" +
        "Objects.BusinessRule")]
    [System.SerializableAttribute()]
    public partial class DeleteRuleRequest : Resonance.Insight3.Web.CertonaService.RequestBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RuleIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RuleID {
            get {
                return this.RuleIDField;
            }
            set {
                if ((this.RuleIDField.Equals(value) != true)) {
                    this.RuleIDField = value;
                    this.RaisePropertyChanged("RuleID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeleteExpressionRequest", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Request" +
        "Objects.BusinessRule")]
    [System.SerializableAttribute()]
    public partial class DeleteExpressionRequest : Resonance.Insight3.Web.CertonaService.RequestBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VExpressionIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VExpressionID {
            get {
                return this.VExpressionIDField;
            }
            set {
                if ((this.VExpressionIDField.Equals(value) != true)) {
                    this.VExpressionIDField = value;
                    this.RaisePropertyChanged("VExpressionID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetContextsRequest", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Request" +
        "Objects.BusinessRule")]
    [System.SerializableAttribute()]
    public partial class GetContextsRequest : Resonance.Insight3.Web.CertonaService.RequestBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetRuleOperatorsRequest", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Request" +
        "Objects.BusinessRule")]
    [System.SerializableAttribute()]
    public partial class GetRuleOperatorsRequest : Resonance.Insight3.Web.CertonaService.RequestBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AttributeTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AttributeType {
            get {
                return this.AttributeTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.AttributeTypeField, value) != true)) {
                    this.AttributeTypeField = value;
                    this.RaisePropertyChanged("AttributeType");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetFilterAttributesRequest", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Request" +
        "Objects.BusinessRule")]
    [System.SerializableAttribute()]
    public partial class GetFilterAttributesRequest : Resonance.Insight3.Web.CertonaService.RequestBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CatalogIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CatalogID {
            get {
                return this.CatalogIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CatalogIDField, value) != true)) {
                    this.CatalogIDField = value;
                    this.RaisePropertyChanged("CatalogID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetConditionAttributesRequest", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Request" +
        "Objects.BusinessRule")]
    [System.SerializableAttribute()]
    public partial class GetConditionAttributesRequest : Resonance.Insight3.Web.CertonaService.RequestBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CatalogIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CatalogID {
            get {
                return this.CatalogIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CatalogIDField, value) != true)) {
                    this.CatalogIDField = value;
                    this.RaisePropertyChanged("CatalogID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetNavigationMappingRequest", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Request" +
        "Objects.BusinessRule")]
    [System.SerializableAttribute()]
    public partial class GetNavigationMappingRequest : Resonance.Insight3.Web.CertonaService.RequestBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetUserMappingRequest", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Request" +
        "Objects.BusinessRule")]
    [System.SerializableAttribute()]
    public partial class GetUserMappingRequest : Resonance.Insight3.Web.CertonaService.RequestBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetPackageDetailsRequest", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Request" +
        "Objects.Package")]
    [System.SerializableAttribute()]
    public partial class GetPackageDetailsRequest : Resonance.Insight3.Web.CertonaService.RequestBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PackageIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PackageID {
            get {
                return this.PackageIDField;
            }
            set {
                if ((this.PackageIDField.Equals(value) != true)) {
                    this.PackageIDField = value;
                    this.RaisePropertyChanged("PackageID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetPackageSchemesRequest", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Request" +
        "Objects.Package")]
    [System.SerializableAttribute()]
    public partial class GetPackageSchemesRequest : Resonance.Insight3.Web.CertonaService.RequestBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PackageIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PackageID {
            get {
                return this.PackageIDField;
            }
            set {
                if ((this.PackageIDField.Equals(value) != true)) {
                    this.PackageIDField = value;
                    this.RaisePropertyChanged("PackageID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AuthenticateUserRequest", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Request" +
        "Objects.Administration")]
    [System.SerializableAttribute()]
    public partial class AuthenticateUserRequest : Resonance.Insight3.Web.CertonaService.RequestBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetUserAccountApplicationFeaturesRequest", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Request" +
        "Objects.Administration")]
    [System.SerializableAttribute()]
    public partial class GetUserAccountApplicationFeaturesRequest : Resonance.Insight3.Web.CertonaService.RequestBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SetUserSettingsRequest", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Request" +
        "Objects.Administration")]
    [System.SerializableAttribute()]
    public partial class SetUserSettingsRequest : Resonance.Insight3.Web.CertonaService.RequestBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrentPasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NewPasswordField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrentPassword {
            get {
                return this.CurrentPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentPasswordField, value) != true)) {
                    this.CurrentPasswordField = value;
                    this.RaisePropertyChanged("CurrentPassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailAddress {
            get {
                return this.EmailAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailAddressField, value) != true)) {
                    this.EmailAddressField = value;
                    this.RaisePropertyChanged("EmailAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NewPassword {
            get {
                return this.NewPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.NewPasswordField, value) != true)) {
                    this.NewPasswordField = value;
                    this.RaisePropertyChanged("NewPassword");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetLastVariantPriorityByExperienceRequest", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Request" +
        "Objects.Experience")]
    [System.SerializableAttribute()]
    public partial class GetLastVariantPriorityByExperienceRequest : Resonance.Insight3.Web.CertonaService.RequestBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ExperienceIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ExperienceID {
            get {
                return this.ExperienceIDField;
            }
            set {
                if ((this.ExperienceIDField.Equals(value) != true)) {
                    this.ExperienceIDField = value;
                    this.RaisePropertyChanged("ExperienceID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetExperienceBoostsRequest", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Request" +
        "Objects.Experience")]
    [System.SerializableAttribute()]
    public partial class GetExperienceBoostsRequest : Resonance.Insight3.Web.CertonaService.RequestBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ExperienceIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ExperienceID {
            get {
                return this.ExperienceIDField;
            }
            set {
                if ((this.ExperienceIDField.Equals(value) != true)) {
                    this.ExperienceIDField = value;
                    this.RaisePropertyChanged("ExperienceID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetExperienceVariantsRequest", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Request" +
        "Objects.Experience")]
    [System.SerializableAttribute()]
    public partial class GetExperienceVariantsRequest : Resonance.Insight3.Web.CertonaService.RequestBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ExperienceIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ExperienceID {
            get {
                return this.ExperienceIDField;
            }
            set {
                if ((this.ExperienceIDField.Equals(value) != true)) {
                    this.ExperienceIDField = value;
                    this.RaisePropertyChanged("ExperienceID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetExperienceDetailsRequest", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Request" +
        "Objects.Experience")]
    [System.SerializableAttribute()]
    public partial class GetExperienceDetailsRequest : Resonance.Insight3.Web.CertonaService.RequestBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ExperienceIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ExperienceID {
            get {
                return this.ExperienceIDField;
            }
            set {
                if ((this.ExperienceIDField.Equals(value) != true)) {
                    this.ExperienceIDField = value;
                    this.RaisePropertyChanged("ExperienceID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UpdateExperienceDetailsRequest", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Request" +
        "Objects.Experience")]
    [System.SerializableAttribute()]
    public partial class UpdateExperienceDetailsRequest : Resonance.Insight3.Web.CertonaService.RequestBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ExperienceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> SamplingRangeBeginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> SamplingRangeEndField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ExperienceID {
            get {
                return this.ExperienceIDField;
            }
            set {
                if ((this.ExperienceIDField.Equals(value) != true)) {
                    this.ExperienceIDField = value;
                    this.RaisePropertyChanged("ExperienceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public System.Nullable<double> SamplingRangeBegin {
            get {
                return this.SamplingRangeBeginField;
            }
            set {
                if ((this.SamplingRangeBeginField.Equals(value) != true)) {
                    this.SamplingRangeBeginField = value;
                    this.RaisePropertyChanged("SamplingRangeBegin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public System.Nullable<double> SamplingRangeEnd {
            get {
                return this.SamplingRangeEndField;
            }
            set {
                if ((this.SamplingRangeEndField.Equals(value) != true)) {
                    this.SamplingRangeEndField = value;
                    this.RaisePropertyChanged("SamplingRangeEnd");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UpdateExperienceModifiersRequest", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Request" +
        "Objects.Experience")]
    [System.SerializableAttribute()]
    public partial class UpdateExperienceModifiersRequest : Resonance.Insight3.Web.CertonaService.RequestBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ExperienceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PoolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ProfileField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ExperienceID {
            get {
                return this.ExperienceIDField;
            }
            set {
                if ((this.ExperienceIDField.Equals(value) != true)) {
                    this.ExperienceIDField = value;
                    this.RaisePropertyChanged("ExperienceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Pool {
            get {
                return this.PoolField;
            }
            set {
                if ((this.PoolField.Equals(value) != true)) {
                    this.PoolField = value;
                    this.RaisePropertyChanged("Pool");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Profile {
            get {
                return this.ProfileField;
            }
            set {
                if ((this.ProfileField.Equals(value) != true)) {
                    this.ProfileField = value;
                    this.RaisePropertyChanged("Profile");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UpdateExperienceTrafficRequest", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Request" +
        "Objects.Experience")]
    [System.SerializableAttribute()]
    public partial class UpdateExperienceTrafficRequest : Resonance.Insight3.Web.CertonaService.RequestBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ExperienceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> SamplingRangeBeginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> SamplingRangeEndField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ExperienceID {
            get {
                return this.ExperienceIDField;
            }
            set {
                if ((this.ExperienceIDField.Equals(value) != true)) {
                    this.ExperienceIDField = value;
                    this.RaisePropertyChanged("ExperienceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> SamplingRangeBegin {
            get {
                return this.SamplingRangeBeginField;
            }
            set {
                if ((this.SamplingRangeBeginField.Equals(value) != true)) {
                    this.SamplingRangeBeginField = value;
                    this.RaisePropertyChanged("SamplingRangeBegin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> SamplingRangeEnd {
            get {
                return this.SamplingRangeEndField;
            }
            set {
                if ((this.SamplingRangeEndField.Equals(value) != true)) {
                    this.SamplingRangeEndField = value;
                    this.RaisePropertyChanged("SamplingRangeEnd");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CreateExperienceRequest", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Request" +
        "Objects.Experience")]
    [System.SerializableAttribute()]
    public partial class CreateExperienceRequest : Resonance.Insight3.Web.CertonaService.RequestBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SchemeIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SchemeID {
            get {
                return this.SchemeIDField;
            }
            set {
                if ((this.SchemeIDField.Equals(value) != true)) {
                    this.SchemeIDField = value;
                    this.RaisePropertyChanged("SchemeID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetModelRequest", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Request" +
        "Objects.Model")]
    [System.SerializableAttribute()]
    public partial class GetModelRequest : Resonance.Insight3.Web.CertonaService.RequestBase {
        
        private int ModelIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int ModelID {
            get {
                return this.ModelIDField;
            }
            set {
                if ((this.ModelIDField.Equals(value) != true)) {
                    this.ModelIDField = value;
                    this.RaisePropertyChanged("ModelID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetModelsRequest", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Request" +
        "Objects.Model")]
    [System.SerializableAttribute()]
    public partial class GetModelsRequest : Resonance.Insight3.Web.CertonaService.RequestBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CatalogIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CatalogID {
            get {
                return this.CatalogIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CatalogIDField, value) != true)) {
                    this.CatalogIDField = value;
                    this.RaisePropertyChanged("CatalogID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetCatalogDetailsRequest", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Request" +
        "Objects.Catalog")]
    [System.SerializableAttribute()]
    public partial class GetCatalogDetailsRequest : Resonance.Insight3.Web.CertonaService.RequestBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CatalogIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CatalogID {
            get {
                return this.CatalogIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CatalogIDField, value) != true)) {
                    this.CatalogIDField = value;
                    this.RaisePropertyChanged("CatalogID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetCatalogItemRequest", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Request" +
        "Objects.Catalog")]
    [System.SerializableAttribute()]
    public partial class GetCatalogItemRequest : Resonance.Insight3.Web.CertonaService.RequestBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountItemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CatalogIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountID {
            get {
                return this.AccountIDField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountIDField, value) != true)) {
                    this.AccountIDField = value;
                    this.RaisePropertyChanged("AccountID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountItemID {
            get {
                return this.AccountItemIDField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountItemIDField, value) != true)) {
                    this.AccountItemIDField = value;
                    this.RaisePropertyChanged("AccountItemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CatalogID {
            get {
                return this.CatalogIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CatalogIDField, value) != true)) {
                    this.CatalogIDField = value;
                    this.RaisePropertyChanged("CatalogID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetCatalogItemsRequest", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Request" +
        "Objects.Catalog")]
    [System.SerializableAttribute()]
    public partial class GetCatalogItemsRequest : Resonance.Insight3.Web.CertonaService.RequestBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CatalogIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SortColumnsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameValueFilterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameValueOperatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IDValueFilterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IDValueOperatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> StatusValueFilterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountID {
            get {
                return this.AccountIDField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountIDField, value) != true)) {
                    this.AccountIDField = value;
                    this.RaisePropertyChanged("AccountID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CatalogID {
            get {
                return this.CatalogIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CatalogIDField, value) != true)) {
                    this.CatalogIDField = value;
                    this.RaisePropertyChanged("CatalogID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SortColumns {
            get {
                return this.SortColumnsField;
            }
            set {
                if ((object.ReferenceEquals(this.SortColumnsField, value) != true)) {
                    this.SortColumnsField = value;
                    this.RaisePropertyChanged("SortColumns");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string NameValueFilter {
            get {
                return this.NameValueFilterField;
            }
            set {
                if ((object.ReferenceEquals(this.NameValueFilterField, value) != true)) {
                    this.NameValueFilterField = value;
                    this.RaisePropertyChanged("NameValueFilter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string NameValueOperator {
            get {
                return this.NameValueOperatorField;
            }
            set {
                if ((object.ReferenceEquals(this.NameValueOperatorField, value) != true)) {
                    this.NameValueOperatorField = value;
                    this.RaisePropertyChanged("NameValueOperator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public string IDValueFilter {
            get {
                return this.IDValueFilterField;
            }
            set {
                if ((object.ReferenceEquals(this.IDValueFilterField, value) != true)) {
                    this.IDValueFilterField = value;
                    this.RaisePropertyChanged("IDValueFilter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public string IDValueOperator {
            get {
                return this.IDValueOperatorField;
            }
            set {
                if ((object.ReferenceEquals(this.IDValueOperatorField, value) != true)) {
                    this.IDValueOperatorField = value;
                    this.RaisePropertyChanged("IDValueOperator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public System.Nullable<bool> StatusValueFilter {
            get {
                return this.StatusValueFilterField;
            }
            set {
                if ((this.StatusValueFilterField.Equals(value) != true)) {
                    this.StatusValueFilterField = value;
                    this.RaisePropertyChanged("StatusValueFilter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public int PageSize {
            get {
                return this.PageSizeField;
            }
            set {
                if ((this.PageSizeField.Equals(value) != true)) {
                    this.PageSizeField = value;
                    this.RaisePropertyChanged("PageSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=9)]
        public int Page {
            get {
                return this.PageField;
            }
            set {
                if ((this.PageField.Equals(value) != true)) {
                    this.PageField = value;
                    this.RaisePropertyChanged("Page");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetCatalogRuleContextsRequest", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Request" +
        "Objects.Catalog")]
    [System.SerializableAttribute()]
    public partial class GetCatalogRuleContextsRequest : Resonance.Insight3.Web.CertonaService.RequestBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CatalogIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CatalogID {
            get {
                return this.CatalogIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CatalogIDField, value) != true)) {
                    this.CatalogIDField = value;
                    this.RaisePropertyChanged("CatalogID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetCatalogByRuleRequest", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Request" +
        "Objects.Catalog")]
    [System.SerializableAttribute()]
    public partial class GetCatalogByRuleRequest : Resonance.Insight3.Web.CertonaService.RequestBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RuleIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RuleId {
            get {
                return this.RuleIdField;
            }
            set {
                if ((this.RuleIdField.Equals(value) != true)) {
                    this.RuleIdField = value;
                    this.RaisePropertyChanged("RuleId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetCatalogMappingFromResonanceFieldRequest", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Request" +
        "Objects.Catalog")]
    [System.SerializableAttribute()]
    public partial class GetCatalogMappingFromResonanceFieldRequest : Resonance.Insight3.Web.CertonaService.RequestBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CatalogIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResonanceFieldField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CatalogID {
            get {
                return this.CatalogIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CatalogIDField, value) != true)) {
                    this.CatalogIDField = value;
                    this.RaisePropertyChanged("CatalogID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResonanceField {
            get {
                return this.ResonanceFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.ResonanceFieldField, value) != true)) {
                    this.ResonanceFieldField = value;
                    this.RaisePropertyChanged("ResonanceField");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetRecommendationTypesRequest", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Request" +
        "Objects.Catalog")]
    [System.SerializableAttribute()]
    public partial class GetRecommendationTypesRequest : Resonance.Insight3.Web.CertonaService.RequestBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CatalogIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CatalogID {
            get {
                return this.CatalogIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CatalogIDField, value) != true)) {
                    this.CatalogIDField = value;
                    this.RaisePropertyChanged("CatalogID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetSegmentItemsRequest", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Request" +
        "Objects.Segment")]
    [System.SerializableAttribute()]
    public partial class GetSegmentItemsRequest : Resonance.Insight3.Web.CertonaService.RequestBase {
        
        private int ModelIDField;
        
        private int SegmentIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int ModelID {
            get {
                return this.ModelIDField;
            }
            set {
                if ((this.ModelIDField.Equals(value) != true)) {
                    this.ModelIDField = value;
                    this.RaisePropertyChanged("ModelID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int SegmentID {
            get {
                return this.SegmentIDField;
            }
            set {
                if ((this.SegmentIDField.Equals(value) != true)) {
                    this.SegmentIDField = value;
                    this.RaisePropertyChanged("SegmentID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetSchemeExperiencesRequest", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Request" +
        "Objects.Scheme")]
    [System.SerializableAttribute()]
    public partial class GetSchemeExperiencesRequest : Resonance.Insight3.Web.CertonaService.RequestBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SchemeIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SchemeID {
            get {
                return this.SchemeIDField;
            }
            set {
                if ((this.SchemeIDField.Equals(value) != true)) {
                    this.SchemeIDField = value;
                    this.RaisePropertyChanged("SchemeID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountDTO", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.DTOLibr" +
        "ary.Administration")]
    [System.SerializableAttribute()]
    public partial class AccountDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.ApplicationDTO> ApplicationsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountID {
            get {
                return this.AccountIDField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountIDField, value) != true)) {
                    this.AccountIDField = value;
                    this.RaisePropertyChanged("AccountID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.ApplicationDTO> Applications {
            get {
                return this.ApplicationsField;
            }
            set {
                if ((object.ReferenceEquals(this.ApplicationsField, value) != true)) {
                    this.ApplicationsField = value;
                    this.RaisePropertyChanged("Applications");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ApplicationDTO", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.DTOLibr" +
        "ary.Application")]
    [System.SerializableAttribute()]
    public partial class ApplicationDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApplicationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.FeatureDTO> FeaturesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Resonance.Insight3.Web.CertonaService.ItemStatuses StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ApplicationID {
            get {
                return this.ApplicationIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ApplicationIDField, value) != true)) {
                    this.ApplicationIDField = value;
                    this.RaisePropertyChanged("ApplicationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.FeatureDTO> Features {
            get {
                return this.FeaturesField;
            }
            set {
                if ((object.ReferenceEquals(this.FeaturesField, value) != true)) {
                    this.FeaturesField = value;
                    this.RaisePropertyChanged("Features");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Resonance.Insight3.Web.CertonaService.ItemStatuses Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FeatureDTO", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.DTOLibr" +
        "ary.Administration")]
    [System.SerializableAttribute()]
    public partial class FeatureDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int FeatureCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        private bool IsReadOnlyField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int FeatureCode {
            get {
                return this.FeatureCodeField;
            }
            set {
                if ((this.FeatureCodeField.Equals(value) != true)) {
                    this.FeatureCodeField = value;
                    this.RaisePropertyChanged("FeatureCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public bool IsReadOnly {
            get {
                return this.IsReadOnlyField;
            }
            set {
                if ((this.IsReadOnlyField.Equals(value) != true)) {
                    this.IsReadOnlyField = value;
                    this.RaisePropertyChanged("IsReadOnly");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ItemStatuses", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Enums")]
    public enum ItemStatuses : byte {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Active = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Inactive = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Deleted = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RemarketingCampaignDTO", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.DTOLibr" +
        "ary.Remarketing")]
    [System.SerializableAttribute()]
    public partial class RemarketingCampaignDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> Abandonment_Filter_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> Abandonment_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> Abandonment_Interval_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Application_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Catalog_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte Current_StepField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ESP_Campaign_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Export_Data_Service_ConnectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> Export_Data_Service_Header_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> Export_Data_Service_Protocol_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> Filter_Scheme_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> Include_FilteringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IntervalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> Job_End_DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.TimeSpan> Job_Run_TimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> Job_Start_DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> Min_AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> Min_EventsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Remarketing_Campaign_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Resonance_FieldField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> Scheme_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte Status_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> Use_All_ApplicationsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Abandonment_Filter_ID {
            get {
                return this.Abandonment_Filter_IDField;
            }
            set {
                if ((this.Abandonment_Filter_IDField.Equals(value) != true)) {
                    this.Abandonment_Filter_IDField = value;
                    this.RaisePropertyChanged("Abandonment_Filter_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Abandonment_ID {
            get {
                return this.Abandonment_IDField;
            }
            set {
                if ((this.Abandonment_IDField.Equals(value) != true)) {
                    this.Abandonment_IDField = value;
                    this.RaisePropertyChanged("Abandonment_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Abandonment_Interval_ID {
            get {
                return this.Abandonment_Interval_IDField;
            }
            set {
                if ((this.Abandonment_Interval_IDField.Equals(value) != true)) {
                    this.Abandonment_Interval_IDField = value;
                    this.RaisePropertyChanged("Abandonment_Interval_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Application_ID {
            get {
                return this.Application_IDField;
            }
            set {
                if ((object.ReferenceEquals(this.Application_IDField, value) != true)) {
                    this.Application_IDField = value;
                    this.RaisePropertyChanged("Application_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Catalog_ID {
            get {
                return this.Catalog_IDField;
            }
            set {
                if ((object.ReferenceEquals(this.Catalog_IDField, value) != true)) {
                    this.Catalog_IDField = value;
                    this.RaisePropertyChanged("Catalog_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte Current_Step {
            get {
                return this.Current_StepField;
            }
            set {
                if ((this.Current_StepField.Equals(value) != true)) {
                    this.Current_StepField = value;
                    this.RaisePropertyChanged("Current_Step");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ESP_Campaign_ID {
            get {
                return this.ESP_Campaign_IDField;
            }
            set {
                if ((object.ReferenceEquals(this.ESP_Campaign_IDField, value) != true)) {
                    this.ESP_Campaign_IDField = value;
                    this.RaisePropertyChanged("ESP_Campaign_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Export_Data_Service_Connection {
            get {
                return this.Export_Data_Service_ConnectionField;
            }
            set {
                if ((object.ReferenceEquals(this.Export_Data_Service_ConnectionField, value) != true)) {
                    this.Export_Data_Service_ConnectionField = value;
                    this.RaisePropertyChanged("Export_Data_Service_Connection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Export_Data_Service_Header_ID {
            get {
                return this.Export_Data_Service_Header_IDField;
            }
            set {
                if ((this.Export_Data_Service_Header_IDField.Equals(value) != true)) {
                    this.Export_Data_Service_Header_IDField = value;
                    this.RaisePropertyChanged("Export_Data_Service_Header_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Export_Data_Service_Protocol_ID {
            get {
                return this.Export_Data_Service_Protocol_IDField;
            }
            set {
                if ((this.Export_Data_Service_Protocol_IDField.Equals(value) != true)) {
                    this.Export_Data_Service_Protocol_IDField = value;
                    this.RaisePropertyChanged("Export_Data_Service_Protocol_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Filter_Scheme_ID {
            get {
                return this.Filter_Scheme_IDField;
            }
            set {
                if ((this.Filter_Scheme_IDField.Equals(value) != true)) {
                    this.Filter_Scheme_IDField = value;
                    this.RaisePropertyChanged("Filter_Scheme_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Include_Filtering {
            get {
                return this.Include_FilteringField;
            }
            set {
                if ((this.Include_FilteringField.Equals(value) != true)) {
                    this.Include_FilteringField = value;
                    this.RaisePropertyChanged("Include_Filtering");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Interval {
            get {
                return this.IntervalField;
            }
            set {
                if ((this.IntervalField.Equals(value) != true)) {
                    this.IntervalField = value;
                    this.RaisePropertyChanged("Interval");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Job_End_Date {
            get {
                return this.Job_End_DateField;
            }
            set {
                if ((this.Job_End_DateField.Equals(value) != true)) {
                    this.Job_End_DateField = value;
                    this.RaisePropertyChanged("Job_End_Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.TimeSpan> Job_Run_Time {
            get {
                return this.Job_Run_TimeField;
            }
            set {
                if ((this.Job_Run_TimeField.Equals(value) != true)) {
                    this.Job_Run_TimeField = value;
                    this.RaisePropertyChanged("Job_Run_Time");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Job_Start_Date {
            get {
                return this.Job_Start_DateField;
            }
            set {
                if ((this.Job_Start_DateField.Equals(value) != true)) {
                    this.Job_Start_DateField = value;
                    this.RaisePropertyChanged("Job_Start_Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Min_Amount {
            get {
                return this.Min_AmountField;
            }
            set {
                if ((this.Min_AmountField.Equals(value) != true)) {
                    this.Min_AmountField = value;
                    this.RaisePropertyChanged("Min_Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Min_Events {
            get {
                return this.Min_EventsField;
            }
            set {
                if ((this.Min_EventsField.Equals(value) != true)) {
                    this.Min_EventsField = value;
                    this.RaisePropertyChanged("Min_Events");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Remarketing_Campaign_ID {
            get {
                return this.Remarketing_Campaign_IDField;
            }
            set {
                if ((this.Remarketing_Campaign_IDField.Equals(value) != true)) {
                    this.Remarketing_Campaign_IDField = value;
                    this.RaisePropertyChanged("Remarketing_Campaign_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Resonance_Field {
            get {
                return this.Resonance_FieldField;
            }
            set {
                if ((object.ReferenceEquals(this.Resonance_FieldField, value) != true)) {
                    this.Resonance_FieldField = value;
                    this.RaisePropertyChanged("Resonance_Field");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Scheme_ID {
            get {
                return this.Scheme_IDField;
            }
            set {
                if ((this.Scheme_IDField.Equals(value) != true)) {
                    this.Scheme_IDField = value;
                    this.RaisePropertyChanged("Scheme_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte Status_ID {
            get {
                return this.Status_IDField;
            }
            set {
                if ((this.Status_IDField.Equals(value) != true)) {
                    this.Status_IDField = value;
                    this.RaisePropertyChanged("Status_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Use_All_Applications {
            get {
                return this.Use_All_ApplicationsField;
            }
            set {
                if ((this.Use_All_ApplicationsField.Equals(value) != true)) {
                    this.Use_All_ApplicationsField = value;
                    this.RaisePropertyChanged("Use_All_Applications");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ApplicationFrequencyCapDTO", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.DTOLibr" +
        "ary.Remarketing")]
    [System.SerializableAttribute()]
    public partial class ApplicationFrequencyCapDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApplicationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FrequencyCapDaysField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FrequencyCapEmailsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ApplicationID {
            get {
                return this.ApplicationIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ApplicationIDField, value) != true)) {
                    this.ApplicationIDField = value;
                    this.RaisePropertyChanged("ApplicationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Enabled {
            get {
                return this.EnabledField;
            }
            set {
                if ((this.EnabledField.Equals(value) != true)) {
                    this.EnabledField = value;
                    this.RaisePropertyChanged("Enabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FrequencyCapDays {
            get {
                return this.FrequencyCapDaysField;
            }
            set {
                if ((this.FrequencyCapDaysField.Equals(value) != true)) {
                    this.FrequencyCapDaysField = value;
                    this.RaisePropertyChanged("FrequencyCapDays");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FrequencyCapEmails {
            get {
                return this.FrequencyCapEmailsField;
            }
            set {
                if ((this.FrequencyCapEmailsField.Equals(value) != true)) {
                    this.FrequencyCapEmailsField = value;
                    this.RaisePropertyChanged("FrequencyCapEmails");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NodeDTO", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.DTOLibr" +
        "ary.Framework")]
    [System.SerializableAttribute()]
    public partial class NodeDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApplicationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CatalogIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.NodeDTO> ChildNodesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ClassificationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ExpandedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NodeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Resonance.Insight3.Web.CertonaService.NodeType NodeTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SelectedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Resonance.Insight3.Web.CertonaService.NodeStatus StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ApplicationID {
            get {
                return this.ApplicationIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ApplicationIDField, value) != true)) {
                    this.ApplicationIDField = value;
                    this.RaisePropertyChanged("ApplicationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CatalogID {
            get {
                return this.CatalogIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CatalogIDField, value) != true)) {
                    this.CatalogIDField = value;
                    this.RaisePropertyChanged("CatalogID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.NodeDTO> ChildNodes {
            get {
                return this.ChildNodesField;
            }
            set {
                if ((object.ReferenceEquals(this.ChildNodesField, value) != true)) {
                    this.ChildNodesField = value;
                    this.RaisePropertyChanged("ChildNodes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ClassificationID {
            get {
                return this.ClassificationIDField;
            }
            set {
                if ((this.ClassificationIDField.Equals(value) != true)) {
                    this.ClassificationIDField = value;
                    this.RaisePropertyChanged("ClassificationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayValue {
            get {
                return this.DisplayValueField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayValueField, value) != true)) {
                    this.DisplayValueField = value;
                    this.RaisePropertyChanged("DisplayValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Expanded {
            get {
                return this.ExpandedField;
            }
            set {
                if ((this.ExpandedField.Equals(value) != true)) {
                    this.ExpandedField = value;
                    this.RaisePropertyChanged("Expanded");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NodeID {
            get {
                return this.NodeIDField;
            }
            set {
                if ((object.ReferenceEquals(this.NodeIDField, value) != true)) {
                    this.NodeIDField = value;
                    this.RaisePropertyChanged("NodeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Resonance.Insight3.Web.CertonaService.NodeType NodeType {
            get {
                return this.NodeTypeField;
            }
            set {
                if ((this.NodeTypeField.Equals(value) != true)) {
                    this.NodeTypeField = value;
                    this.RaisePropertyChanged("NodeType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Selected {
            get {
                return this.SelectedField;
            }
            set {
                if ((this.SelectedField.Equals(value) != true)) {
                    this.SelectedField = value;
                    this.RaisePropertyChanged("Selected");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Resonance.Insight3.Web.CertonaService.NodeStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NodeType", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Enums.F" +
        "ramework")]
    public enum NodeType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Classification = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Classification_Value = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Application = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Package = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Scheme = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Variant = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Catalog = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Custom_List = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Exclusion_List = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Mapping_Node = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Models = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Remarketing = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WizardPOC = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Report = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Tool = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Experience = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Asset = 17,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NodeStatus", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Enums.F" +
        "ramework")]
    public enum NodeStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Active = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Inactive = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Pending = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Deleted = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PanelBarDTO", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.DTOLibr" +
        "ary.Framework")]
    [System.SerializableAttribute()]
    public partial class PanelBarDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ExpandedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PanelBarIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PanelBarNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Expanded {
            get {
                return this.ExpandedField;
            }
            set {
                if ((this.ExpandedField.Equals(value) != true)) {
                    this.ExpandedField = value;
                    this.RaisePropertyChanged("Expanded");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PanelBarID {
            get {
                return this.PanelBarIDField;
            }
            set {
                if ((this.PanelBarIDField.Equals(value) != true)) {
                    this.PanelBarIDField = value;
                    this.RaisePropertyChanged("PanelBarID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PanelBarName {
            get {
                return this.PanelBarNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PanelBarNameField, value) != true)) {
                    this.PanelBarNameField = value;
                    this.RaisePropertyChanged("PanelBarName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VariantDetailsDTO", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.DTOLibr" +
        "ary.Variant")]
    [System.SerializableAttribute()]
    public partial class VariantDetailsDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CatalogField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CatalogIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContainerTitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Icon_FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MethodIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberOfAssetsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PersonalizationTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PoolFactorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PriorityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RecommendationTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SubjectWeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VariantIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Catalog {
            get {
                return this.CatalogField;
            }
            set {
                if ((object.ReferenceEquals(this.CatalogField, value) != true)) {
                    this.CatalogField = value;
                    this.RaisePropertyChanged("Catalog");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CatalogID {
            get {
                return this.CatalogIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CatalogIDField, value) != true)) {
                    this.CatalogIDField = value;
                    this.RaisePropertyChanged("CatalogID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContainerTitle {
            get {
                return this.ContainerTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.ContainerTitleField, value) != true)) {
                    this.ContainerTitleField = value;
                    this.RaisePropertyChanged("ContainerTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Icon_FileName {
            get {
                return this.Icon_FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.Icon_FileNameField, value) != true)) {
                    this.Icon_FileNameField = value;
                    this.RaisePropertyChanged("Icon_FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MethodID {
            get {
                return this.MethodIDField;
            }
            set {
                if ((this.MethodIDField.Equals(value) != true)) {
                    this.MethodIDField = value;
                    this.RaisePropertyChanged("MethodID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumberOfAssets {
            get {
                return this.NumberOfAssetsField;
            }
            set {
                if ((this.NumberOfAssetsField.Equals(value) != true)) {
                    this.NumberOfAssetsField = value;
                    this.RaisePropertyChanged("NumberOfAssets");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PersonalizationType {
            get {
                return this.PersonalizationTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.PersonalizationTypeField, value) != true)) {
                    this.PersonalizationTypeField = value;
                    this.RaisePropertyChanged("PersonalizationType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PoolFactor {
            get {
                return this.PoolFactorField;
            }
            set {
                if ((this.PoolFactorField.Equals(value) != true)) {
                    this.PoolFactorField = value;
                    this.RaisePropertyChanged("PoolFactor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Priority {
            get {
                return this.PriorityField;
            }
            set {
                if ((this.PriorityField.Equals(value) != true)) {
                    this.PriorityField = value;
                    this.RaisePropertyChanged("Priority");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RecommendationType {
            get {
                return this.RecommendationTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.RecommendationTypeField, value) != true)) {
                    this.RecommendationTypeField = value;
                    this.RaisePropertyChanged("RecommendationType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SubjectWeight {
            get {
                return this.SubjectWeightField;
            }
            set {
                if ((this.SubjectWeightField.Equals(value) != true)) {
                    this.SubjectWeightField = value;
                    this.RaisePropertyChanged("SubjectWeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VariantId {
            get {
                return this.VariantIdField;
            }
            set {
                if ((object.ReferenceEquals(this.VariantIdField, value) != true)) {
                    this.VariantIdField = value;
                    this.RaisePropertyChanged("VariantId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VariantBiasDTO", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.DTOLibr" +
        "ary")]
    [System.SerializableAttribute()]
    public partial class VariantBiasDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BiasIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ListNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> WeightField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BiasID {
            get {
                return this.BiasIDField;
            }
            set {
                if ((this.BiasIDField.Equals(value) != true)) {
                    this.BiasIDField = value;
                    this.RaisePropertyChanged("BiasID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ListName {
            get {
                return this.ListNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ListNameField, value) != true)) {
                    this.ListNameField = value;
                    this.RaisePropertyChanged("ListName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Weight {
            get {
                return this.WeightField;
            }
            set {
                if ((this.WeightField.Equals(value) != true)) {
                    this.WeightField = value;
                    this.RaisePropertyChanged("Weight");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VariantModelDTO", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.DTOLibr" +
        "ary")]
    [System.SerializableAttribute()]
    public partial class VariantModelDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CatalogIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ModelIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> WeightField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CatalogID {
            get {
                return this.CatalogIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CatalogIDField, value) != true)) {
                    this.CatalogIDField = value;
                    this.RaisePropertyChanged("CatalogID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ModelID {
            get {
                return this.ModelIDField;
            }
            set {
                if ((this.ModelIDField.Equals(value) != true)) {
                    this.ModelIDField = value;
                    this.RaisePropertyChanged("ModelID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Weight {
            get {
                return this.WeightField;
            }
            set {
                if ((this.WeightField.Equals(value) != true)) {
                    this.WeightField = value;
                    this.RaisePropertyChanged("Weight");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExpressionDTO", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.DTOLibr" +
        "ary.BusinessRule")]
    [System.SerializableAttribute()]
    public partial class ExpressionDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AttributeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ConditionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DeleteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Resonance.Insight3.Web.CertonaService.ExpressionType ExpressionTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OperatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PercentOrUnitsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlusOrMinusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VExpressionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Attribute {
            get {
                return this.AttributeField;
            }
            set {
                if ((object.ReferenceEquals(this.AttributeField, value) != true)) {
                    this.AttributeField = value;
                    this.RaisePropertyChanged("Attribute");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ConditionID {
            get {
                return this.ConditionIDField;
            }
            set {
                if ((this.ConditionIDField.Equals(value) != true)) {
                    this.ConditionIDField = value;
                    this.RaisePropertyChanged("ConditionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Context {
            get {
                return this.ContextField;
            }
            set {
                if ((object.ReferenceEquals(this.ContextField, value) != true)) {
                    this.ContextField = value;
                    this.RaisePropertyChanged("Context");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Delete {
            get {
                return this.DeleteField;
            }
            set {
                if ((this.DeleteField.Equals(value) != true)) {
                    this.DeleteField = value;
                    this.RaisePropertyChanged("Delete");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Resonance.Insight3.Web.CertonaService.ExpressionType ExpressionType {
            get {
                return this.ExpressionTypeField;
            }
            set {
                if ((this.ExpressionTypeField.Equals(value) != true)) {
                    this.ExpressionTypeField = value;
                    this.RaisePropertyChanged("ExpressionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Operator {
            get {
                return this.OperatorField;
            }
            set {
                if ((object.ReferenceEquals(this.OperatorField, value) != true)) {
                    this.OperatorField = value;
                    this.RaisePropertyChanged("Operator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PercentOrUnits {
            get {
                return this.PercentOrUnitsField;
            }
            set {
                if ((object.ReferenceEquals(this.PercentOrUnitsField, value) != true)) {
                    this.PercentOrUnitsField = value;
                    this.RaisePropertyChanged("PercentOrUnits");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlusOrMinus {
            get {
                return this.PlusOrMinusField;
            }
            set {
                if ((object.ReferenceEquals(this.PlusOrMinusField, value) != true)) {
                    this.PlusOrMinusField = value;
                    this.RaisePropertyChanged("PlusOrMinus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VExpressionID {
            get {
                return this.VExpressionIDField;
            }
            set {
                if ((this.VExpressionIDField.Equals(value) != true)) {
                    this.VExpressionIDField = value;
                    this.RaisePropertyChanged("VExpressionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExpressionType", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Enums")]
    public enum ExpressionType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Filter = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Condition = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseBase", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Respons" +
        "eObjects")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetSchemeNumberOfItemsByExperienceResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetSchemeDetailsResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetSchemeContextResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetSchemeEventContextResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.AuthenticateUserResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetUserAccountApplicationFeaturesResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.SetUserSettingsResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetModelResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetModelsResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetSegmentItemsResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetToolsListResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetStatusListResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetReportsListResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetContentPanelResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetAccountsByUserResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetAccountExplorerStatusResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetPanelBarStatesResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetAccountExplorerTreeResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetAssetExplorerTreeResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetPanelBarWidthResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetApplicationRemarketingCampaignsResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetRemarketingCampaignDetailsResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.UpdateRemarketingCampaignStatusesResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.ActivateRemarketingCampaignResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.CreateRemarketingCampaignResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.UpdateRemarketingCampaignResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetApplicationFrequencyCapResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetAllAbandonmentTypesResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetAllAbandonmentFiltersResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetAllAbandonmentIntervalsResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetAllDeliveryMethodsResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetAllServiceHeadersResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetAllServiceProtocolsResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetAllServiceProtocolsAvailableResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetAllServiceTypesResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetCatalogsForApplicationResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetCatalogCurrencyFieldsResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetRemarketingEmailSchemesResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetRemarketingESPConfigInfoResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.CheckESPCampaignIDUniquenessResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.CheckCampaignNameUniquenessResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetCampaignVariantRuleResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetAccountNameByApplicationIdResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetEmailServiceProviderConfigurationResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetVariantDetailsResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetVariantRulesResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetVariantBoostsResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetVariantSlotsResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.UpdateVariantStatusResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.UpdateVariantPriorityResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.UpdateVariantDetailsResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.CreateVariantResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.UpdateVariantModifiersResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.CreateRuleResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.UpdateRuleResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.SaveExpressionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetControlSetResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.DeleteRuleResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.DeleteExpressionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetContextsResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetRuleOperatorsResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetFilterAttributesResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetConditionAttributesResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetNavigationMappingResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetUserMappingResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetPackageDetailsResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetPackageSchemesResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetApplicationCatalogsByExperienceResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetApplicationDetailsResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetApplicationPackagesResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetApplicationCatalogsResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetApplicationSchemesResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetApplicationSegmentsResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetLastVariantPriorityByExperienceResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetExperienceBoostsResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetExperienceVariantsResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetExperienceDetailsResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.UpdateExperienceDetailsResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.UpdateExperienceModifiersResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.UpdateExperienceTrafficResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.CreateExperienceResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetCatalogDetailsResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetCatalogItemResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetCatalogItemsResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetCatalogRuleContextsResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetCatalogByRuleResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetCatalogMappingFromResonanceFieldResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetRecommendationTypesResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetReportingDataLastUpdatedResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetTrendsDataResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Resonance.Insight3.Web.CertonaService.GetSchemeExperiencesResponse))]
    public partial class ResponseBase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.ErrorResult> ErrorsField;
        
        private bool SuccessField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.ErrorResult> Errors {
            get {
                return this.ErrorsField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorsField, value) != true)) {
                    this.ErrorsField = value;
                    this.RaisePropertyChanged("Errors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool Success {
            get {
                return this.SuccessField;
            }
            set {
                if ((this.SuccessField.Equals(value) != true)) {
                    this.SuccessField = value;
                    this.RaisePropertyChanged("Success");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetSchemeNumberOfItemsByExperienceResponse", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Respons" +
        "eObjects.Scheme")]
    [System.SerializableAttribute()]
    public partial class GetSchemeNumberOfItemsByExperienceResponse : Resonance.Insight3.Web.CertonaService.ResponseBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> NumberOfItemsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> NumberOfItems {
            get {
                return this.NumberOfItemsField;
            }
            set {
                if ((this.NumberOfItemsField.Equals(value) != true)) {
                    this.NumberOfItemsField = value;
                    this.RaisePropertyChanged("NumberOfItems");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetSchemeDetailsResponse", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Respons" +
        "eObjects.Scheme")]
    [System.SerializableAttribute()]
    public partial class GetSchemeDetailsResponse : Resonance.Insight3.Web.CertonaService.ResponseBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Resonance.Insight3.Web.CertonaService.SchemeDetailsDTO SchemeDetailsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Resonance.Insight3.Web.CertonaService.SchemeDetailsDTO SchemeDetails {
            get {
                return this.SchemeDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.SchemeDetailsField, value) != true)) {
                    this.SchemeDetailsField = value;
                    this.RaisePropertyChanged("SchemeDetails");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetSchemeContextResponse", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Respons" +
        "eObjects.Scheme")]
    [System.SerializableAttribute()]
    public partial class GetSchemeContextResponse : Resonance.Insight3.Web.CertonaService.ResponseBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.SchemeContextDTO> SchemeEventsContextsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.SchemeContextDTO> SchemeEventsContexts {
            get {
                return this.SchemeEventsContextsField;
            }
            set {
                if ((object.ReferenceEquals(this.SchemeEventsContextsField, value) != true)) {
                    this.SchemeEventsContextsField = value;
                    this.RaisePropertyChanged("SchemeEventsContexts");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetSchemeEventContextResponse", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Respons" +
        "eObjects.Scheme")]
    [System.SerializableAttribute()]
    public partial class GetSchemeEventContextResponse : Resonance.Insight3.Web.CertonaService.ResponseBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.SchemeEventContextDTO> SchemeEventsContextsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.SchemeEventContextDTO> SchemeEventsContexts {
            get {
                return this.SchemeEventsContextsField;
            }
            set {
                if ((object.ReferenceEquals(this.SchemeEventsContextsField, value) != true)) {
                    this.SchemeEventsContextsField = value;
                    this.RaisePropertyChanged("SchemeEventsContexts");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AuthenticateUserResponse", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Respons" +
        "eObjects.Administration")]
    [System.SerializableAttribute()]
    public partial class AuthenticateUserResponse : Resonance.Insight3.Web.CertonaService.ResponseBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Resonance.Insight3.Web.CertonaService.UserDTO UserField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Resonance.Insight3.Web.CertonaService.UserDTO User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetUserAccountApplicationFeaturesResponse", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Respons" +
        "eObjects.Administration")]
    [System.SerializableAttribute()]
    public partial class GetUserAccountApplicationFeaturesResponse : Resonance.Insight3.Web.CertonaService.ResponseBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.AccountDTO> AccountsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.AccountDTO> Accounts {
            get {
                return this.AccountsField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountsField, value) != true)) {
                    this.AccountsField = value;
                    this.RaisePropertyChanged("Accounts");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SetUserSettingsResponse", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Respons" +
        "eObjects.Administration")]
    [System.SerializableAttribute()]
    public partial class SetUserSettingsResponse : Resonance.Insight3.Web.CertonaService.ResponseBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetModelResponse", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Respons" +
        "eObjects.Model")]
    [System.SerializableAttribute()]
    public partial class GetModelResponse : Resonance.Insight3.Web.CertonaService.ResponseBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Resonance.Insight3.Web.CertonaService.ModelDTO ModelField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Resonance.Insight3.Web.CertonaService.ModelDTO Model {
            get {
                return this.ModelField;
            }
            set {
                if ((object.ReferenceEquals(this.ModelField, value) != true)) {
                    this.ModelField = value;
                    this.RaisePropertyChanged("Model");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetModelsResponse", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Respons" +
        "eObjects.Model")]
    [System.SerializableAttribute()]
    public partial class GetModelsResponse : Resonance.Insight3.Web.CertonaService.ResponseBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.ModelDTO> ModelsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.ModelDTO> Models {
            get {
                return this.ModelsField;
            }
            set {
                if ((object.ReferenceEquals(this.ModelsField, value) != true)) {
                    this.ModelsField = value;
                    this.RaisePropertyChanged("Models");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetSegmentItemsResponse", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Respons" +
        "eObjects.Segment")]
    [System.SerializableAttribute()]
    public partial class GetSegmentItemsResponse : Resonance.Insight3.Web.CertonaService.ResponseBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.SegmentItemDTO> SegmentItemsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.SegmentItemDTO> SegmentItems {
            get {
                return this.SegmentItemsField;
            }
            set {
                if ((object.ReferenceEquals(this.SegmentItemsField, value) != true)) {
                    this.SegmentItemsField = value;
                    this.RaisePropertyChanged("SegmentItems");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetToolsListResponse", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Respons" +
        "eObjects.Framework")]
    [System.SerializableAttribute()]
    public partial class GetToolsListResponse : Resonance.Insight3.Web.CertonaService.ResponseBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.ToolDTO> ToolsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.ToolDTO> Tools {
            get {
                return this.ToolsField;
            }
            set {
                if ((object.ReferenceEquals(this.ToolsField, value) != true)) {
                    this.ToolsField = value;
                    this.RaisePropertyChanged("Tools");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetStatusListResponse", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Respons" +
        "eObjects.Framework")]
    [System.SerializableAttribute()]
    public partial class GetStatusListResponse : Resonance.Insight3.Web.CertonaService.ResponseBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.StatusDTO> StatusesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.StatusDTO> Statuses {
            get {
                return this.StatusesField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusesField, value) != true)) {
                    this.StatusesField = value;
                    this.RaisePropertyChanged("Statuses");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetReportsListResponse", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Respons" +
        "eObjects.Framework")]
    [System.SerializableAttribute()]
    public partial class GetReportsListResponse : Resonance.Insight3.Web.CertonaService.ResponseBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.ReportDTO> ReportsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.ReportDTO> Reports {
            get {
                return this.ReportsField;
            }
            set {
                if ((object.ReferenceEquals(this.ReportsField, value) != true)) {
                    this.ReportsField = value;
                    this.RaisePropertyChanged("Reports");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetContentPanelResponse", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Respons" +
        "eObjects.Framework")]
    [System.SerializableAttribute()]
    public partial class GetContentPanelResponse : Resonance.Insight3.Web.CertonaService.ResponseBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Resonance.Insight3.Web.CertonaService.ContentPanelDTO ContentPanelField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Resonance.Insight3.Web.CertonaService.ContentPanelDTO ContentPanel {
            get {
                return this.ContentPanelField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentPanelField, value) != true)) {
                    this.ContentPanelField = value;
                    this.RaisePropertyChanged("ContentPanel");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetAccountsByUserResponse", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Respons" +
        "eObjects.Framework")]
    [System.SerializableAttribute()]
    public partial class GetAccountsByUserResponse : Resonance.Insight3.Web.CertonaService.ResponseBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.AccountDTO> AccountsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.AccountDTO> Accounts {
            get {
                return this.AccountsField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountsField, value) != true)) {
                    this.AccountsField = value;
                    this.RaisePropertyChanged("Accounts");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetAccountExplorerStatusResponse", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Respons" +
        "eObjects.Framework")]
    [System.SerializableAttribute()]
    public partial class GetAccountExplorerStatusResponse : Resonance.Insight3.Web.CertonaService.ResponseBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<string> StatusValuesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<string> StatusValues {
            get {
                return this.StatusValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusValuesField, value) != true)) {
                    this.StatusValuesField = value;
                    this.RaisePropertyChanged("StatusValues");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetPanelBarStatesResponse", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Respons" +
        "eObjects.Framework")]
    [System.SerializableAttribute()]
    public partial class GetPanelBarStatesResponse : Resonance.Insight3.Web.CertonaService.ResponseBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.PanelBarDTO> ExpandedPanelBarsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.PanelBarDTO> ExpandedPanelBars {
            get {
                return this.ExpandedPanelBarsField;
            }
            set {
                if ((object.ReferenceEquals(this.ExpandedPanelBarsField, value) != true)) {
                    this.ExpandedPanelBarsField = value;
                    this.RaisePropertyChanged("ExpandedPanelBars");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetAccountExplorerTreeResponse", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Respons" +
        "eObjects.Framework")]
    [System.SerializableAttribute()]
    public partial class GetAccountExplorerTreeResponse : Resonance.Insight3.Web.CertonaService.ResponseBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.ClassificationDTO> ClassificationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.NodeDTO> NodesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.ClassificationDTO> Classifications {
            get {
                return this.ClassificationsField;
            }
            set {
                if ((object.ReferenceEquals(this.ClassificationsField, value) != true)) {
                    this.ClassificationsField = value;
                    this.RaisePropertyChanged("Classifications");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.NodeDTO> Nodes {
            get {
                return this.NodesField;
            }
            set {
                if ((object.ReferenceEquals(this.NodesField, value) != true)) {
                    this.NodesField = value;
                    this.RaisePropertyChanged("Nodes");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetAssetExplorerTreeResponse", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Respons" +
        "eObjects.Framework")]
    [System.SerializableAttribute()]
    public partial class GetAssetExplorerTreeResponse : Resonance.Insight3.Web.CertonaService.ResponseBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.NodeDTO> NodesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.NodeDTO> Nodes {
            get {
                return this.NodesField;
            }
            set {
                if ((object.ReferenceEquals(this.NodesField, value) != true)) {
                    this.NodesField = value;
                    this.RaisePropertyChanged("Nodes");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetPanelBarWidthResponse", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Respons" +
        "eObjects.Framework")]
    [System.SerializableAttribute()]
    public partial class GetPanelBarWidthResponse : Resonance.Insight3.Web.CertonaService.ResponseBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> WidthField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Width {
            get {
                return this.WidthField;
            }
            set {
                if ((this.WidthField.Equals(value) != true)) {
                    this.WidthField = value;
                    this.RaisePropertyChanged("Width");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetApplicationRemarketingCampaignsResponse", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Respons" +
        "eObjects.Remarketing")]
    [System.SerializableAttribute()]
    public partial class GetApplicationRemarketingCampaignsResponse : Resonance.Insight3.Web.CertonaService.ResponseBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.RemarketingCampaignSummaryDTO> RemarketingCampaignsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.RemarketingCampaignSummaryDTO> RemarketingCampaigns {
            get {
                return this.RemarketingCampaignsField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarketingCampaignsField, value) != true)) {
                    this.RemarketingCampaignsField = value;
                    this.RaisePropertyChanged("RemarketingCampaigns");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetRemarketingCampaignDetailsResponse", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Respons" +
        "eObjects.Remarketing")]
    [System.SerializableAttribute()]
    public partial class GetRemarketingCampaignDetailsResponse : Resonance.Insight3.Web.CertonaService.ResponseBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Resonance.Insight3.Web.CertonaService.RemarketingCampaignDTO RemarketingCampaignField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Resonance.Insight3.Web.CertonaService.RemarketingCampaignDTO RemarketingCampaign {
            get {
                return this.RemarketingCampaignField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarketingCampaignField, value) != true)) {
                    this.RemarketingCampaignField = value;
                    this.RaisePropertyChanged("RemarketingCampaign");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UpdateRemarketingCampaignStatusesResponse", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Respons" +
        "eObjects.Remarketing")]
    [System.SerializableAttribute()]
    public partial class UpdateRemarketingCampaignStatusesResponse : Resonance.Insight3.Web.CertonaService.ResponseBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ActivateRemarketingCampaignResponse", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Respons" +
        "eObjects.Remarketing")]
    [System.SerializableAttribute()]
    public partial class ActivateRemarketingCampaignResponse : Resonance.Insight3.Web.CertonaService.ResponseBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CreateRemarketingCampaignResponse", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Respons" +
        "eObjects.Remarketing")]
    [System.SerializableAttribute()]
    public partial class CreateRemarketingCampaignResponse : Resonance.Insight3.Web.CertonaService.ResponseBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RemarketingCampaignIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RemarketingCampaignID {
            get {
                return this.RemarketingCampaignIDField;
            }
            set {
                if ((this.RemarketingCampaignIDField.Equals(value) != true)) {
                    this.RemarketingCampaignIDField = value;
                    this.RaisePropertyChanged("RemarketingCampaignID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UpdateRemarketingCampaignResponse", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Respons" +
        "eObjects.Remarketing")]
    [System.SerializableAttribute()]
    public partial class UpdateRemarketingCampaignResponse : Resonance.Insight3.Web.CertonaService.ResponseBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetApplicationFrequencyCapResponse", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Respons" +
        "eObjects.Remarketing")]
    [System.SerializableAttribute()]
    public partial class GetApplicationFrequencyCapResponse : Resonance.Insight3.Web.CertonaService.ResponseBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Resonance.Insight3.Web.CertonaService.ApplicationFrequencyCapDTO FrequencyCapField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Resonance.Insight3.Web.CertonaService.ApplicationFrequencyCapDTO FrequencyCap {
            get {
                return this.FrequencyCapField;
            }
            set {
                if ((object.ReferenceEquals(this.FrequencyCapField, value) != true)) {
                    this.FrequencyCapField = value;
                    this.RaisePropertyChanged("FrequencyCap");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetAllAbandonmentTypesResponse", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Respons" +
        "eObjects.Remarketing")]
    [System.SerializableAttribute()]
    public partial class GetAllAbandonmentTypesResponse : Resonance.Insight3.Web.CertonaService.ResponseBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.RemarketingAbandonmentDTO> AbandonmentTypesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.RemarketingAbandonmentDTO> AbandonmentTypes {
            get {
                return this.AbandonmentTypesField;
            }
            set {
                if ((object.ReferenceEquals(this.AbandonmentTypesField, value) != true)) {
                    this.AbandonmentTypesField = value;
                    this.RaisePropertyChanged("AbandonmentTypes");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetAllAbandonmentFiltersResponse", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Respons" +
        "eObjects.Remarketing")]
    [System.SerializableAttribute()]
    public partial class GetAllAbandonmentFiltersResponse : Resonance.Insight3.Web.CertonaService.ResponseBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.RemarketingAbandonmentFilterDTO> AbandonmentFiltersField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.RemarketingAbandonmentFilterDTO> AbandonmentFilters {
            get {
                return this.AbandonmentFiltersField;
            }
            set {
                if ((object.ReferenceEquals(this.AbandonmentFiltersField, value) != true)) {
                    this.AbandonmentFiltersField = value;
                    this.RaisePropertyChanged("AbandonmentFilters");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetAllAbandonmentIntervalsResponse", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Respons" +
        "eObjects.Remarketing")]
    [System.SerializableAttribute()]
    public partial class GetAllAbandonmentIntervalsResponse : Resonance.Insight3.Web.CertonaService.ResponseBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.RemarketingAbandonmentIntervalDTO> AbandonmentIntervalsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.RemarketingAbandonmentIntervalDTO> AbandonmentIntervals {
            get {
                return this.AbandonmentIntervalsField;
            }
            set {
                if ((object.ReferenceEquals(this.AbandonmentIntervalsField, value) != true)) {
                    this.AbandonmentIntervalsField = value;
                    this.RaisePropertyChanged("AbandonmentIntervals");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetAllDeliveryMethodsResponse", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Respons" +
        "eObjects.Remarketing")]
    [System.SerializableAttribute()]
    public partial class GetAllDeliveryMethodsResponse : Resonance.Insight3.Web.CertonaService.ResponseBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.RemarketingDeliveryMethodDTO> DeliveryMethodsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.RemarketingDeliveryMethodDTO> DeliveryMethods {
            get {
                return this.DeliveryMethodsField;
            }
            set {
                if ((object.ReferenceEquals(this.DeliveryMethodsField, value) != true)) {
                    this.DeliveryMethodsField = value;
                    this.RaisePropertyChanged("DeliveryMethods");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetAllServiceHeadersResponse", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Respons" +
        "eObjects.Remarketing")]
    [System.SerializableAttribute()]
    public partial class GetAllServiceHeadersResponse : Resonance.Insight3.Web.CertonaService.ResponseBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.RemarketingServiceHeaderDTO> ServiceHeadersField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.RemarketingServiceHeaderDTO> ServiceHeaders {
            get {
                return this.ServiceHeadersField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceHeadersField, value) != true)) {
                    this.ServiceHeadersField = value;
                    this.RaisePropertyChanged("ServiceHeaders");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetAllServiceProtocolsResponse", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Respons" +
        "eObjects.Remarketing")]
    [System.SerializableAttribute()]
    public partial class GetAllServiceProtocolsResponse : Resonance.Insight3.Web.CertonaService.ResponseBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.RemarketingServiceProtocolDTO> ServiceProtocolsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.RemarketingServiceProtocolDTO> ServiceProtocols {
            get {
                return this.ServiceProtocolsField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceProtocolsField, value) != true)) {
                    this.ServiceProtocolsField = value;
                    this.RaisePropertyChanged("ServiceProtocols");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetAllServiceProtocolsAvailableResponse", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Respons" +
        "eObjects.Remarketing")]
    [System.SerializableAttribute()]
    public partial class GetAllServiceProtocolsAvailableResponse : Resonance.Insight3.Web.CertonaService.ResponseBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.RemarketingServiceProtocolAvailableDTO> ServiceProtocolsAvailableField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.RemarketingServiceProtocolAvailableDTO> ServiceProtocolsAvailable {
            get {
                return this.ServiceProtocolsAvailableField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceProtocolsAvailableField, value) != true)) {
                    this.ServiceProtocolsAvailableField = value;
                    this.RaisePropertyChanged("ServiceProtocolsAvailable");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetAllServiceTypesResponse", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Respons" +
        "eObjects.Remarketing")]
    [System.SerializableAttribute()]
    public partial class GetAllServiceTypesResponse : Resonance.Insight3.Web.CertonaService.ResponseBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.RemarketingServiceTypeDTO> ServiceTypesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.RemarketingServiceTypeDTO> ServiceTypes {
            get {
                return this.ServiceTypesField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceTypesField, value) != true)) {
                    this.ServiceTypesField = value;
                    this.RaisePropertyChanged("ServiceTypes");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetCatalogsForApplicationResponse", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Respons" +
        "eObjects.Remarketing")]
    [System.SerializableAttribute()]
    public partial class GetCatalogsForApplicationResponse : Resonance.Insight3.Web.CertonaService.ResponseBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.RemarketingCatalogDTO> CatalogsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.RemarketingCatalogDTO> Catalogs {
            get {
                return this.CatalogsField;
            }
            set {
                if ((object.ReferenceEquals(this.CatalogsField, value) != true)) {
                    this.CatalogsField = value;
                    this.RaisePropertyChanged("Catalogs");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetCatalogCurrencyFieldsResponse", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Respons" +
        "eObjects.Remarketing")]
    [System.SerializableAttribute()]
    public partial class GetCatalogCurrencyFieldsResponse : Resonance.Insight3.Web.CertonaService.ResponseBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.CatalogCurrencyFieldDTO> CurrencyFieldsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.CatalogCurrencyFieldDTO> CurrencyFields {
            get {
                return this.CurrencyFieldsField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyFieldsField, value) != true)) {
                    this.CurrencyFieldsField = value;
                    this.RaisePropertyChanged("CurrencyFields");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetRemarketingEmailSchemesResponse", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Respons" +
        "eObjects.Remarketing")]
    [System.SerializableAttribute()]
    public partial class GetRemarketingEmailSchemesResponse : Resonance.Insight3.Web.CertonaService.ResponseBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.RemarketingEmailSchemeDTO> EmailSchemesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.RemarketingEmailSchemeDTO> EmailSchemes {
            get {
                return this.EmailSchemesField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailSchemesField, value) != true)) {
                    this.EmailSchemesField = value;
                    this.RaisePropertyChanged("EmailSchemes");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetRemarketingESPConfigInfoResponse", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Respons" +
        "eObjects.Remarketing")]
    [System.SerializableAttribute()]
    public partial class GetRemarketingESPConfigInfoResponse : Resonance.Insight3.Web.CertonaService.ResponseBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.RemarketingESPConfigInfoDTO> EspConfigInfosField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.RemarketingESPConfigInfoDTO> EspConfigInfos {
            get {
                return this.EspConfigInfosField;
            }
            set {
                if ((object.ReferenceEquals(this.EspConfigInfosField, value) != true)) {
                    this.EspConfigInfosField = value;
                    this.RaisePropertyChanged("EspConfigInfos");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CheckESPCampaignIDUniquenessResponse", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Respons" +
        "eObjects.Remarketing")]
    [System.SerializableAttribute()]
    public partial class CheckESPCampaignIDUniquenessResponse : Resonance.Insight3.Web.CertonaService.ResponseBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsUniqueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsUnique {
            get {
                return this.IsUniqueField;
            }
            set {
                if ((this.IsUniqueField.Equals(value) != true)) {
                    this.IsUniqueField = value;
                    this.RaisePropertyChanged("IsUnique");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CheckCampaignNameUniquenessResponse", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Respons" +
        "eObjects.Remarketing")]
    [System.SerializableAttribute()]
    public partial class CheckCampaignNameUniquenessResponse : Resonance.Insight3.Web.CertonaService.ResponseBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsUniqueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsUnique {
            get {
                return this.IsUniqueField;
            }
            set {
                if ((this.IsUniqueField.Equals(value) != true)) {
                    this.IsUniqueField = value;
                    this.RaisePropertyChanged("IsUnique");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetCampaignVariantRuleResponse", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Respons" +
        "eObjects.Remarketing")]
    [System.SerializableAttribute()]
    public partial class GetCampaignVariantRuleResponse : Resonance.Insight3.Web.CertonaService.ResponseBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Resonance.Insight3.Web.CertonaService.RemarketingCampaignVariantRuleDTO VariantRuleField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Resonance.Insight3.Web.CertonaService.RemarketingCampaignVariantRuleDTO VariantRule {
            get {
                return this.VariantRuleField;
            }
            set {
                if ((object.ReferenceEquals(this.VariantRuleField, value) != true)) {
                    this.VariantRuleField = value;
                    this.RaisePropertyChanged("VariantRule");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetAccountNameByApplicationIdResponse", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Respons" +
        "eObjects.Remarketing")]
    [System.SerializableAttribute()]
    public partial class GetAccountNameByApplicationIdResponse : Resonance.Insight3.Web.CertonaService.ResponseBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountName {
            get {
                return this.AccountNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountNameField, value) != true)) {
                    this.AccountNameField = value;
                    this.RaisePropertyChanged("AccountName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetEmailServiceProviderConfigurationResponse", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Respons" +
        "eObjects.Remarketing")]
    [System.SerializableAttribute()]
    public partial class GetEmailServiceProviderConfigurationResponse : Resonance.Insight3.Web.CertonaService.ResponseBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Resonance.Insight3.Web.CertonaService.EmailServiceProviderConfigurationDTO EmailServiceProviderConfigurationField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Resonance.Insight3.Web.CertonaService.EmailServiceProviderConfigurationDTO EmailServiceProviderConfiguration {
            get {
                return this.EmailServiceProviderConfigurationField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailServiceProviderConfigurationField, value) != true)) {
                    this.EmailServiceProviderConfigurationField = value;
                    this.RaisePropertyChanged("EmailServiceProviderConfiguration");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetVariantDetailsResponse", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Respons" +
        "eObjects.Variant")]
    [System.SerializableAttribute()]
    public partial class GetVariantDetailsResponse : Resonance.Insight3.Web.CertonaService.ResponseBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Resonance.Insight3.Web.CertonaService.VariantDetailsDTO VariantDetailsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Resonance.Insight3.Web.CertonaService.VariantDetailsDTO VariantDetails {
            get {
                return this.VariantDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.VariantDetailsField, value) != true)) {
                    this.VariantDetailsField = value;
                    this.RaisePropertyChanged("VariantDetails");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetVariantRulesResponse", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Respons" +
        "eObjects.Variant")]
    [System.SerializableAttribute()]
    public partial class GetVariantRulesResponse : Resonance.Insight3.Web.CertonaService.ResponseBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.VariantRuleDTO> RulesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.VariantRuleDTO> Rules {
            get {
                return this.RulesField;
            }
            set {
                if ((object.ReferenceEquals(this.RulesField, value) != true)) {
                    this.RulesField = value;
                    this.RaisePropertyChanged("Rules");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetVariantBoostsResponse", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Respons" +
        "eObjects.Variant")]
    [System.SerializableAttribute()]
    public partial class GetVariantBoostsResponse : Resonance.Insight3.Web.CertonaService.ResponseBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.VariantBiasDTO> VariantBiasesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Resonance.Insight3.Web.CertonaService.VariantDetailsDTO VariantDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.VariantModelDTO> VariantModelsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.VariantBiasDTO> VariantBiases {
            get {
                return this.VariantBiasesField;
            }
            set {
                if ((object.ReferenceEquals(this.VariantBiasesField, value) != true)) {
                    this.VariantBiasesField = value;
                    this.RaisePropertyChanged("VariantBiases");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Resonance.Insight3.Web.CertonaService.VariantDetailsDTO VariantDetails {
            get {
                return this.VariantDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.VariantDetailsField, value) != true)) {
                    this.VariantDetailsField = value;
                    this.RaisePropertyChanged("VariantDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.VariantModelDTO> VariantModels {
            get {
                return this.VariantModelsField;
            }
            set {
                if ((object.ReferenceEquals(this.VariantModelsField, value) != true)) {
                    this.VariantModelsField = value;
                    this.RaisePropertyChanged("VariantModels");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetVariantSlotsResponse", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Respons" +
        "eObjects.Variant")]
    [System.SerializableAttribute()]
    public partial class GetVariantSlotsResponse : Resonance.Insight3.Web.CertonaService.ResponseBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<int> SlotsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<int> Slots {
            get {
                return this.SlotsField;
            }
            set {
                if ((object.ReferenceEquals(this.SlotsField, value) != true)) {
                    this.SlotsField = value;
                    this.RaisePropertyChanged("Slots");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UpdateVariantStatusResponse", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Respons" +
        "eObjects.Variant")]
    [System.SerializableAttribute()]
    public partial class UpdateVariantStatusResponse : Resonance.Insight3.Web.CertonaService.ResponseBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UpdateVariantPriorityResponse", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Respons" +
        "eObjects.Variant")]
    [System.SerializableAttribute()]
    public partial class UpdateVariantPriorityResponse : Resonance.Insight3.Web.CertonaService.ResponseBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UpdateVariantDetailsResponse", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Respons" +
        "eObjects.Variant")]
    [System.SerializableAttribute()]
    public partial class UpdateVariantDetailsResponse : Resonance.Insight3.Web.CertonaService.ResponseBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CreateVariantResponse", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Respons" +
        "eObjects.Variant")]
    [System.SerializableAttribute()]
    public partial class CreateVariantResponse : Resonance.Insight3.Web.CertonaService.ResponseBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VariantIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VariantID {
            get {
                return this.VariantIDField;
            }
            set {
                if ((this.VariantIDField.Equals(value) != true)) {
                    this.VariantIDField = value;
                    this.RaisePropertyChanged("VariantID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UpdateVariantModifiersResponse", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Respons" +
        "eObjects.Variant")]
    [System.SerializableAttribute()]
    public partial class UpdateVariantModifiersResponse : Resonance.Insight3.Web.CertonaService.ResponseBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CreateRuleResponse", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Respons" +
        "eObjects.BusinessRule")]
    [System.SerializableAttribute()]
    public partial class CreateRuleResponse : Resonance.Insight3.Web.CertonaService.ResponseBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RuleIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RuleID {
            get {
                return this.RuleIDField;
            }
            set {
                if ((this.RuleIDField.Equals(value) != true)) {
                    this.RuleIDField = value;
                    this.RaisePropertyChanged("RuleID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UpdateRuleResponse", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Respons" +
        "eObjects.BusinessRule")]
    [System.SerializableAttribute()]
    public partial class UpdateRuleResponse : Resonance.Insight3.Web.CertonaService.ResponseBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SaveExpressionResponse", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Respons" +
        "eObjects.BusinessRule")]
    [System.SerializableAttribute()]
    public partial class SaveExpressionResponse : Resonance.Insight3.Web.CertonaService.ResponseBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ConditionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ExpressionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RuleIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ConditionID {
            get {
                return this.ConditionIDField;
            }
            set {
                if ((this.ConditionIDField.Equals(value) != true)) {
                    this.ConditionIDField = value;
                    this.RaisePropertyChanged("ConditionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ExpressionID {
            get {
                return this.ExpressionIDField;
            }
            set {
                if ((this.ExpressionIDField.Equals(value) != true)) {
                    this.ExpressionIDField = value;
                    this.RaisePropertyChanged("ExpressionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RuleID {
            get {
                return this.RuleIDField;
            }
            set {
                if ((this.RuleIDField.Equals(value) != true)) {
                    this.RuleIDField = value;
                    this.RaisePropertyChanged("RuleID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetControlSetResponse", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Respons" +
        "eObjects.BusinessRule")]
    [System.SerializableAttribute()]
    public partial class GetControlSetResponse : Resonance.Insight3.Web.CertonaService.ResponseBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Resonance.Insight3.Web.CertonaService.ControlSet ControlSetField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Resonance.Insight3.Web.CertonaService.ControlSet ControlSet {
            get {
                return this.ControlSetField;
            }
            set {
                if ((object.ReferenceEquals(this.ControlSetField, value) != true)) {
                    this.ControlSetField = value;
                    this.RaisePropertyChanged("ControlSet");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeleteRuleResponse", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Respons" +
        "eObjects.BusinessRule")]
    [System.SerializableAttribute()]
    public partial class DeleteRuleResponse : Resonance.Insight3.Web.CertonaService.ResponseBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeleteExpressionResponse", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Respons" +
        "eObjects.BusinessRule")]
    [System.SerializableAttribute()]
    public partial class DeleteExpressionResponse : Resonance.Insight3.Web.CertonaService.ResponseBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Resonance.Insight3.Web.CertonaService.ExpressionDTO DetailsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Resonance.Insight3.Web.CertonaService.ExpressionDTO Details {
            get {
                return this.DetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.DetailsField, value) != true)) {
                    this.DetailsField = value;
                    this.RaisePropertyChanged("Details");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetContextsResponse", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Respons" +
        "eObjects.BusinessRule")]
    [System.SerializableAttribute()]
    public partial class GetContextsResponse : Resonance.Insight3.Web.CertonaService.ResponseBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.ContextDTO> ContextsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.ContextDTO> Contexts {
            get {
                return this.ContextsField;
            }
            set {
                if ((object.ReferenceEquals(this.ContextsField, value) != true)) {
                    this.ContextsField = value;
                    this.RaisePropertyChanged("Contexts");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetRuleOperatorsResponse", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Respons" +
        "eObjects.BusinessRule")]
    [System.SerializableAttribute()]
    public partial class GetRuleOperatorsResponse : Resonance.Insight3.Web.CertonaService.ResponseBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.RuleOperatorDTO> RuleOperatorsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.RuleOperatorDTO> RuleOperators {
            get {
                return this.RuleOperatorsField;
            }
            set {
                if ((object.ReferenceEquals(this.RuleOperatorsField, value) != true)) {
                    this.RuleOperatorsField = value;
                    this.RaisePropertyChanged("RuleOperators");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetFilterAttributesResponse", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Respons" +
        "eObjects.BusinessRule")]
    [System.SerializableAttribute()]
    public partial class GetFilterAttributesResponse : Resonance.Insight3.Web.CertonaService.ResponseBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.CatalogMappingFieldDTO> CatalogFieldsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.CatalogMappingFieldDTO> CatalogFields {
            get {
                return this.CatalogFieldsField;
            }
            set {
                if ((object.ReferenceEquals(this.CatalogFieldsField, value) != true)) {
                    this.CatalogFieldsField = value;
                    this.RaisePropertyChanged("CatalogFields");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetConditionAttributesResponse", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Respons" +
        "eObjects.BusinessRule")]
    [System.SerializableAttribute()]
    public partial class GetConditionAttributesResponse : Resonance.Insight3.Web.CertonaService.ResponseBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.CatalogMappingFieldDTO> CatalogFieldsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.CatalogMappingFieldDTO> CatalogFields {
            get {
                return this.CatalogFieldsField;
            }
            set {
                if ((object.ReferenceEquals(this.CatalogFieldsField, value) != true)) {
                    this.CatalogFieldsField = value;
                    this.RaisePropertyChanged("CatalogFields");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetNavigationMappingResponse", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Respons" +
        "eObjects.BusinessRule")]
    [System.SerializableAttribute()]
    public partial class GetNavigationMappingResponse : Resonance.Insight3.Web.CertonaService.ResponseBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<string> CustomerFieldsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<string> CustomerFields {
            get {
                return this.CustomerFieldsField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerFieldsField, value) != true)) {
                    this.CustomerFieldsField = value;
                    this.RaisePropertyChanged("CustomerFields");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetUserMappingResponse", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Respons" +
        "eObjects.BusinessRule")]
    [System.SerializableAttribute()]
    public partial class GetUserMappingResponse : Resonance.Insight3.Web.CertonaService.ResponseBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<string> CustomerFieldsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<string> CustomerFields {
            get {
                return this.CustomerFieldsField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerFieldsField, value) != true)) {
                    this.CustomerFieldsField = value;
                    this.RaisePropertyChanged("CustomerFields");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetPackageDetailsResponse", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Respons" +
        "eObjects.Package")]
    [System.SerializableAttribute()]
    public partial class GetPackageDetailsResponse : Resonance.Insight3.Web.CertonaService.ResponseBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Resonance.Insight3.Web.CertonaService.PackageDetailsDTO PackageDetailsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Resonance.Insight3.Web.CertonaService.PackageDetailsDTO PackageDetails {
            get {
                return this.PackageDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.PackageDetailsField, value) != true)) {
                    this.PackageDetailsField = value;
                    this.RaisePropertyChanged("PackageDetails");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetPackageSchemesResponse", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Respons" +
        "eObjects.Package")]
    [System.SerializableAttribute()]
    public partial class GetPackageSchemesResponse : Resonance.Insight3.Web.CertonaService.ResponseBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.PackageSchemesDTO> PackageSchemesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.PackageSchemesDTO> PackageSchemes {
            get {
                return this.PackageSchemesField;
            }
            set {
                if ((object.ReferenceEquals(this.PackageSchemesField, value) != true)) {
                    this.PackageSchemesField = value;
                    this.RaisePropertyChanged("PackageSchemes");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetApplicationCatalogsByExperienceResponse", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Respons" +
        "eObjects.Application")]
    [System.SerializableAttribute()]
    public partial class GetApplicationCatalogsByExperienceResponse : Resonance.Insight3.Web.CertonaService.ResponseBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.CatalogDTO> CatalogsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.CatalogDTO> Catalogs {
            get {
                return this.CatalogsField;
            }
            set {
                if ((object.ReferenceEquals(this.CatalogsField, value) != true)) {
                    this.CatalogsField = value;
                    this.RaisePropertyChanged("Catalogs");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetApplicationDetailsResponse", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Respons" +
        "eObjects.Application")]
    [System.SerializableAttribute()]
    public partial class GetApplicationDetailsResponse : Resonance.Insight3.Web.CertonaService.ResponseBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Resonance.Insight3.Web.CertonaService.ApplicationDetailsDTO ApplicationDetailsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Resonance.Insight3.Web.CertonaService.ApplicationDetailsDTO ApplicationDetails {
            get {
                return this.ApplicationDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.ApplicationDetailsField, value) != true)) {
                    this.ApplicationDetailsField = value;
                    this.RaisePropertyChanged("ApplicationDetails");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetApplicationPackagesResponse", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Respons" +
        "eObjects.Application")]
    [System.SerializableAttribute()]
    public partial class GetApplicationPackagesResponse : Resonance.Insight3.Web.CertonaService.ResponseBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.ApplicationPackagesDTO> ApplicationPackagesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.ApplicationPackagesDTO> ApplicationPackages {
            get {
                return this.ApplicationPackagesField;
            }
            set {
                if ((object.ReferenceEquals(this.ApplicationPackagesField, value) != true)) {
                    this.ApplicationPackagesField = value;
                    this.RaisePropertyChanged("ApplicationPackages");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetApplicationCatalogsResponse", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Respons" +
        "eObjects.Application")]
    [System.SerializableAttribute()]
    public partial class GetApplicationCatalogsResponse : Resonance.Insight3.Web.CertonaService.ResponseBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.CatalogDTO> CatalogsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.CatalogDTO> Catalogs {
            get {
                return this.CatalogsField;
            }
            set {
                if ((object.ReferenceEquals(this.CatalogsField, value) != true)) {
                    this.CatalogsField = value;
                    this.RaisePropertyChanged("Catalogs");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetApplicationSchemesResponse", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Respons" +
        "eObjects.Application")]
    [System.SerializableAttribute()]
    public partial class GetApplicationSchemesResponse : Resonance.Insight3.Web.CertonaService.ResponseBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.SchemeDTO> SchemesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.SchemeDTO> Schemes {
            get {
                return this.SchemesField;
            }
            set {
                if ((object.ReferenceEquals(this.SchemesField, value) != true)) {
                    this.SchemesField = value;
                    this.RaisePropertyChanged("Schemes");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetApplicationSegmentsResponse", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Respons" +
        "eObjects.Application")]
    [System.SerializableAttribute()]
    public partial class GetApplicationSegmentsResponse : Resonance.Insight3.Web.CertonaService.ResponseBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<string> SegmentsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<string> Segments {
            get {
                return this.SegmentsField;
            }
            set {
                if ((object.ReferenceEquals(this.SegmentsField, value) != true)) {
                    this.SegmentsField = value;
                    this.RaisePropertyChanged("Segments");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetLastVariantPriorityByExperienceResponse", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Respons" +
        "eObjects.Experience")]
    [System.SerializableAttribute()]
    public partial class GetLastVariantPriorityByExperienceResponse : Resonance.Insight3.Web.CertonaService.ResponseBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LastPriorityField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LastPriority {
            get {
                return this.LastPriorityField;
            }
            set {
                if ((this.LastPriorityField.Equals(value) != true)) {
                    this.LastPriorityField = value;
                    this.RaisePropertyChanged("LastPriority");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetExperienceBoostsResponse", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Respons" +
        "eObjects.Experience")]
    [System.SerializableAttribute()]
    public partial class GetExperienceBoostsResponse : Resonance.Insight3.Web.CertonaService.ResponseBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Resonance.Insight3.Web.CertonaService.ExperienceDetailsDTO ExperienceDetailsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Resonance.Insight3.Web.CertonaService.ExperienceDetailsDTO ExperienceDetails {
            get {
                return this.ExperienceDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.ExperienceDetailsField, value) != true)) {
                    this.ExperienceDetailsField = value;
                    this.RaisePropertyChanged("ExperienceDetails");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetExperienceVariantsResponse", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Respons" +
        "eObjects.Experience")]
    [System.SerializableAttribute()]
    public partial class GetExperienceVariantsResponse : Resonance.Insight3.Web.CertonaService.ResponseBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.ExperienceVariantDTO> VariantsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.ExperienceVariantDTO> Variants {
            get {
                return this.VariantsField;
            }
            set {
                if ((object.ReferenceEquals(this.VariantsField, value) != true)) {
                    this.VariantsField = value;
                    this.RaisePropertyChanged("Variants");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetExperienceDetailsResponse", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Respons" +
        "eObjects.Experience")]
    [System.SerializableAttribute()]
    public partial class GetExperienceDetailsResponse : Resonance.Insight3.Web.CertonaService.ResponseBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Resonance.Insight3.Web.CertonaService.ExperienceDetailsDTO DetailsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Resonance.Insight3.Web.CertonaService.ExperienceDetailsDTO Details {
            get {
                return this.DetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.DetailsField, value) != true)) {
                    this.DetailsField = value;
                    this.RaisePropertyChanged("Details");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UpdateExperienceDetailsResponse", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Respons" +
        "eObjects.Experience")]
    [System.SerializableAttribute()]
    public partial class UpdateExperienceDetailsResponse : Resonance.Insight3.Web.CertonaService.ResponseBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UpdateExperienceModifiersResponse", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Respons" +
        "eObjects.Experience")]
    [System.SerializableAttribute()]
    public partial class UpdateExperienceModifiersResponse : Resonance.Insight3.Web.CertonaService.ResponseBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UpdateExperienceTrafficResponse", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Respons" +
        "eObjects.Experience")]
    [System.SerializableAttribute()]
    public partial class UpdateExperienceTrafficResponse : Resonance.Insight3.Web.CertonaService.ResponseBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CreateExperienceResponse", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Respons" +
        "eObjects.Experience")]
    [System.SerializableAttribute()]
    public partial class CreateExperienceResponse : Resonance.Insight3.Web.CertonaService.ResponseBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ExperienceIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ExperienceID {
            get {
                return this.ExperienceIDField;
            }
            set {
                if ((this.ExperienceIDField.Equals(value) != true)) {
                    this.ExperienceIDField = value;
                    this.RaisePropertyChanged("ExperienceID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetCatalogDetailsResponse", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Respons" +
        "eObjects.Catalog")]
    [System.SerializableAttribute()]
    public partial class GetCatalogDetailsResponse : Resonance.Insight3.Web.CertonaService.ResponseBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Resonance.Insight3.Web.CertonaService.CatalogDetailsDTO CatalogDetailsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Resonance.Insight3.Web.CertonaService.CatalogDetailsDTO CatalogDetails {
            get {
                return this.CatalogDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.CatalogDetailsField, value) != true)) {
                    this.CatalogDetailsField = value;
                    this.RaisePropertyChanged("CatalogDetails");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetCatalogItemResponse", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Respons" +
        "eObjects.Catalog")]
    [System.SerializableAttribute()]
    public partial class GetCatalogItemResponse : Resonance.Insight3.Web.CertonaService.ResponseBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Resonance.Insight3.Web.CertonaService.CatalogItemDTO CatalogItemField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Resonance.Insight3.Web.CertonaService.CatalogItemDTO CatalogItem {
            get {
                return this.CatalogItemField;
            }
            set {
                if ((object.ReferenceEquals(this.CatalogItemField, value) != true)) {
                    this.CatalogItemField = value;
                    this.RaisePropertyChanged("CatalogItem");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetCatalogItemsResponse", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Respons" +
        "eObjects.Catalog")]
    [System.SerializableAttribute()]
    public partial class GetCatalogItemsResponse : Resonance.Insight3.Web.CertonaService.ResponseBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.CatalogItemInfoDTO> ItemsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.CatalogItemInfoDTO> Items {
            get {
                return this.ItemsField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemsField, value) != true)) {
                    this.ItemsField = value;
                    this.RaisePropertyChanged("Items");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Total {
            get {
                return this.TotalField;
            }
            set {
                if ((this.TotalField.Equals(value) != true)) {
                    this.TotalField = value;
                    this.RaisePropertyChanged("Total");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetCatalogRuleContextsResponse", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Respons" +
        "eObjects.Catalog")]
    [System.SerializableAttribute()]
    public partial class GetCatalogRuleContextsResponse : Resonance.Insight3.Web.CertonaService.ResponseBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.CatalogRuleContextsDTO> DetailsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.CatalogRuleContextsDTO> Details {
            get {
                return this.DetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.DetailsField, value) != true)) {
                    this.DetailsField = value;
                    this.RaisePropertyChanged("Details");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetCatalogByRuleResponse", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Respons" +
        "eObjects.Catalog")]
    [System.SerializableAttribute()]
    public partial class GetCatalogByRuleResponse : Resonance.Insight3.Web.CertonaService.ResponseBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.CatalogByRuleDTO> DetailsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.CatalogByRuleDTO> Details {
            get {
                return this.DetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.DetailsField, value) != true)) {
                    this.DetailsField = value;
                    this.RaisePropertyChanged("Details");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetCatalogMappingFromResonanceFieldResponse", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Respons" +
        "eObjects.Catalog")]
    [System.SerializableAttribute()]
    public partial class GetCatalogMappingFromResonanceFieldResponse : Resonance.Insight3.Web.CertonaService.ResponseBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CatalogMappingField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CatalogMapping {
            get {
                return this.CatalogMappingField;
            }
            set {
                if ((object.ReferenceEquals(this.CatalogMappingField, value) != true)) {
                    this.CatalogMappingField = value;
                    this.RaisePropertyChanged("CatalogMapping");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetRecommendationTypesResponse", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Respons" +
        "eObjects.Catalog")]
    [System.SerializableAttribute()]
    public partial class GetRecommendationTypesResponse : Resonance.Insight3.Web.CertonaService.ResponseBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.RecommendationTypeDTO> RecommendationTypesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.RecommendationTypeDTO> RecommendationTypes {
            get {
                return this.RecommendationTypesField;
            }
            set {
                if ((object.ReferenceEquals(this.RecommendationTypesField, value) != true)) {
                    this.RecommendationTypesField = value;
                    this.RaisePropertyChanged("RecommendationTypes");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetReportingDataLastUpdatedResponse", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Respons" +
        "eObjects.Reporting")]
    [System.SerializableAttribute()]
    public partial class GetReportingDataLastUpdatedResponse : Resonance.Insight3.Web.CertonaService.ResponseBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Resonance.Insight3.Web.CertonaService.ReportingDataLastUpdatedDTO ReportingDataLastUpdatedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Resonance.Insight3.Web.CertonaService.ReportingDataLastUpdatedDTO ReportingDataLastUpdated {
            get {
                return this.ReportingDataLastUpdatedField;
            }
            set {
                if ((object.ReferenceEquals(this.ReportingDataLastUpdatedField, value) != true)) {
                    this.ReportingDataLastUpdatedField = value;
                    this.RaisePropertyChanged("ReportingDataLastUpdated");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetTrendsDataResponse", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Respons" +
        "eObjects.Reporting")]
    [System.SerializableAttribute()]
    public partial class GetTrendsDataResponse : Resonance.Insight3.Web.CertonaService.ResponseBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.TrendsDataDTO> TrendsDataField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.TrendsDataDTO> TrendsData {
            get {
                return this.TrendsDataField;
            }
            set {
                if ((object.ReferenceEquals(this.TrendsDataField, value) != true)) {
                    this.TrendsDataField = value;
                    this.RaisePropertyChanged("TrendsData");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetSchemeExperiencesResponse", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Respons" +
        "eObjects.Scheme")]
    [System.SerializableAttribute()]
    public partial class GetSchemeExperiencesResponse : Resonance.Insight3.Web.CertonaService.ResponseBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.SchemeExperienceDTO> ExperiencesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.SchemeExperienceDTO> Experiences {
            get {
                return this.ExperiencesField;
            }
            set {
                if ((object.ReferenceEquals(this.ExperiencesField, value) != true)) {
                    this.ExperiencesField = value;
                    this.RaisePropertyChanged("Experiences");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ErrorResult", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Domain")]
    [System.SerializableAttribute()]
    public partial class ErrorResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RemainingLoginAttemptsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Resonance.Insight3.Web.CertonaService.ServiceResultMessage ServiceResultMessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RemainingLoginAttempts {
            get {
                return this.RemainingLoginAttemptsField;
            }
            set {
                if ((this.RemainingLoginAttemptsField.Equals(value) != true)) {
                    this.RemainingLoginAttemptsField = value;
                    this.RaisePropertyChanged("RemainingLoginAttempts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Resonance.Insight3.Web.CertonaService.ServiceResultMessage ServiceResultMessage {
            get {
                return this.ServiceResultMessageField;
            }
            set {
                if ((this.ServiceResultMessageField.Equals(value) != true)) {
                    this.ServiceResultMessageField = value;
                    this.RaisePropertyChanged("ServiceResultMessage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SchemeExperienceDTO", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.DTOLibr" +
        "ary.Scheme")]
    [System.SerializableAttribute()]
    public partial class SchemeExperienceDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ExperienceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> TrafficField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ExperienceID {
            get {
                return this.ExperienceIDField;
            }
            set {
                if ((this.ExperienceIDField.Equals(value) != true)) {
                    this.ExperienceIDField = value;
                    this.RaisePropertyChanged("ExperienceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Traffic {
            get {
                return this.TrafficField;
            }
            set {
                if ((this.TrafficField.Equals(value) != true)) {
                    this.TrafficField = value;
                    this.RaisePropertyChanged("Traffic");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceResultMessage", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Enums")]
    public enum ServiceResultMessage : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LoginAccountDoesNotExist = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LoginInvalidCredentials = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LoginInvalidCredentialsWithCount = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LoginAttemptsExceeded = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SchemeDetailsDTO", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.DTOLibr" +
        "ary.Scheme")]
    [System.SerializableAttribute()]
    public partial class SchemeDetailsDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApplicationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CallbackField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomQueryStringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DefaultCatalogIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Icon_FilenameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> NumberOfItemsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> RecMethodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SchemeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SchemeTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Resonance.Insight3.Web.CertonaService.ItemStatuses StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ApplicationID {
            get {
                return this.ApplicationIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ApplicationIDField, value) != true)) {
                    this.ApplicationIDField = value;
                    this.RaisePropertyChanged("ApplicationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Callback {
            get {
                return this.CallbackField;
            }
            set {
                if ((object.ReferenceEquals(this.CallbackField, value) != true)) {
                    this.CallbackField = value;
                    this.RaisePropertyChanged("Callback");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomQueryString {
            get {
                return this.CustomQueryStringField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomQueryStringField, value) != true)) {
                    this.CustomQueryStringField = value;
                    this.RaisePropertyChanged("CustomQueryString");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DefaultCatalogID {
            get {
                return this.DefaultCatalogIDField;
            }
            set {
                if ((object.ReferenceEquals(this.DefaultCatalogIDField, value) != true)) {
                    this.DefaultCatalogIDField = value;
                    this.RaisePropertyChanged("DefaultCatalogID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Icon_Filename {
            get {
                return this.Icon_FilenameField;
            }
            set {
                if ((object.ReferenceEquals(this.Icon_FilenameField, value) != true)) {
                    this.Icon_FilenameField = value;
                    this.RaisePropertyChanged("Icon_Filename");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> NumberOfItems {
            get {
                return this.NumberOfItemsField;
            }
            set {
                if ((this.NumberOfItemsField.Equals(value) != true)) {
                    this.NumberOfItemsField = value;
                    this.RaisePropertyChanged("NumberOfItems");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> RecMethod {
            get {
                return this.RecMethodField;
            }
            set {
                if ((this.RecMethodField.Equals(value) != true)) {
                    this.RecMethodField = value;
                    this.RaisePropertyChanged("RecMethod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Scheme {
            get {
                return this.SchemeField;
            }
            set {
                if ((object.ReferenceEquals(this.SchemeField, value) != true)) {
                    this.SchemeField = value;
                    this.RaisePropertyChanged("Scheme");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SchemeType {
            get {
                return this.SchemeTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.SchemeTypeField, value) != true)) {
                    this.SchemeTypeField = value;
                    this.RaisePropertyChanged("SchemeType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Resonance.Insight3.Web.CertonaService.ItemStatuses Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SchemeContextDTO", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.DTOLibr" +
        "ary.Scheme")]
    [System.SerializableAttribute()]
    public partial class SchemeContextDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ContextIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ExcludeItemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ExcludeItemDaysPastField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ExcludeItemLastPagesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ExcludeItemMaxCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RulesDaysPastField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RulesLastPagesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RulesMaxCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> SourceObjectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SourceObjectDaysPastField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SourceObjectLastPagesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SourceObjectMaxCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ContextID {
            get {
                return this.ContextIDField;
            }
            set {
                if ((this.ContextIDField.Equals(value) != true)) {
                    this.ContextIDField = value;
                    this.RaisePropertyChanged("ContextID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ExcludeItem {
            get {
                return this.ExcludeItemField;
            }
            set {
                if ((this.ExcludeItemField.Equals(value) != true)) {
                    this.ExcludeItemField = value;
                    this.RaisePropertyChanged("ExcludeItem");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ExcludeItemDaysPast {
            get {
                return this.ExcludeItemDaysPastField;
            }
            set {
                if ((this.ExcludeItemDaysPastField.Equals(value) != true)) {
                    this.ExcludeItemDaysPastField = value;
                    this.RaisePropertyChanged("ExcludeItemDaysPast");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ExcludeItemLastPages {
            get {
                return this.ExcludeItemLastPagesField;
            }
            set {
                if ((this.ExcludeItemLastPagesField.Equals(value) != true)) {
                    this.ExcludeItemLastPagesField = value;
                    this.RaisePropertyChanged("ExcludeItemLastPages");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ExcludeItemMaxCount {
            get {
                return this.ExcludeItemMaxCountField;
            }
            set {
                if ((this.ExcludeItemMaxCountField.Equals(value) != true)) {
                    this.ExcludeItemMaxCountField = value;
                    this.RaisePropertyChanged("ExcludeItemMaxCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RulesDaysPast {
            get {
                return this.RulesDaysPastField;
            }
            set {
                if ((this.RulesDaysPastField.Equals(value) != true)) {
                    this.RulesDaysPastField = value;
                    this.RaisePropertyChanged("RulesDaysPast");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RulesLastPages {
            get {
                return this.RulesLastPagesField;
            }
            set {
                if ((this.RulesLastPagesField.Equals(value) != true)) {
                    this.RulesLastPagesField = value;
                    this.RaisePropertyChanged("RulesLastPages");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RulesMaxCount {
            get {
                return this.RulesMaxCountField;
            }
            set {
                if ((this.RulesMaxCountField.Equals(value) != true)) {
                    this.RulesMaxCountField = value;
                    this.RaisePropertyChanged("RulesMaxCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> SourceObject {
            get {
                return this.SourceObjectField;
            }
            set {
                if ((this.SourceObjectField.Equals(value) != true)) {
                    this.SourceObjectField = value;
                    this.RaisePropertyChanged("SourceObject");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SourceObjectDaysPast {
            get {
                return this.SourceObjectDaysPastField;
            }
            set {
                if ((this.SourceObjectDaysPastField.Equals(value) != true)) {
                    this.SourceObjectDaysPastField = value;
                    this.RaisePropertyChanged("SourceObjectDaysPast");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SourceObjectLastPages {
            get {
                return this.SourceObjectLastPagesField;
            }
            set {
                if ((this.SourceObjectLastPagesField.Equals(value) != true)) {
                    this.SourceObjectLastPagesField = value;
                    this.RaisePropertyChanged("SourceObjectLastPages");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SourceObjectMaxCount {
            get {
                return this.SourceObjectMaxCountField;
            }
            set {
                if ((this.SourceObjectMaxCountField.Equals(value) != true)) {
                    this.SourceObjectMaxCountField = value;
                    this.RaisePropertyChanged("SourceObjectMaxCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SchemeEventContextDTO", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.DTOLibr" +
        "ary.Scheme")]
    [System.SerializableAttribute()]
    public partial class SchemeEventContextDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ExcludeCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RuleCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SubjectCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Count {
            get {
                return this.CountField;
            }
            set {
                if ((this.CountField.Equals(value) != true)) {
                    this.CountField = value;
                    this.RaisePropertyChanged("Count");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ExcludeCount {
            get {
                return this.ExcludeCountField;
            }
            set {
                if ((this.ExcludeCountField.Equals(value) != true)) {
                    this.ExcludeCountField = value;
                    this.RaisePropertyChanged("ExcludeCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RuleCount {
            get {
                return this.RuleCountField;
            }
            set {
                if ((this.RuleCountField.Equals(value) != true)) {
                    this.RuleCountField = value;
                    this.RaisePropertyChanged("RuleCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SubjectCount {
            get {
                return this.SubjectCountField;
            }
            set {
                if ((this.SubjectCountField.Equals(value) != true)) {
                    this.SubjectCountField = value;
                    this.RaisePropertyChanged("SubjectCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ModelDTO", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.DTOLibr" +
        "ary.Model")]
    [System.SerializableAttribute()]
    public partial class ModelDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CatalogNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Resonance.Insight3.Web.CertonaService.SegmentationDTO SegmentationField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string CatalogName {
            get {
                return this.CatalogNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CatalogNameField, value) != true)) {
                    this.CatalogNameField = value;
                    this.RaisePropertyChanged("CatalogName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public Resonance.Insight3.Web.CertonaService.SegmentationDTO Segmentation {
            get {
                return this.SegmentationField;
            }
            set {
                if ((object.ReferenceEquals(this.SegmentationField, value) != true)) {
                    this.SegmentationField = value;
                    this.RaisePropertyChanged("Segmentation");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SegmentationDTO", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.DTOLibr" +
        "ary.Segment")]
    [System.SerializableAttribute()]
    public partial class SegmentationDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.SegmentDTO> SegmentsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.SegmentDTO> Segments {
            get {
                return this.SegmentsField;
            }
            set {
                if ((object.ReferenceEquals(this.SegmentsField, value) != true)) {
                    this.SegmentsField = value;
                    this.RaisePropertyChanged("Segments");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SegmentDTO", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.DTOLibr" +
        "ary.Segment")]
    [System.SerializableAttribute()]
    public partial class SegmentDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.SegmentAttributeDataDTO> AttributeDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.SegmentAttributeDataDTO> AttributeData {
            get {
                return this.AttributeDataField;
            }
            set {
                if ((object.ReferenceEquals(this.AttributeDataField, value) != true)) {
                    this.AttributeDataField = value;
                    this.RaisePropertyChanged("AttributeData");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SegmentAttributeDataDTO", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.DTOLibr" +
        "ary.Segment")]
    [System.SerializableAttribute()]
    public partial class SegmentAttributeDataDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AttributeTypeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AttributeTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StartValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EndValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public string AttributeTypeName {
            get {
                return this.AttributeTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AttributeTypeNameField, value) != true)) {
                    this.AttributeTypeNameField = value;
                    this.RaisePropertyChanged("AttributeTypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string AttributeType {
            get {
                return this.AttributeTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.AttributeTypeField, value) != true)) {
                    this.AttributeTypeField = value;
                    this.RaisePropertyChanged("AttributeType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string StartValue {
            get {
                return this.StartValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StartValueField, value) != true)) {
                    this.StartValueField = value;
                    this.RaisePropertyChanged("StartValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string EndValue {
            get {
                return this.EndValueField;
            }
            set {
                if ((object.ReferenceEquals(this.EndValueField, value) != true)) {
                    this.EndValueField = value;
                    this.RaisePropertyChanged("EndValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SegmentItemDTO", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.DTOLibr" +
        "ary.Segment")]
    [System.SerializableAttribute()]
    public partial class SegmentItemDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemIDField;
        
        private int ModelIDField;
        
        private int SegmentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountDescriptionFieldValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountItemIdFieldValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountItemIDValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountDescriptionValueField;
        
        private double ScoreField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemID {
            get {
                return this.ItemIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemIDField, value) != true)) {
                    this.ItemIDField = value;
                    this.RaisePropertyChanged("ItemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int ModelID {
            get {
                return this.ModelIDField;
            }
            set {
                if ((this.ModelIDField.Equals(value) != true)) {
                    this.ModelIDField = value;
                    this.RaisePropertyChanged("ModelID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int SegmentID {
            get {
                return this.SegmentIDField;
            }
            set {
                if ((this.SegmentIDField.Equals(value) != true)) {
                    this.SegmentIDField = value;
                    this.RaisePropertyChanged("SegmentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string AccountDescriptionFieldValue {
            get {
                return this.AccountDescriptionFieldValueField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountDescriptionFieldValueField, value) != true)) {
                    this.AccountDescriptionFieldValueField = value;
                    this.RaisePropertyChanged("AccountDescriptionFieldValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string AccountItemIdFieldValue {
            get {
                return this.AccountItemIdFieldValueField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountItemIdFieldValueField, value) != true)) {
                    this.AccountItemIdFieldValueField = value;
                    this.RaisePropertyChanged("AccountItemIdFieldValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public string AccountItemIDValue {
            get {
                return this.AccountItemIDValueField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountItemIDValueField, value) != true)) {
                    this.AccountItemIDValueField = value;
                    this.RaisePropertyChanged("AccountItemIDValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public string AccountDescriptionValue {
            get {
                return this.AccountDescriptionValueField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountDescriptionValueField, value) != true)) {
                    this.AccountDescriptionValueField = value;
                    this.RaisePropertyChanged("AccountDescriptionValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=7)]
        public double Score {
            get {
                return this.ScoreField;
            }
            set {
                if ((this.ScoreField.Equals(value) != true)) {
                    this.ScoreField = value;
                    this.RaisePropertyChanged("Score");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ToolDTO", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.DTOLibr" +
        "ary.Tools")]
    [System.SerializableAttribute()]
    public partial class ToolDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SelectedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ToolIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ToolNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Selected {
            get {
                return this.SelectedField;
            }
            set {
                if ((this.SelectedField.Equals(value) != true)) {
                    this.SelectedField = value;
                    this.RaisePropertyChanged("Selected");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ToolID {
            get {
                return this.ToolIDField;
            }
            set {
                if ((this.ToolIDField.Equals(value) != true)) {
                    this.ToolIDField = value;
                    this.RaisePropertyChanged("ToolID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ToolName {
            get {
                return this.ToolNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ToolNameField, value) != true)) {
                    this.ToolNameField = value;
                    this.RaisePropertyChanged("ToolName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StatusDTO", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.DTOLibr" +
        "ary.Framework")]
    [System.SerializableAttribute()]
    public partial class StatusDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StatusID {
            get {
                return this.StatusIDField;
            }
            set {
                if ((this.StatusIDField.Equals(value) != true)) {
                    this.StatusIDField = value;
                    this.RaisePropertyChanged("StatusID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReportDTO", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.DTOLibr" +
        "ary.Reporting")]
    [System.SerializableAttribute()]
    public partial class ReportDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReportIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReportNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SelectedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReportID {
            get {
                return this.ReportIDField;
            }
            set {
                if ((this.ReportIDField.Equals(value) != true)) {
                    this.ReportIDField = value;
                    this.RaisePropertyChanged("ReportID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReportName {
            get {
                return this.ReportNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ReportNameField, value) != true)) {
                    this.ReportNameField = value;
                    this.RaisePropertyChanged("ReportName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Selected {
            get {
                return this.SelectedField;
            }
            set {
                if ((this.SelectedField.Equals(value) != true)) {
                    this.SelectedField = value;
                    this.RaisePropertyChanged("Selected");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ContentPanelDTO", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.DTOLibr" +
        "ary.Framework")]
    [System.SerializableAttribute()]
    public partial class ContentPanelDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.ContentPanelSectionDTO> ContentPanelSectionsField;
        
        private string NameField;
        
        private string PartialViewNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.ContentPanelSectionDTO> ContentPanelSections {
            get {
                return this.ContentPanelSectionsField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentPanelSectionsField, value) != true)) {
                    this.ContentPanelSectionsField = value;
                    this.RaisePropertyChanged("ContentPanelSections");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string PartialViewName {
            get {
                return this.PartialViewNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PartialViewNameField, value) != true)) {
                    this.PartialViewNameField = value;
                    this.RaisePropertyChanged("PartialViewName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ContentPanelSectionDTO", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.DTOLibr" +
        "ary.Framework")]
    [System.SerializableAttribute()]
    public partial class ContentPanelSectionDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CanAddField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CanEditField;
        
        private int ContentPanelSectionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ExpandedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> FeatureCodeField;
        
        private string NameField;
        
        private string PartialViewNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanAdd {
            get {
                return this.CanAddField;
            }
            set {
                if ((this.CanAddField.Equals(value) != true)) {
                    this.CanAddField = value;
                    this.RaisePropertyChanged("CanAdd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanEdit {
            get {
                return this.CanEditField;
            }
            set {
                if ((this.CanEditField.Equals(value) != true)) {
                    this.CanEditField = value;
                    this.RaisePropertyChanged("CanEdit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int ContentPanelSectionID {
            get {
                return this.ContentPanelSectionIDField;
            }
            set {
                if ((this.ContentPanelSectionIDField.Equals(value) != true)) {
                    this.ContentPanelSectionIDField = value;
                    this.RaisePropertyChanged("ContentPanelSectionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Expanded {
            get {
                return this.ExpandedField;
            }
            set {
                if ((this.ExpandedField.Equals(value) != true)) {
                    this.ExpandedField = value;
                    this.RaisePropertyChanged("Expanded");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> FeatureCode {
            get {
                return this.FeatureCodeField;
            }
            set {
                if ((this.FeatureCodeField.Equals(value) != true)) {
                    this.FeatureCodeField = value;
                    this.RaisePropertyChanged("FeatureCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string PartialViewName {
            get {
                return this.PartialViewNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PartialViewNameField, value) != true)) {
                    this.PartialViewNameField = value;
                    this.RaisePropertyChanged("PartialViewName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ClassificationDTO", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.DTOLibr" +
        "ary.Framework")]
    [System.SerializableAttribute()]
    public partial class ClassificationDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClassificationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClassificationNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SelectedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClassificationID {
            get {
                return this.ClassificationIDField;
            }
            set {
                if ((this.ClassificationIDField.Equals(value) != true)) {
                    this.ClassificationIDField = value;
                    this.RaisePropertyChanged("ClassificationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClassificationName {
            get {
                return this.ClassificationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ClassificationNameField, value) != true)) {
                    this.ClassificationNameField = value;
                    this.RaisePropertyChanged("ClassificationName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Selected {
            get {
                return this.SelectedField;
            }
            set {
                if ((this.SelectedField.Equals(value) != true)) {
                    this.SelectedField = value;
                    this.RaisePropertyChanged("Selected");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RemarketingCampaignSummaryDTO", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.DTOLibr" +
        "ary.Remarketing")]
    [System.SerializableAttribute()]
    public partial class RemarketingCampaignSummaryDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApplicationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastModifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastSentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> NextScheduledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RemarketingCampaignIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ApplicationId {
            get {
                return this.ApplicationIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ApplicationIdField, value) != true)) {
                    this.ApplicationIdField = value;
                    this.RaisePropertyChanged("ApplicationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastModified {
            get {
                return this.LastModifiedField;
            }
            set {
                if ((this.LastModifiedField.Equals(value) != true)) {
                    this.LastModifiedField = value;
                    this.RaisePropertyChanged("LastModified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastSent {
            get {
                return this.LastSentField;
            }
            set {
                if ((this.LastSentField.Equals(value) != true)) {
                    this.LastSentField = value;
                    this.RaisePropertyChanged("LastSent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> NextScheduled {
            get {
                return this.NextScheduledField;
            }
            set {
                if ((this.NextScheduledField.Equals(value) != true)) {
                    this.NextScheduledField = value;
                    this.RaisePropertyChanged("NextScheduled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RemarketingCampaignId {
            get {
                return this.RemarketingCampaignIdField;
            }
            set {
                if ((this.RemarketingCampaignIdField.Equals(value) != true)) {
                    this.RemarketingCampaignIdField = value;
                    this.RaisePropertyChanged("RemarketingCampaignId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RemarketingAbandonmentDTO", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.DTOLibr" +
        "ary.Remarketing")]
    [System.SerializableAttribute()]
    public partial class RemarketingAbandonmentDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Abandonments_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Include_Target_Model_Class_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Missing_Target_Model_Class_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Abandonments_ID {
            get {
                return this.Abandonments_IDField;
            }
            set {
                if ((this.Abandonments_IDField.Equals(value) != true)) {
                    this.Abandonments_IDField = value;
                    this.RaisePropertyChanged("Abandonments_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Include_Target_Model_Class_ID {
            get {
                return this.Include_Target_Model_Class_IDField;
            }
            set {
                if ((this.Include_Target_Model_Class_IDField.Equals(value) != true)) {
                    this.Include_Target_Model_Class_IDField = value;
                    this.RaisePropertyChanged("Include_Target_Model_Class_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Missing_Target_Model_Class_ID {
            get {
                return this.Missing_Target_Model_Class_IDField;
            }
            set {
                if ((this.Missing_Target_Model_Class_IDField.Equals(value) != true)) {
                    this.Missing_Target_Model_Class_IDField = value;
                    this.RaisePropertyChanged("Missing_Target_Model_Class_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RemarketingAbandonmentFilterDTO", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.DTOLibr" +
        "ary.Remarketing")]
    [System.SerializableAttribute()]
    public partial class RemarketingAbandonmentFilterDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Abandonment_Filter_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Abandonment_Filter_TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Abandonments_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Filter_FunctionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Abandonment_Filter_ID {
            get {
                return this.Abandonment_Filter_IDField;
            }
            set {
                if ((this.Abandonment_Filter_IDField.Equals(value) != true)) {
                    this.Abandonment_Filter_IDField = value;
                    this.RaisePropertyChanged("Abandonment_Filter_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Abandonment_Filter_Type {
            get {
                return this.Abandonment_Filter_TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.Abandonment_Filter_TypeField, value) != true)) {
                    this.Abandonment_Filter_TypeField = value;
                    this.RaisePropertyChanged("Abandonment_Filter_Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Abandonments_ID {
            get {
                return this.Abandonments_IDField;
            }
            set {
                if ((this.Abandonments_IDField.Equals(value) != true)) {
                    this.Abandonments_IDField = value;
                    this.RaisePropertyChanged("Abandonments_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Filter_Function {
            get {
                return this.Filter_FunctionField;
            }
            set {
                if ((object.ReferenceEquals(this.Filter_FunctionField, value) != true)) {
                    this.Filter_FunctionField = value;
                    this.RaisePropertyChanged("Filter_Function");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RemarketingAbandonmentIntervalDTO", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.DTOLibr" +
        "ary.Remarketing")]
    [System.SerializableAttribute()]
    public partial class RemarketingAbandonmentIntervalDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Abandoment_Interval_HoursField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Abandoment_Interval_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Abandoment_Interval_Hours {
            get {
                return this.Abandoment_Interval_HoursField;
            }
            set {
                if ((this.Abandoment_Interval_HoursField.Equals(value) != true)) {
                    this.Abandoment_Interval_HoursField = value;
                    this.RaisePropertyChanged("Abandoment_Interval_Hours");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Abandoment_Interval_ID {
            get {
                return this.Abandoment_Interval_IDField;
            }
            set {
                if ((this.Abandoment_Interval_IDField.Equals(value) != true)) {
                    this.Abandoment_Interval_IDField = value;
                    this.RaisePropertyChanged("Abandoment_Interval_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RemarketingDeliveryMethodDTO", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.DTOLibr" +
        "ary.Remarketing")]
    [System.SerializableAttribute()]
    public partial class RemarketingDeliveryMethodDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Delivery_Method_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Delivery_Method_ID {
            get {
                return this.Delivery_Method_IDField;
            }
            set {
                if ((this.Delivery_Method_IDField.Equals(value) != true)) {
                    this.Delivery_Method_IDField = value;
                    this.RaisePropertyChanged("Delivery_Method_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RemarketingServiceHeaderDTO", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.DTOLibr" +
        "ary.Remarketing")]
    [System.SerializableAttribute()]
    public partial class RemarketingServiceHeaderDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Export_Data_Service_Header_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Export_Data_Service_Type_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Export_Data_Service_Header_ID {
            get {
                return this.Export_Data_Service_Header_IDField;
            }
            set {
                if ((this.Export_Data_Service_Header_IDField.Equals(value) != true)) {
                    this.Export_Data_Service_Header_IDField = value;
                    this.RaisePropertyChanged("Export_Data_Service_Header_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Export_Data_Service_Type_ID {
            get {
                return this.Export_Data_Service_Type_IDField;
            }
            set {
                if ((this.Export_Data_Service_Type_IDField.Equals(value) != true)) {
                    this.Export_Data_Service_Type_IDField = value;
                    this.RaisePropertyChanged("Export_Data_Service_Type_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RemarketingServiceProtocolDTO", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.DTOLibr" +
        "ary.Remarketing")]
    [System.SerializableAttribute()]
    public partial class RemarketingServiceProtocolDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Export_Data_Service_Protocol_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Export_Data_Service_Protocol_ID {
            get {
                return this.Export_Data_Service_Protocol_IDField;
            }
            set {
                if ((this.Export_Data_Service_Protocol_IDField.Equals(value) != true)) {
                    this.Export_Data_Service_Protocol_IDField = value;
                    this.RaisePropertyChanged("Export_Data_Service_Protocol_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RemarketingServiceProtocolAvailableDTO", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.DTOLibr" +
        "ary.Remarketing")]
    [System.SerializableAttribute()]
    public partial class RemarketingServiceProtocolAvailableDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Deliver_Method_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Export_Data_Service_Header_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Export_Data_Service_Protocol_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string File_PatternField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Protocol_ConnectionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Deliver_Method_ID {
            get {
                return this.Deliver_Method_IDField;
            }
            set {
                if ((this.Deliver_Method_IDField.Equals(value) != true)) {
                    this.Deliver_Method_IDField = value;
                    this.RaisePropertyChanged("Deliver_Method_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Export_Data_Service_Header_ID {
            get {
                return this.Export_Data_Service_Header_IDField;
            }
            set {
                if ((this.Export_Data_Service_Header_IDField.Equals(value) != true)) {
                    this.Export_Data_Service_Header_IDField = value;
                    this.RaisePropertyChanged("Export_Data_Service_Header_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Export_Data_Service_Protocol_ID {
            get {
                return this.Export_Data_Service_Protocol_IDField;
            }
            set {
                if ((this.Export_Data_Service_Protocol_IDField.Equals(value) != true)) {
                    this.Export_Data_Service_Protocol_IDField = value;
                    this.RaisePropertyChanged("Export_Data_Service_Protocol_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string File_Pattern {
            get {
                return this.File_PatternField;
            }
            set {
                if ((object.ReferenceEquals(this.File_PatternField, value) != true)) {
                    this.File_PatternField = value;
                    this.RaisePropertyChanged("File_Pattern");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Protocol_Connection {
            get {
                return this.Protocol_ConnectionField;
            }
            set {
                if ((object.ReferenceEquals(this.Protocol_ConnectionField, value) != true)) {
                    this.Protocol_ConnectionField = value;
                    this.RaisePropertyChanged("Protocol_Connection");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RemarketingServiceTypeDTO", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.DTOLibr" +
        "ary.Remarketing")]
    [System.SerializableAttribute()]
    public partial class RemarketingServiceTypeDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Export_Data_Service_Type_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Export_Data_Service_Type_ID {
            get {
                return this.Export_Data_Service_Type_IDField;
            }
            set {
                if ((this.Export_Data_Service_Type_IDField.Equals(value) != true)) {
                    this.Export_Data_Service_Type_IDField = value;
                    this.RaisePropertyChanged("Export_Data_Service_Type_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RemarketingCatalogDTO", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.DTOLibr" +
        "ary.Remarketing")]
    [System.SerializableAttribute()]
    public partial class RemarketingCatalogDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Resonance.Insight3.Web.CertonaService.AssetTypesDTO AssetTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> Asset_Type_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Catalog_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime Last_UpdateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Resonance.Insight3.Web.CertonaService.AssetTypesDTO AssetType {
            get {
                return this.AssetTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.AssetTypeField, value) != true)) {
                    this.AssetTypeField = value;
                    this.RaisePropertyChanged("AssetType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Asset_Type_ID {
            get {
                return this.Asset_Type_IDField;
            }
            set {
                if ((this.Asset_Type_IDField.Equals(value) != true)) {
                    this.Asset_Type_IDField = value;
                    this.RaisePropertyChanged("Asset_Type_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Catalog_ID {
            get {
                return this.Catalog_IDField;
            }
            set {
                if ((object.ReferenceEquals(this.Catalog_IDField, value) != true)) {
                    this.Catalog_IDField = value;
                    this.RaisePropertyChanged("Catalog_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Last_Update {
            get {
                return this.Last_UpdateField;
            }
            set {
                if ((this.Last_UpdateField.Equals(value) != true)) {
                    this.Last_UpdateField = value;
                    this.RaisePropertyChanged("Last_Update");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AssetTypesDTO", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.DTOLibr" +
        "ary.Catalog")]
    [System.SerializableAttribute()]
    public partial class AssetTypesDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Asset_TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Asset_Type_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Icon_FilenameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Asset_Type {
            get {
                return this.Asset_TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.Asset_TypeField, value) != true)) {
                    this.Asset_TypeField = value;
                    this.RaisePropertyChanged("Asset_Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Asset_Type_ID {
            get {
                return this.Asset_Type_IDField;
            }
            set {
                if ((this.Asset_Type_IDField.Equals(value) != true)) {
                    this.Asset_Type_IDField = value;
                    this.RaisePropertyChanged("Asset_Type_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Icon_Filename {
            get {
                return this.Icon_FilenameField;
            }
            set {
                if ((object.ReferenceEquals(this.Icon_FilenameField, value) != true)) {
                    this.Icon_FilenameField = value;
                    this.RaisePropertyChanged("Icon_Filename");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CatalogCurrencyFieldDTO", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.DTOLibr" +
        "ary.Catalog")]
    [System.SerializableAttribute()]
    public partial class CatalogCurrencyFieldDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Application_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Catalog_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Customer_FieldField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Resonance_FieldField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Application_ID {
            get {
                return this.Application_IDField;
            }
            set {
                if ((object.ReferenceEquals(this.Application_IDField, value) != true)) {
                    this.Application_IDField = value;
                    this.RaisePropertyChanged("Application_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Catalog_ID {
            get {
                return this.Catalog_IDField;
            }
            set {
                if ((object.ReferenceEquals(this.Catalog_IDField, value) != true)) {
                    this.Catalog_IDField = value;
                    this.RaisePropertyChanged("Catalog_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Customer_Field {
            get {
                return this.Customer_FieldField;
            }
            set {
                if ((object.ReferenceEquals(this.Customer_FieldField, value) != true)) {
                    this.Customer_FieldField = value;
                    this.RaisePropertyChanged("Customer_Field");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Resonance_Field {
            get {
                return this.Resonance_FieldField;
            }
            set {
                if ((object.ReferenceEquals(this.Resonance_FieldField, value) != true)) {
                    this.Resonance_FieldField = value;
                    this.RaisePropertyChanged("Resonance_Field");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RemarketingEmailSchemeDTO", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.DTOLibr" +
        "ary.Remarketing")]
    [System.SerializableAttribute()]
    public partial class RemarketingEmailSchemeDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Default_Catalog_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Package_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SchemeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Scheme_IDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Default_Catalog_ID {
            get {
                return this.Default_Catalog_IDField;
            }
            set {
                if ((object.ReferenceEquals(this.Default_Catalog_IDField, value) != true)) {
                    this.Default_Catalog_IDField = value;
                    this.RaisePropertyChanged("Default_Catalog_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Package_ID {
            get {
                return this.Package_IDField;
            }
            set {
                if ((this.Package_IDField.Equals(value) != true)) {
                    this.Package_IDField = value;
                    this.RaisePropertyChanged("Package_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Scheme {
            get {
                return this.SchemeField;
            }
            set {
                if ((object.ReferenceEquals(this.SchemeField, value) != true)) {
                    this.SchemeField = value;
                    this.RaisePropertyChanged("Scheme");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Scheme_ID {
            get {
                return this.Scheme_IDField;
            }
            set {
                if ((this.Scheme_IDField.Equals(value) != true)) {
                    this.Scheme_IDField = value;
                    this.RaisePropertyChanged("Scheme_ID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RemarketingESPConfigInfoDTO", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.DTOLibr" +
        "ary.Remarketing")]
    [System.SerializableAttribute()]
    public partial class RemarketingESPConfigInfoDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Deliver_Method_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeliveryMethodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Export_Data_Service_Header_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Export_Data_Service_Protocol_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HostBaseAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProtocolNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProviderNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Deliver_Method_ID {
            get {
                return this.Deliver_Method_IDField;
            }
            set {
                if ((this.Deliver_Method_IDField.Equals(value) != true)) {
                    this.Deliver_Method_IDField = value;
                    this.RaisePropertyChanged("Deliver_Method_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeliveryMethod {
            get {
                return this.DeliveryMethodField;
            }
            set {
                if ((object.ReferenceEquals(this.DeliveryMethodField, value) != true)) {
                    this.DeliveryMethodField = value;
                    this.RaisePropertyChanged("DeliveryMethod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Export_Data_Service_Header_ID {
            get {
                return this.Export_Data_Service_Header_IDField;
            }
            set {
                if ((this.Export_Data_Service_Header_IDField.Equals(value) != true)) {
                    this.Export_Data_Service_Header_IDField = value;
                    this.RaisePropertyChanged("Export_Data_Service_Header_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Export_Data_Service_Protocol_ID {
            get {
                return this.Export_Data_Service_Protocol_IDField;
            }
            set {
                if ((this.Export_Data_Service_Protocol_IDField.Equals(value) != true)) {
                    this.Export_Data_Service_Protocol_IDField = value;
                    this.RaisePropertyChanged("Export_Data_Service_Protocol_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileType {
            get {
                return this.FileTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.FileTypeField, value) != true)) {
                    this.FileTypeField = value;
                    this.RaisePropertyChanged("FileType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HostBaseAddress {
            get {
                return this.HostBaseAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.HostBaseAddressField, value) != true)) {
                    this.HostBaseAddressField = value;
                    this.RaisePropertyChanged("HostBaseAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProtocolName {
            get {
                return this.ProtocolNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProtocolNameField, value) != true)) {
                    this.ProtocolNameField = value;
                    this.RaisePropertyChanged("ProtocolName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProviderName {
            get {
                return this.ProviderNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProviderNameField, value) != true)) {
                    this.ProviderNameField = value;
                    this.RaisePropertyChanged("ProviderName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RemarketingCampaignVariantRuleDTO", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.DTOLibr" +
        "ary.Remarketing")]
    [System.SerializableAttribute()]
    public partial class RemarketingCampaignVariantRuleDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Rule_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Variant_IDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Rule_ID {
            get {
                return this.Rule_IDField;
            }
            set {
                if ((this.Rule_IDField.Equals(value) != true)) {
                    this.Rule_IDField = value;
                    this.RaisePropertyChanged("Rule_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Variant_ID {
            get {
                return this.Variant_IDField;
            }
            set {
                if ((this.Variant_IDField.Equals(value) != true)) {
                    this.Variant_IDField = value;
                    this.RaisePropertyChanged("Variant_ID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EmailServiceProviderConfigurationDTO", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.DTOLibr" +
        "ary.Remarketing")]
    [System.SerializableAttribute()]
    public partial class EmailServiceProviderConfigurationDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Delivery_Method_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Export_Data_Service_Header_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Export_Data_Service_Protocol_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string File_PatternField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Protocol_ConnectionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Delivery_Method_ID {
            get {
                return this.Delivery_Method_IDField;
            }
            set {
                if ((this.Delivery_Method_IDField.Equals(value) != true)) {
                    this.Delivery_Method_IDField = value;
                    this.RaisePropertyChanged("Delivery_Method_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Export_Data_Service_Header_ID {
            get {
                return this.Export_Data_Service_Header_IDField;
            }
            set {
                if ((this.Export_Data_Service_Header_IDField.Equals(value) != true)) {
                    this.Export_Data_Service_Header_IDField = value;
                    this.RaisePropertyChanged("Export_Data_Service_Header_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Export_Data_Service_Protocol_ID {
            get {
                return this.Export_Data_Service_Protocol_IDField;
            }
            set {
                if ((this.Export_Data_Service_Protocol_IDField.Equals(value) != true)) {
                    this.Export_Data_Service_Protocol_IDField = value;
                    this.RaisePropertyChanged("Export_Data_Service_Protocol_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string File_Pattern {
            get {
                return this.File_PatternField;
            }
            set {
                if ((object.ReferenceEquals(this.File_PatternField, value) != true)) {
                    this.File_PatternField = value;
                    this.RaisePropertyChanged("File_Pattern");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Protocol_Connection {
            get {
                return this.Protocol_ConnectionField;
            }
            set {
                if ((object.ReferenceEquals(this.Protocol_ConnectionField, value) != true)) {
                    this.Protocol_ConnectionField = value;
                    this.RaisePropertyChanged("Protocol_Connection");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VariantRuleDTO", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.DTOLibr" +
        "ary.Variant")]
    [System.SerializableAttribute()]
    public partial class VariantRuleDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExpressionTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.VariantRuleExpressionDTO> ExpressionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RuleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RuleNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Enabled {
            get {
                return this.EnabledField;
            }
            set {
                if ((this.EnabledField.Equals(value) != true)) {
                    this.EnabledField = value;
                    this.RaisePropertyChanged("Enabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExpressionText {
            get {
                return this.ExpressionTextField;
            }
            set {
                if ((object.ReferenceEquals(this.ExpressionTextField, value) != true)) {
                    this.ExpressionTextField = value;
                    this.RaisePropertyChanged("ExpressionText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.VariantRuleExpressionDTO> Expressions {
            get {
                return this.ExpressionsField;
            }
            set {
                if ((object.ReferenceEquals(this.ExpressionsField, value) != true)) {
                    this.ExpressionsField = value;
                    this.RaisePropertyChanged("Expressions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RuleID {
            get {
                return this.RuleIDField;
            }
            set {
                if ((this.RuleIDField.Equals(value) != true)) {
                    this.RuleIDField = value;
                    this.RaisePropertyChanged("RuleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RuleName {
            get {
                return this.RuleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RuleNameField, value) != true)) {
                    this.RuleNameField = value;
                    this.RaisePropertyChanged("RuleName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VariantRuleExpressionDTO", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.DTOLibr" +
        "ary.Variant")]
    [System.SerializableAttribute()]
    public partial class VariantRuleExpressionDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.VariantRuleConditionDTO> ConditionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ExecutionOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ExpressionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExpressionTextField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.VariantRuleConditionDTO> Conditions {
            get {
                return this.ConditionsField;
            }
            set {
                if ((object.ReferenceEquals(this.ConditionsField, value) != true)) {
                    this.ConditionsField = value;
                    this.RaisePropertyChanged("Conditions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ExecutionOrder {
            get {
                return this.ExecutionOrderField;
            }
            set {
                if ((this.ExecutionOrderField.Equals(value) != true)) {
                    this.ExecutionOrderField = value;
                    this.RaisePropertyChanged("ExecutionOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ExpressionID {
            get {
                return this.ExpressionIDField;
            }
            set {
                if ((this.ExpressionIDField.Equals(value) != true)) {
                    this.ExpressionIDField = value;
                    this.RaisePropertyChanged("ExpressionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExpressionText {
            get {
                return this.ExpressionTextField;
            }
            set {
                if ((object.ReferenceEquals(this.ExpressionTextField, value) != true)) {
                    this.ExpressionTextField = value;
                    this.RaisePropertyChanged("ExpressionText");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VariantRuleConditionDTO", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.DTOLibr" +
        "ary.Variant")]
    [System.SerializableAttribute()]
    public partial class VariantRuleConditionDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ConditionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RuleTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Resonance.Insight3.Web.CertonaService.ExpressionType TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ConditionID {
            get {
                return this.ConditionIDField;
            }
            set {
                if ((this.ConditionIDField.Equals(value) != true)) {
                    this.ConditionIDField = value;
                    this.RaisePropertyChanged("ConditionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RuleText {
            get {
                return this.RuleTextField;
            }
            set {
                if ((object.ReferenceEquals(this.RuleTextField, value) != true)) {
                    this.RuleTextField = value;
                    this.RaisePropertyChanged("RuleText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Resonance.Insight3.Web.CertonaService.ExpressionType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ControlSet", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.DTOLibr" +
        "ary.BusinessRule")]
    [System.SerializableAttribute()]
    public partial class ControlSet : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AdditionalFieldsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Resonance.Insight3.Web.CertonaService.BusinessRuleEditorControlType ControlTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AdditionalFields {
            get {
                return this.AdditionalFieldsField;
            }
            set {
                if ((this.AdditionalFieldsField.Equals(value) != true)) {
                    this.AdditionalFieldsField = value;
                    this.RaisePropertyChanged("AdditionalFields");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Resonance.Insight3.Web.CertonaService.BusinessRuleEditorControlType ControlType {
            get {
                return this.ControlTypeField;
            }
            set {
                if ((this.ControlTypeField.Equals(value) != true)) {
                    this.ControlTypeField = value;
                    this.RaisePropertyChanged("ControlType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BusinessRuleEditorControlType", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.Enums")]
    public enum BusinessRuleEditorControlType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TextBox = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DropDownContextSource = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DropDownBoolean = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ContextDTO", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.DTOLibr" +
        "ary.BusinessRule")]
    [System.SerializableAttribute()]
    public partial class ContextDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ContextIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ExcludeItemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> RulesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> SourceObjectField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ContextId {
            get {
                return this.ContextIdField;
            }
            set {
                if ((this.ContextIdField.Equals(value) != true)) {
                    this.ContextIdField = value;
                    this.RaisePropertyChanged("ContextId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ExcludeItem {
            get {
                return this.ExcludeItemField;
            }
            set {
                if ((this.ExcludeItemField.Equals(value) != true)) {
                    this.ExcludeItemField = value;
                    this.RaisePropertyChanged("ExcludeItem");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Rules {
            get {
                return this.RulesField;
            }
            set {
                if ((this.RulesField.Equals(value) != true)) {
                    this.RulesField = value;
                    this.RaisePropertyChanged("Rules");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> SourceObject {
            get {
                return this.SourceObjectField;
            }
            set {
                if ((this.SourceObjectField.Equals(value) != true)) {
                    this.SourceObjectField = value;
                    this.RaisePropertyChanged("SourceObject");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RuleOperatorDTO", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.DTOLibr" +
        "ary.BusinessRule")]
    [System.SerializableAttribute()]
    public partial class RuleOperatorDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OperatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OperatorNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Operator {
            get {
                return this.OperatorField;
            }
            set {
                if ((object.ReferenceEquals(this.OperatorField, value) != true)) {
                    this.OperatorField = value;
                    this.RaisePropertyChanged("Operator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OperatorName {
            get {
                return this.OperatorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OperatorNameField, value) != true)) {
                    this.OperatorNameField = value;
                    this.RaisePropertyChanged("OperatorName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CatalogMappingFieldDTO", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.DTOLibr" +
        "ary.BusinessRule")]
    [System.SerializableAttribute()]
    public partial class CatalogMappingFieldDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AttributeTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CatalogFieldField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AttributeType {
            get {
                return this.AttributeTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.AttributeTypeField, value) != true)) {
                    this.AttributeTypeField = value;
                    this.RaisePropertyChanged("AttributeType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CatalogField {
            get {
                return this.CatalogFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.CatalogFieldField, value) != true)) {
                    this.CatalogFieldField = value;
                    this.RaisePropertyChanged("CatalogField");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PackageDetailsDTO", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.DTOLibr" +
        "ary.Package")]
    [System.SerializableAttribute()]
    public partial class PackageDetailsDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PageURLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PageURL {
            get {
                return this.PageURLField;
            }
            set {
                if ((object.ReferenceEquals(this.PageURLField, value) != true)) {
                    this.PageURLField = value;
                    this.RaisePropertyChanged("PageURL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubType {
            get {
                return this.SubTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.SubTypeField, value) != true)) {
                    this.SubTypeField = value;
                    this.RaisePropertyChanged("SubType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PackageSchemesDTO", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.DTOLibr" +
        "ary.Package")]
    [System.SerializableAttribute()]
    public partial class PackageSchemesDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CatalogField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CatalogImageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContainerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NumberOfItemsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Catalog {
            get {
                return this.CatalogField;
            }
            set {
                if ((object.ReferenceEquals(this.CatalogField, value) != true)) {
                    this.CatalogField = value;
                    this.RaisePropertyChanged("Catalog");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CatalogImage {
            get {
                return this.CatalogImageField;
            }
            set {
                if ((object.ReferenceEquals(this.CatalogImageField, value) != true)) {
                    this.CatalogImageField = value;
                    this.RaisePropertyChanged("CatalogImage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContainerID {
            get {
                return this.ContainerIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ContainerIDField, value) != true)) {
                    this.ContainerIDField = value;
                    this.RaisePropertyChanged("ContainerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NumberOfItems {
            get {
                return this.NumberOfItemsField;
            }
            set {
                if ((object.ReferenceEquals(this.NumberOfItemsField, value) != true)) {
                    this.NumberOfItemsField = value;
                    this.RaisePropertyChanged("NumberOfItems");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CatalogDTO", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.DTOLibr" +
        "ary.Catalog")]
    [System.SerializableAttribute()]
    public partial class CatalogDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CatalogIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CatalogNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CatalogID {
            get {
                return this.CatalogIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CatalogIDField, value) != true)) {
                    this.CatalogIDField = value;
                    this.RaisePropertyChanged("CatalogID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CatalogName {
            get {
                return this.CatalogNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CatalogNameField, value) != true)) {
                    this.CatalogNameField = value;
                    this.RaisePropertyChanged("CatalogName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ApplicationDetailsDTO", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.DTOLibr" +
        "ary.Application")]
    [System.SerializableAttribute()]
    public partial class ApplicationDetailsDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApplicationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApplicationURLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClassificationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.ApplicationClassificationsDTO> ClassificationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ApplicationID {
            get {
                return this.ApplicationIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ApplicationIDField, value) != true)) {
                    this.ApplicationIDField = value;
                    this.RaisePropertyChanged("ApplicationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ApplicationURL {
            get {
                return this.ApplicationURLField;
            }
            set {
                if ((object.ReferenceEquals(this.ApplicationURLField, value) != true)) {
                    this.ApplicationURLField = value;
                    this.RaisePropertyChanged("ApplicationURL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Classification {
            get {
                return this.ClassificationField;
            }
            set {
                if ((object.ReferenceEquals(this.ClassificationField, value) != true)) {
                    this.ClassificationField = value;
                    this.RaisePropertyChanged("Classification");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.ApplicationClassificationsDTO> Classifications {
            get {
                return this.ClassificationsField;
            }
            set {
                if ((object.ReferenceEquals(this.ClassificationsField, value) != true)) {
                    this.ClassificationsField = value;
                    this.RaisePropertyChanged("Classifications");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ApplicationClassificationsDTO", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.DTOLibr" +
        "ary.Framework")]
    [System.SerializableAttribute()]
    public partial class ApplicationClassificationsDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string ClassificationNamek__BackingFieldField;
        
        private int ClassificationValueIDk__BackingFieldField;
        
        private string ClassificationValuek__BackingFieldField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<ClassificationName>k__BackingField", IsRequired=true)]
        public string ClassificationNamek__BackingField {
            get {
                return this.ClassificationNamek__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.ClassificationNamek__BackingFieldField, value) != true)) {
                    this.ClassificationNamek__BackingFieldField = value;
                    this.RaisePropertyChanged("ClassificationNamek__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<ClassificationValueID>k__BackingField", IsRequired=true)]
        public int ClassificationValueIDk__BackingField {
            get {
                return this.ClassificationValueIDk__BackingFieldField;
            }
            set {
                if ((this.ClassificationValueIDk__BackingFieldField.Equals(value) != true)) {
                    this.ClassificationValueIDk__BackingFieldField = value;
                    this.RaisePropertyChanged("ClassificationValueIDk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<ClassificationValue>k__BackingField", IsRequired=true)]
        public string ClassificationValuek__BackingField {
            get {
                return this.ClassificationValuek__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.ClassificationValuek__BackingFieldField, value) != true)) {
                    this.ClassificationValuek__BackingFieldField = value;
                    this.RaisePropertyChanged("ClassificationValuek__BackingField");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ApplicationPackagesDTO", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.DTOLibr" +
        "ary.Application")]
    [System.SerializableAttribute()]
    public partial class ApplicationPackagesDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PackageIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PackageNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PackageTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PackageId {
            get {
                return this.PackageIdField;
            }
            set {
                if ((this.PackageIdField.Equals(value) != true)) {
                    this.PackageIdField = value;
                    this.RaisePropertyChanged("PackageId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PackageName {
            get {
                return this.PackageNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PackageNameField, value) != true)) {
                    this.PackageNameField = value;
                    this.RaisePropertyChanged("PackageName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PackageType {
            get {
                return this.PackageTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.PackageTypeField, value) != true)) {
                    this.PackageTypeField = value;
                    this.RaisePropertyChanged("PackageType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubType {
            get {
                return this.SubTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.SubTypeField, value) != true)) {
                    this.SubTypeField = value;
                    this.RaisePropertyChanged("SubType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SchemeDTO", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.DTOLibr" +
        "ary.Scheme")]
    [System.SerializableAttribute()]
    public partial class SchemeDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SchemeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SchemeNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SchemeID {
            get {
                return this.SchemeIDField;
            }
            set {
                if ((this.SchemeIDField.Equals(value) != true)) {
                    this.SchemeIDField = value;
                    this.RaisePropertyChanged("SchemeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SchemeName {
            get {
                return this.SchemeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SchemeNameField, value) != true)) {
                    this.SchemeNameField = value;
                    this.RaisePropertyChanged("SchemeName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExperienceDetailsDTO", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.DTOLibr" +
        "ary.Experience")]
    [System.SerializableAttribute()]
    public partial class ExperienceDetailsDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ExperienceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PoolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProfileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> TrafficField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ExperienceID {
            get {
                return this.ExperienceIDField;
            }
            set {
                if ((this.ExperienceIDField.Equals(value) != true)) {
                    this.ExperienceIDField = value;
                    this.RaisePropertyChanged("ExperienceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Pool {
            get {
                return this.PoolField;
            }
            set {
                if ((this.PoolField.Equals(value) != true)) {
                    this.PoolField = value;
                    this.RaisePropertyChanged("Pool");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Profile {
            get {
                return this.ProfileField;
            }
            set {
                if ((this.ProfileField.Equals(value) != true)) {
                    this.ProfileField = value;
                    this.RaisePropertyChanged("Profile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Traffic {
            get {
                return this.TrafficField;
            }
            set {
                if ((this.TrafficField.Equals(value) != true)) {
                    this.TrafficField = value;
                    this.RaisePropertyChanged("Traffic");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExperienceVariantDTO", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.DTOLibr" +
        "ary.Experience")]
    [System.SerializableAttribute()]
    public partial class ExperienceVariantDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> BreakOnMinItemsReturnedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CatalogField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CatalogImageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ExperienceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> ImpressionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> MinItemsReturnedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> NumberOfItemsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PersonalizationTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PriorityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> RulesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StrategyIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> BreakOnMinItemsReturned {
            get {
                return this.BreakOnMinItemsReturnedField;
            }
            set {
                if ((this.BreakOnMinItemsReturnedField.Equals(value) != true)) {
                    this.BreakOnMinItemsReturnedField = value;
                    this.RaisePropertyChanged("BreakOnMinItemsReturned");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Catalog {
            get {
                return this.CatalogField;
            }
            set {
                if ((object.ReferenceEquals(this.CatalogField, value) != true)) {
                    this.CatalogField = value;
                    this.RaisePropertyChanged("Catalog");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CatalogImage {
            get {
                return this.CatalogImageField;
            }
            set {
                if ((object.ReferenceEquals(this.CatalogImageField, value) != true)) {
                    this.CatalogImageField = value;
                    this.RaisePropertyChanged("CatalogImage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ExperienceID {
            get {
                return this.ExperienceIDField;
            }
            set {
                if ((this.ExperienceIDField.Equals(value) != true)) {
                    this.ExperienceIDField = value;
                    this.RaisePropertyChanged("ExperienceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Impressions {
            get {
                return this.ImpressionsField;
            }
            set {
                if ((this.ImpressionsField.Equals(value) != true)) {
                    this.ImpressionsField = value;
                    this.RaisePropertyChanged("Impressions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> MinItemsReturned {
            get {
                return this.MinItemsReturnedField;
            }
            set {
                if ((this.MinItemsReturnedField.Equals(value) != true)) {
                    this.MinItemsReturnedField = value;
                    this.RaisePropertyChanged("MinItemsReturned");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> NumberOfItems {
            get {
                return this.NumberOfItemsField;
            }
            set {
                if ((this.NumberOfItemsField.Equals(value) != true)) {
                    this.NumberOfItemsField = value;
                    this.RaisePropertyChanged("NumberOfItems");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PersonalizationType {
            get {
                return this.PersonalizationTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.PersonalizationTypeField, value) != true)) {
                    this.PersonalizationTypeField = value;
                    this.RaisePropertyChanged("PersonalizationType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Priority {
            get {
                return this.PriorityField;
            }
            set {
                if ((this.PriorityField.Equals(value) != true)) {
                    this.PriorityField = value;
                    this.RaisePropertyChanged("Priority");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Rules {
            get {
                return this.RulesField;
            }
            set {
                if ((this.RulesField.Equals(value) != true)) {
                    this.RulesField = value;
                    this.RaisePropertyChanged("Rules");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StrategyID {
            get {
                return this.StrategyIDField;
            }
            set {
                if ((this.StrategyIDField.Equals(value) != true)) {
                    this.StrategyIDField = value;
                    this.RaisePropertyChanged("StrategyID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CatalogDetailsDTO", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.DTOLibr" +
        "ary.Catalog")]
    [System.SerializableAttribute()]
    public partial class CatalogDetailsDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<string, int> ApplicationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AssetTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Icon_FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LanguageNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, int> Applications {
            get {
                return this.ApplicationsField;
            }
            set {
                if ((object.ReferenceEquals(this.ApplicationsField, value) != true)) {
                    this.ApplicationsField = value;
                    this.RaisePropertyChanged("Applications");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AssetType {
            get {
                return this.AssetTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.AssetTypeField, value) != true)) {
                    this.AssetTypeField = value;
                    this.RaisePropertyChanged("AssetType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Icon_FileName {
            get {
                return this.Icon_FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.Icon_FileNameField, value) != true)) {
                    this.Icon_FileNameField = value;
                    this.RaisePropertyChanged("Icon_FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LanguageName {
            get {
                return this.LanguageNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LanguageNameField, value) != true)) {
                    this.LanguageNameField = value;
                    this.RaisePropertyChanged("LanguageName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CatalogItemDTO", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.DTOLibr" +
        "ary.Catalog")]
    [System.SerializableAttribute()]
    public partial class CatalogItemDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.CatalogItemAssociatedItemDTO> CatalogItemAssociatedItemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Resonance.Insight3.Web.CertonaService.CatalogItemInfoDTO CatalogItemInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.CatalogItemMetaDataDTO> CatalogItemMetaDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.CatalogMappingDTO> CatalogMappingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.CatalogMetaDataDTO> CatalogMetaDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.CatalogMetaDataDTO> CatalogMetaData2Field;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.CatalogItemAssociatedItemDTO> CatalogItemAssociatedItem {
            get {
                return this.CatalogItemAssociatedItemField;
            }
            set {
                if ((object.ReferenceEquals(this.CatalogItemAssociatedItemField, value) != true)) {
                    this.CatalogItemAssociatedItemField = value;
                    this.RaisePropertyChanged("CatalogItemAssociatedItem");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Resonance.Insight3.Web.CertonaService.CatalogItemInfoDTO CatalogItemInfo {
            get {
                return this.CatalogItemInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.CatalogItemInfoField, value) != true)) {
                    this.CatalogItemInfoField = value;
                    this.RaisePropertyChanged("CatalogItemInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.CatalogItemMetaDataDTO> CatalogItemMetaData {
            get {
                return this.CatalogItemMetaDataField;
            }
            set {
                if ((object.ReferenceEquals(this.CatalogItemMetaDataField, value) != true)) {
                    this.CatalogItemMetaDataField = value;
                    this.RaisePropertyChanged("CatalogItemMetaData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.CatalogMappingDTO> CatalogMapping {
            get {
                return this.CatalogMappingField;
            }
            set {
                if ((object.ReferenceEquals(this.CatalogMappingField, value) != true)) {
                    this.CatalogMappingField = value;
                    this.RaisePropertyChanged("CatalogMapping");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.CatalogMetaDataDTO> CatalogMetaData {
            get {
                return this.CatalogMetaDataField;
            }
            set {
                if ((object.ReferenceEquals(this.CatalogMetaDataField, value) != true)) {
                    this.CatalogMetaDataField = value;
                    this.RaisePropertyChanged("CatalogMetaData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Resonance.Insight3.Web.CertonaService.CatalogMetaDataDTO> CatalogMetaData2 {
            get {
                return this.CatalogMetaData2Field;
            }
            set {
                if ((object.ReferenceEquals(this.CatalogMetaData2Field, value) != true)) {
                    this.CatalogMetaData2Field = value;
                    this.RaisePropertyChanged("CatalogMetaData2");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CatalogItemInfoDTO", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.DTOLibr" +
        "ary.Catalog")]
    [System.SerializableAttribute()]
    public partial class CatalogItemInfoDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountItemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> COGSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CatalogIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateIntroducedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DetailUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DisabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ExcludedFromRecommendationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> Flag1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> Flag2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> Flag3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> Flag4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> Flag5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> Flag6Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> Flag7Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> Flag8Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> Flag9Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> InventoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ItemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastUpdateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> Money1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> Money2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> Money3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> Money4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> Money5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> Money6Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> Money7Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> Money8Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> Money9Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> Number1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> Number2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> Number3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> Number4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> Number5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> Number6Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> Number7Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> Number8Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> Number9Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ObjectIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> PromotionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Text1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Text2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Text3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Text4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Text5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Text6Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Text7Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Text8Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Text9Field;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountID {
            get {
                return this.AccountIDField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountIDField, value) != true)) {
                    this.AccountIDField = value;
                    this.RaisePropertyChanged("AccountID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountItemID {
            get {
                return this.AccountItemIDField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountItemIDField, value) != true)) {
                    this.AccountItemIDField = value;
                    this.RaisePropertyChanged("AccountItemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> COGS {
            get {
                return this.COGSField;
            }
            set {
                if ((this.COGSField.Equals(value) != true)) {
                    this.COGSField = value;
                    this.RaisePropertyChanged("COGS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CatalogID {
            get {
                return this.CatalogIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CatalogIDField, value) != true)) {
                    this.CatalogIDField = value;
                    this.RaisePropertyChanged("CatalogID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateIntroduced {
            get {
                return this.DateIntroducedField;
            }
            set {
                if ((this.DateIntroducedField.Equals(value) != true)) {
                    this.DateIntroducedField = value;
                    this.RaisePropertyChanged("DateIntroduced");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DetailUrl {
            get {
                return this.DetailUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.DetailUrlField, value) != true)) {
                    this.DetailUrlField = value;
                    this.RaisePropertyChanged("DetailUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Disabled {
            get {
                return this.DisabledField;
            }
            set {
                if ((this.DisabledField.Equals(value) != true)) {
                    this.DisabledField = value;
                    this.RaisePropertyChanged("Disabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ExcludedFromRecommendations {
            get {
                return this.ExcludedFromRecommendationsField;
            }
            set {
                if ((this.ExcludedFromRecommendationsField.Equals(value) != true)) {
                    this.ExcludedFromRecommendationsField = value;
                    this.RaisePropertyChanged("ExcludedFromRecommendations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Flag1 {
            get {
                return this.Flag1Field;
            }
            set {
                if ((this.Flag1Field.Equals(value) != true)) {
                    this.Flag1Field = value;
                    this.RaisePropertyChanged("Flag1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Flag2 {
            get {
                return this.Flag2Field;
            }
            set {
                if ((this.Flag2Field.Equals(value) != true)) {
                    this.Flag2Field = value;
                    this.RaisePropertyChanged("Flag2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Flag3 {
            get {
                return this.Flag3Field;
            }
            set {
                if ((this.Flag3Field.Equals(value) != true)) {
                    this.Flag3Field = value;
                    this.RaisePropertyChanged("Flag3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Flag4 {
            get {
                return this.Flag4Field;
            }
            set {
                if ((this.Flag4Field.Equals(value) != true)) {
                    this.Flag4Field = value;
                    this.RaisePropertyChanged("Flag4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Flag5 {
            get {
                return this.Flag5Field;
            }
            set {
                if ((this.Flag5Field.Equals(value) != true)) {
                    this.Flag5Field = value;
                    this.RaisePropertyChanged("Flag5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Flag6 {
            get {
                return this.Flag6Field;
            }
            set {
                if ((this.Flag6Field.Equals(value) != true)) {
                    this.Flag6Field = value;
                    this.RaisePropertyChanged("Flag6");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Flag7 {
            get {
                return this.Flag7Field;
            }
            set {
                if ((this.Flag7Field.Equals(value) != true)) {
                    this.Flag7Field = value;
                    this.RaisePropertyChanged("Flag7");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Flag8 {
            get {
                return this.Flag8Field;
            }
            set {
                if ((this.Flag8Field.Equals(value) != true)) {
                    this.Flag8Field = value;
                    this.RaisePropertyChanged("Flag8");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Flag9 {
            get {
                return this.Flag9Field;
            }
            set {
                if ((this.Flag9Field.Equals(value) != true)) {
                    this.Flag9Field = value;
                    this.RaisePropertyChanged("Flag9");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImageUrl {
            get {
                return this.ImageUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageUrlField, value) != true)) {
                    this.ImageUrlField = value;
                    this.RaisePropertyChanged("ImageUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Inventory {
            get {
                return this.InventoryField;
            }
            set {
                if ((this.InventoryField.Equals(value) != true)) {
                    this.InventoryField = value;
                    this.RaisePropertyChanged("Inventory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ItemID {
            get {
                return this.ItemIDField;
            }
            set {
                if ((this.ItemIDField.Equals(value) != true)) {
                    this.ItemIDField = value;
                    this.RaisePropertyChanged("ItemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastUpdate {
            get {
                return this.LastUpdateField;
            }
            set {
                if ((this.LastUpdateField.Equals(value) != true)) {
                    this.LastUpdateField = value;
                    this.RaisePropertyChanged("LastUpdate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Money1 {
            get {
                return this.Money1Field;
            }
            set {
                if ((this.Money1Field.Equals(value) != true)) {
                    this.Money1Field = value;
                    this.RaisePropertyChanged("Money1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Money2 {
            get {
                return this.Money2Field;
            }
            set {
                if ((this.Money2Field.Equals(value) != true)) {
                    this.Money2Field = value;
                    this.RaisePropertyChanged("Money2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Money3 {
            get {
                return this.Money3Field;
            }
            set {
                if ((this.Money3Field.Equals(value) != true)) {
                    this.Money3Field = value;
                    this.RaisePropertyChanged("Money3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Money4 {
            get {
                return this.Money4Field;
            }
            set {
                if ((this.Money4Field.Equals(value) != true)) {
                    this.Money4Field = value;
                    this.RaisePropertyChanged("Money4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Money5 {
            get {
                return this.Money5Field;
            }
            set {
                if ((this.Money5Field.Equals(value) != true)) {
                    this.Money5Field = value;
                    this.RaisePropertyChanged("Money5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Money6 {
            get {
                return this.Money6Field;
            }
            set {
                if ((this.Money6Field.Equals(value) != true)) {
                    this.Money6Field = value;
                    this.RaisePropertyChanged("Money6");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Money7 {
            get {
                return this.Money7Field;
            }
            set {
                if ((this.Money7Field.Equals(value) != true)) {
                    this.Money7Field = value;
                    this.RaisePropertyChanged("Money7");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Money8 {
            get {
                return this.Money8Field;
            }
            set {
                if ((this.Money8Field.Equals(value) != true)) {
                    this.Money8Field = value;
                    this.RaisePropertyChanged("Money8");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Money9 {
            get {
                return this.Money9Field;
            }
            set {
                if ((this.Money9Field.Equals(value) != true)) {
                    this.Money9Field = value;
                    this.RaisePropertyChanged("Money9");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Number1 {
            get {
                return this.Number1Field;
            }
            set {
                if ((this.Number1Field.Equals(value) != true)) {
                    this.Number1Field = value;
                    this.RaisePropertyChanged("Number1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Number2 {
            get {
                return this.Number2Field;
            }
            set {
                if ((this.Number2Field.Equals(value) != true)) {
                    this.Number2Field = value;
                    this.RaisePropertyChanged("Number2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Number3 {
            get {
                return this.Number3Field;
            }
            set {
                if ((this.Number3Field.Equals(value) != true)) {
                    this.Number3Field = value;
                    this.RaisePropertyChanged("Number3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Number4 {
            get {
                return this.Number4Field;
            }
            set {
                if ((this.Number4Field.Equals(value) != true)) {
                    this.Number4Field = value;
                    this.RaisePropertyChanged("Number4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Number5 {
            get {
                return this.Number5Field;
            }
            set {
                if ((this.Number5Field.Equals(value) != true)) {
                    this.Number5Field = value;
                    this.RaisePropertyChanged("Number5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Number6 {
            get {
                return this.Number6Field;
            }
            set {
                if ((this.Number6Field.Equals(value) != true)) {
                    this.Number6Field = value;
                    this.RaisePropertyChanged("Number6");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Number7 {
            get {
                return this.Number7Field;
            }
            set {
                if ((this.Number7Field.Equals(value) != true)) {
                    this.Number7Field = value;
                    this.RaisePropertyChanged("Number7");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Number8 {
            get {
                return this.Number8Field;
            }
            set {
                if ((this.Number8Field.Equals(value) != true)) {
                    this.Number8Field = value;
                    this.RaisePropertyChanged("Number8");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Number9 {
            get {
                return this.Number9Field;
            }
            set {
                if ((this.Number9Field.Equals(value) != true)) {
                    this.Number9Field = value;
                    this.RaisePropertyChanged("Number9");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ObjectID {
            get {
                return this.ObjectIDField;
            }
            set {
                if ((this.ObjectIDField.Equals(value) != true)) {
                    this.ObjectIDField = value;
                    this.RaisePropertyChanged("ObjectID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Promotion {
            get {
                return this.PromotionField;
            }
            set {
                if ((this.PromotionField.Equals(value) != true)) {
                    this.PromotionField = value;
                    this.RaisePropertyChanged("Promotion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text1 {
            get {
                return this.Text1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Text1Field, value) != true)) {
                    this.Text1Field = value;
                    this.RaisePropertyChanged("Text1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text2 {
            get {
                return this.Text2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Text2Field, value) != true)) {
                    this.Text2Field = value;
                    this.RaisePropertyChanged("Text2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text3 {
            get {
                return this.Text3Field;
            }
            set {
                if ((object.ReferenceEquals(this.Text3Field, value) != true)) {
                    this.Text3Field = value;
                    this.RaisePropertyChanged("Text3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text4 {
            get {
                return this.Text4Field;
            }
            set {
                if ((object.ReferenceEquals(this.Text4Field, value) != true)) {
                    this.Text4Field = value;
                    this.RaisePropertyChanged("Text4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text5 {
            get {
                return this.Text5Field;
            }
            set {
                if ((object.ReferenceEquals(this.Text5Field, value) != true)) {
                    this.Text5Field = value;
                    this.RaisePropertyChanged("Text5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text6 {
            get {
                return this.Text6Field;
            }
            set {
                if ((object.ReferenceEquals(this.Text6Field, value) != true)) {
                    this.Text6Field = value;
                    this.RaisePropertyChanged("Text6");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text7 {
            get {
                return this.Text7Field;
            }
            set {
                if ((object.ReferenceEquals(this.Text7Field, value) != true)) {
                    this.Text7Field = value;
                    this.RaisePropertyChanged("Text7");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text8 {
            get {
                return this.Text8Field;
            }
            set {
                if ((object.ReferenceEquals(this.Text8Field, value) != true)) {
                    this.Text8Field = value;
                    this.RaisePropertyChanged("Text8");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text9 {
            get {
                return this.Text9Field;
            }
            set {
                if ((object.ReferenceEquals(this.Text9Field, value) != true)) {
                    this.Text9Field = value;
                    this.RaisePropertyChanged("Text9");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CatalogItemAssociatedItemDTO", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.DTOLibr" +
        "ary.Catalog")]
    [System.SerializableAttribute()]
    public partial class CatalogItemAssociatedItemDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DisplayOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DisplayOrder {
            get {
                return this.DisplayOrderField;
            }
            set {
                if ((this.DisplayOrderField.Equals(value) != true)) {
                    this.DisplayOrderField = value;
                    this.RaisePropertyChanged("DisplayOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemID {
            get {
                return this.ItemIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemIDField, value) != true)) {
                    this.ItemIDField = value;
                    this.RaisePropertyChanged("ItemID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CatalogItemMetaDataDTO", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.DTOLibr" +
        "ary.Catalog")]
    [System.SerializableAttribute()]
    public partial class CatalogItemMetaDataDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CatalogIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FunctionNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LevelNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CatalogID {
            get {
                return this.CatalogIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CatalogIDField, value) != true)) {
                    this.CatalogIDField = value;
                    this.RaisePropertyChanged("CatalogID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FunctionName {
            get {
                return this.FunctionNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FunctionNameField, value) != true)) {
                    this.FunctionNameField = value;
                    this.RaisePropertyChanged("FunctionName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupName {
            get {
                return this.GroupNameField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupNameField, value) != true)) {
                    this.GroupNameField = value;
                    this.RaisePropertyChanged("GroupName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LevelName {
            get {
                return this.LevelNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LevelNameField, value) != true)) {
                    this.LevelNameField = value;
                    this.RaisePropertyChanged("LevelName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CatalogMappingDTO", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.DTOLibr" +
        "ary.Catalog")]
    [System.SerializableAttribute()]
    public partial class CatalogMappingDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AttributeTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CatalogIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomVariableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerFieldField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsMappedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsRuleEnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OLAPLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResonanceFieldField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string XSLTransformField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AttributeType {
            get {
                return this.AttributeTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.AttributeTypeField, value) != true)) {
                    this.AttributeTypeField = value;
                    this.RaisePropertyChanged("AttributeType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CatalogID {
            get {
                return this.CatalogIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CatalogIDField, value) != true)) {
                    this.CatalogIDField = value;
                    this.RaisePropertyChanged("CatalogID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomVariable {
            get {
                return this.CustomVariableField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomVariableField, value) != true)) {
                    this.CustomVariableField = value;
                    this.RaisePropertyChanged("CustomVariable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerField {
            get {
                return this.CustomerFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerFieldField, value) != true)) {
                    this.CustomerFieldField = value;
                    this.RaisePropertyChanged("CustomerField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsMapped {
            get {
                return this.IsMappedField;
            }
            set {
                if ((this.IsMappedField.Equals(value) != true)) {
                    this.IsMappedField = value;
                    this.RaisePropertyChanged("IsMapped");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsRuleEnabled {
            get {
                return this.IsRuleEnabledField;
            }
            set {
                if ((this.IsRuleEnabledField.Equals(value) != true)) {
                    this.IsRuleEnabledField = value;
                    this.RaisePropertyChanged("IsRuleEnabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OLAPLevel {
            get {
                return this.OLAPLevelField;
            }
            set {
                if ((object.ReferenceEquals(this.OLAPLevelField, value) != true)) {
                    this.OLAPLevelField = value;
                    this.RaisePropertyChanged("OLAPLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResonanceField {
            get {
                return this.ResonanceFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.ResonanceFieldField, value) != true)) {
                    this.ResonanceFieldField = value;
                    this.RaisePropertyChanged("ResonanceField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string XSLTransform {
            get {
                return this.XSLTransformField;
            }
            set {
                if ((object.ReferenceEquals(this.XSLTransformField, value) != true)) {
                    this.XSLTransformField = value;
                    this.RaisePropertyChanged("XSLTransform");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CatalogMetaDataDTO", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.DTOLibr" +
        "ary.Catalog")]
    [System.SerializableAttribute()]
    public partial class CatalogMetaDataDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CatalogIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Name1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Name2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Name3Field;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CatalogID {
            get {
                return this.CatalogIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CatalogIDField, value) != true)) {
                    this.CatalogIDField = value;
                    this.RaisePropertyChanged("CatalogID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name1 {
            get {
                return this.Name1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Name1Field, value) != true)) {
                    this.Name1Field = value;
                    this.RaisePropertyChanged("Name1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name2 {
            get {
                return this.Name2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Name2Field, value) != true)) {
                    this.Name2Field = value;
                    this.RaisePropertyChanged("Name2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name3 {
            get {
                return this.Name3Field;
            }
            set {
                if ((object.ReferenceEquals(this.Name3Field, value) != true)) {
                    this.Name3Field = value;
                    this.RaisePropertyChanged("Name3");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CatalogRuleContextsDTO", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.DTOLibr" +
        "ary.Catalog")]
    [System.SerializableAttribute()]
    public partial class CatalogRuleContextsDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ContextIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ExcludedItemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RulesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SourceObjectField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ContextID {
            get {
                return this.ContextIDField;
            }
            set {
                if ((this.ContextIDField.Equals(value) != true)) {
                    this.ContextIDField = value;
                    this.RaisePropertyChanged("ContextID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ExcludedItem {
            get {
                return this.ExcludedItemField;
            }
            set {
                if ((this.ExcludedItemField.Equals(value) != true)) {
                    this.ExcludedItemField = value;
                    this.RaisePropertyChanged("ExcludedItem");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Rules {
            get {
                return this.RulesField;
            }
            set {
                if ((this.RulesField.Equals(value) != true)) {
                    this.RulesField = value;
                    this.RaisePropertyChanged("Rules");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SourceObject {
            get {
                return this.SourceObjectField;
            }
            set {
                if ((this.SourceObjectField.Equals(value) != true)) {
                    this.SourceObjectField = value;
                    this.RaisePropertyChanged("SourceObject");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CatalogByRuleDTO", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.DTOLibr" +
        "ary.Catalog")]
    [System.SerializableAttribute()]
    public partial class CatalogByRuleDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CatalogIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CatalogNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CatalogID {
            get {
                return this.CatalogIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CatalogIDField, value) != true)) {
                    this.CatalogIDField = value;
                    this.RaisePropertyChanged("CatalogID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CatalogName {
            get {
                return this.CatalogNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CatalogNameField, value) != true)) {
                    this.CatalogNameField = value;
                    this.RaisePropertyChanged("CatalogName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RecommendationTypeDTO", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.DTOLibr" +
        "ary.Catalog")]
    [System.SerializableAttribute()]
    public partial class RecommendationTypeDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IsEditableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MethodIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IsEditable {
            get {
                return this.IsEditableField;
            }
            set {
                if ((this.IsEditableField.Equals(value) != true)) {
                    this.IsEditableField = value;
                    this.RaisePropertyChanged("IsEditable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MethodID {
            get {
                return this.MethodIDField;
            }
            set {
                if ((this.MethodIDField.Equals(value) != true)) {
                    this.MethodIDField = value;
                    this.RaisePropertyChanged("MethodID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReportingDataLastUpdatedDTO", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.DTOLibr" +
        "ary.Reporting")]
    [System.SerializableAttribute()]
    public partial class ReportingDataLastUpdatedDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ReportingDataLastUpdatedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ReportingDataLastUpdated {
            get {
                return this.ReportingDataLastUpdatedField;
            }
            set {
                if ((this.ReportingDataLastUpdatedField.Equals(value) != true)) {
                    this.ReportingDataLastUpdatedField = value;
                    this.RaisePropertyChanged("ReportingDataLastUpdated");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TrendsDataDTO", Namespace="http://schemas.datacontract.org/2004/07/Resonance.Services.Infrastructure.DTOLibr" +
        "ary.Reporting")]
    [System.SerializableAttribute()]
    public partial class TrendsDataDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> DataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryField, value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Data {
            get {
                return this.DataField;
            }
            set {
                if ((this.DataField.Equals(value) != true)) {
                    this.DataField = value;
                    this.RaisePropertyChanged("Data");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Group {
            get {
                return this.GroupField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupField, value) != true)) {
                    this.GroupField = value;
                    this.RaisePropertyChanged("Group");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupID {
            get {
                return this.GroupIDField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupIDField, value) != true)) {
                    this.GroupIDField = value;
                    this.RaisePropertyChanged("GroupID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CertonaService.ICertonaService")]
    public interface ICertonaService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertonaService/GetSchemeExperiences", ReplyAction="http://tempuri.org/ICertonaService/GetSchemeExperiencesResponse")]
        Resonance.Insight3.Web.CertonaService.GetSchemeExperiencesResponse GetSchemeExperiences(Resonance.Insight3.Web.CertonaService.GetSchemeExperiencesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertonaService/GetSchemeNumberOfItemsByExperience", ReplyAction="http://tempuri.org/ICertonaService/GetSchemeNumberOfItemsByExperienceResponse")]
        Resonance.Insight3.Web.CertonaService.GetSchemeNumberOfItemsByExperienceResponse GetSchemeNumberOfItemsByExperience(Resonance.Insight3.Web.CertonaService.GetSchemeNumberOfItemsByExperienceRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertonaService/GetToolsList", ReplyAction="http://tempuri.org/ICertonaService/GetToolsListResponse")]
        Resonance.Insight3.Web.CertonaService.GetToolsListResponse GetToolsList(Resonance.Insight3.Web.CertonaService.GetToolsListRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertonaService/GetVariantDetails", ReplyAction="http://tempuri.org/ICertonaService/GetVariantDetailsResponse")]
        Resonance.Insight3.Web.CertonaService.GetVariantDetailsResponse GetVariantDetails(Resonance.Insight3.Web.CertonaService.GetVariantDetailsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertonaService/GetVariantRules", ReplyAction="http://tempuri.org/ICertonaService/GetVariantRulesResponse")]
        Resonance.Insight3.Web.CertonaService.GetVariantRulesResponse GetVariantRules(Resonance.Insight3.Web.CertonaService.GetVariantRulesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertonaService/GetVariantBoosts", ReplyAction="http://tempuri.org/ICertonaService/GetVariantBoostsResponse")]
        Resonance.Insight3.Web.CertonaService.GetVariantBoostsResponse GetVariantBoosts(Resonance.Insight3.Web.CertonaService.GetVariantBoostsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertonaService/GetVariantSlots", ReplyAction="http://tempuri.org/ICertonaService/GetVariantSlotsResponse")]
        Resonance.Insight3.Web.CertonaService.GetVariantSlotsResponse GetVariantSlots(Resonance.Insight3.Web.CertonaService.GetVariantSlotsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertonaService/UpdateVariantStatus", ReplyAction="http://tempuri.org/ICertonaService/UpdateVariantStatusResponse")]
        Resonance.Insight3.Web.CertonaService.UpdateVariantStatusResponse UpdateVariantStatus(Resonance.Insight3.Web.CertonaService.UpdateVariantStatusRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertonaService/UpdateVariantPriority", ReplyAction="http://tempuri.org/ICertonaService/UpdateVariantPriorityResponse")]
        Resonance.Insight3.Web.CertonaService.UpdateVariantPriorityResponse UpdateVariantPriority(Resonance.Insight3.Web.CertonaService.UpdateVariantPriorityRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertonaService/UpdateVariantDetails", ReplyAction="http://tempuri.org/ICertonaService/UpdateVariantDetailsResponse")]
        Resonance.Insight3.Web.CertonaService.UpdateVariantDetailsResponse UpdateVariantDetails(Resonance.Insight3.Web.CertonaService.UpdateVariantDetailsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertonaService/CreateVariant", ReplyAction="http://tempuri.org/ICertonaService/CreateVariantResponse")]
        Resonance.Insight3.Web.CertonaService.CreateVariantResponse CreateVariant(Resonance.Insight3.Web.CertonaService.CreateVariantRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertonaService/GetLastVariantPriorityByExperience", ReplyAction="http://tempuri.org/ICertonaService/GetLastVariantPriorityByExperienceResponse")]
        Resonance.Insight3.Web.CertonaService.GetLastVariantPriorityByExperienceResponse GetLastVariantPriorityByExperience(Resonance.Insight3.Web.CertonaService.GetLastVariantPriorityByExperienceRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertonaService/GetApplicationCatalogsByExperience", ReplyAction="http://tempuri.org/ICertonaService/GetApplicationCatalogsByExperienceResponse")]
        Resonance.Insight3.Web.CertonaService.GetApplicationCatalogsByExperienceResponse GetApplicationCatalogsByExperience(Resonance.Insight3.Web.CertonaService.GetApplicationCatalogsByExperienceRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertonaService/CreateRule", ReplyAction="http://tempuri.org/ICertonaService/CreateRuleResponse")]
        Resonance.Insight3.Web.CertonaService.CreateRuleResponse CreateRule(Resonance.Insight3.Web.CertonaService.CreateRuleRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertonaService/UpdateRule", ReplyAction="http://tempuri.org/ICertonaService/UpdateRuleResponse")]
        Resonance.Insight3.Web.CertonaService.UpdateRuleResponse UpdateRule(Resonance.Insight3.Web.CertonaService.UpdateRuleRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertonaService/SaveExpression", ReplyAction="http://tempuri.org/ICertonaService/SaveExpressionResponse")]
        Resonance.Insight3.Web.CertonaService.SaveExpressionResponse SaveExpression(Resonance.Insight3.Web.CertonaService.SaveExpressionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertonaService/GetControlSet", ReplyAction="http://tempuri.org/ICertonaService/GetControlSetResponse")]
        Resonance.Insight3.Web.CertonaService.GetControlSetResponse GetControlSet(Resonance.Insight3.Web.CertonaService.GetControlSetRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertonaService/DeleteRule", ReplyAction="http://tempuri.org/ICertonaService/DeleteRuleResponse")]
        Resonance.Insight3.Web.CertonaService.DeleteRuleResponse DeleteRule(Resonance.Insight3.Web.CertonaService.DeleteRuleRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertonaService/DeleteExpression", ReplyAction="http://tempuri.org/ICertonaService/DeleteExpressionResponse")]
        Resonance.Insight3.Web.CertonaService.DeleteExpressionResponse DeleteExpression(Resonance.Insight3.Web.CertonaService.DeleteExpressionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertonaService/GetContexts", ReplyAction="http://tempuri.org/ICertonaService/GetContextsResponse")]
        Resonance.Insight3.Web.CertonaService.GetContextsResponse GetContexts(Resonance.Insight3.Web.CertonaService.GetContextsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertonaService/GetStatusList", ReplyAction="http://tempuri.org/ICertonaService/GetStatusListResponse")]
        Resonance.Insight3.Web.CertonaService.GetStatusListResponse GetStatusList(Resonance.Insight3.Web.CertonaService.GetStatusListRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertonaService/GetModel", ReplyAction="http://tempuri.org/ICertonaService/GetModelResponse")]
        Resonance.Insight3.Web.CertonaService.GetModelResponse GetModel(Resonance.Insight3.Web.CertonaService.GetModelRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertonaService/GetModels", ReplyAction="http://tempuri.org/ICertonaService/GetModelsResponse")]
        Resonance.Insight3.Web.CertonaService.GetModelsResponse GetModels(Resonance.Insight3.Web.CertonaService.GetModelsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertonaService/GetSegmentItems", ReplyAction="http://tempuri.org/ICertonaService/GetSegmentItemsResponse")]
        Resonance.Insight3.Web.CertonaService.GetSegmentItemsResponse GetSegmentItems(Resonance.Insight3.Web.CertonaService.GetSegmentItemsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertonaService/GetPackageDetails", ReplyAction="http://tempuri.org/ICertonaService/GetPackageDetailsResponse")]
        Resonance.Insight3.Web.CertonaService.GetPackageDetailsResponse GetPackageDetails(Resonance.Insight3.Web.CertonaService.GetPackageDetailsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertonaService/GetPackageSchemes", ReplyAction="http://tempuri.org/ICertonaService/GetPackageSchemesResponse")]
        Resonance.Insight3.Web.CertonaService.GetPackageSchemesResponse GetPackageSchemes(Resonance.Insight3.Web.CertonaService.GetPackageSchemesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertonaService/GetApplicationRemarketingCampaigns", ReplyAction="http://tempuri.org/ICertonaService/GetApplicationRemarketingCampaignsResponse")]
        Resonance.Insight3.Web.CertonaService.GetApplicationRemarketingCampaignsResponse GetApplicationRemarketingCampaigns(Resonance.Insight3.Web.CertonaService.GetApplicationRemarketingCampaignsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertonaService/GetRemarketingCampaignDetails", ReplyAction="http://tempuri.org/ICertonaService/GetRemarketingCampaignDetailsResponse")]
        Resonance.Insight3.Web.CertonaService.GetRemarketingCampaignDetailsResponse GetRemarketingCampaignDetails(Resonance.Insight3.Web.CertonaService.GetRemarketingCampaignDetailsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertonaService/UpdateRemarketingCampaignStatuses", ReplyAction="http://tempuri.org/ICertonaService/UpdateRemarketingCampaignStatusesResponse")]
        Resonance.Insight3.Web.CertonaService.UpdateRemarketingCampaignStatusesResponse UpdateRemarketingCampaignStatuses(Resonance.Insight3.Web.CertonaService.UpdateRemarketingCampaignStatusesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertonaService/ActivateRemarketingCampaign", ReplyAction="http://tempuri.org/ICertonaService/ActivateRemarketingCampaignResponse")]
        Resonance.Insight3.Web.CertonaService.ActivateRemarketingCampaignResponse ActivateRemarketingCampaign(Resonance.Insight3.Web.CertonaService.ActivateRemarketingCampaignRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertonaService/CreateRemarketingCampaign", ReplyAction="http://tempuri.org/ICertonaService/CreateRemarketingCampaignResponse")]
        Resonance.Insight3.Web.CertonaService.CreateRemarketingCampaignResponse CreateRemarketingCampaign(Resonance.Insight3.Web.CertonaService.CreateRemarketingCampaignRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertonaService/UpdateRemarketingCampaign", ReplyAction="http://tempuri.org/ICertonaService/UpdateRemarketingCampaignResponse")]
        Resonance.Insight3.Web.CertonaService.UpdateRemarketingCampaignResponse UpdateRemarketingCampaign(Resonance.Insight3.Web.CertonaService.UpdateRemarketingCampaignRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertonaService/GetApplicationFrequencyCap", ReplyAction="http://tempuri.org/ICertonaService/GetApplicationFrequencyCapResponse")]
        Resonance.Insight3.Web.CertonaService.GetApplicationFrequencyCapResponse GetApplicationFrequencyCap(Resonance.Insight3.Web.CertonaService.GetApplicationFrequencyCapRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertonaService/SetApplicationFrequencyCap", ReplyAction="http://tempuri.org/ICertonaService/SetApplicationFrequencyCapResponse")]
        void SetApplicationFrequencyCap(Resonance.Insight3.Web.CertonaService.SetApplicationFrequencyCapsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertonaService/GetAllAbandonmentTypes", ReplyAction="http://tempuri.org/ICertonaService/GetAllAbandonmentTypesResponse")]
        Resonance.Insight3.Web.CertonaService.GetAllAbandonmentTypesResponse GetAllAbandonmentTypes(Resonance.Insight3.Web.CertonaService.GetAllAbandonmentTypesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertonaService/GetAllAbandonmentFilters", ReplyAction="http://tempuri.org/ICertonaService/GetAllAbandonmentFiltersResponse")]
        Resonance.Insight3.Web.CertonaService.GetAllAbandonmentFiltersResponse GetAllAbandonmentFilters(Resonance.Insight3.Web.CertonaService.GetAllAbandonmentFiltersRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertonaService/GetAbandonmentFiltersByAbandonmentID", ReplyAction="http://tempuri.org/ICertonaService/GetAbandonmentFiltersByAbandonmentIDResponse")]
        Resonance.Insight3.Web.CertonaService.GetAllAbandonmentFiltersResponse GetAbandonmentFiltersByAbandonmentID(Resonance.Insight3.Web.CertonaService.GetAbandonmentFiltersByAbandonmentIDRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertonaService/GetAllAbandonmentIntervals", ReplyAction="http://tempuri.org/ICertonaService/GetAllAbandonmentIntervalsResponse")]
        Resonance.Insight3.Web.CertonaService.GetAllAbandonmentIntervalsResponse GetAllAbandonmentIntervals(Resonance.Insight3.Web.CertonaService.GetAllAbandonmentIntervalsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertonaService/GetAllDeliveryMethods", ReplyAction="http://tempuri.org/ICertonaService/GetAllDeliveryMethodsResponse")]
        Resonance.Insight3.Web.CertonaService.GetAllDeliveryMethodsResponse GetAllDeliveryMethods(Resonance.Insight3.Web.CertonaService.GetAllDeliveryMethodsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertonaService/GetAllServiceHeaders", ReplyAction="http://tempuri.org/ICertonaService/GetAllServiceHeadersResponse")]
        Resonance.Insight3.Web.CertonaService.GetAllServiceHeadersResponse GetAllServiceHeaders(Resonance.Insight3.Web.CertonaService.GetAllServiceHeadersRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertonaService/GetAllServiceProtocols", ReplyAction="http://tempuri.org/ICertonaService/GetAllServiceProtocolsResponse")]
        Resonance.Insight3.Web.CertonaService.GetAllServiceProtocolsResponse GetAllServiceProtocols(Resonance.Insight3.Web.CertonaService.GetAllServiceProtocolsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertonaService/GetAllServiceProtocolsAvailable", ReplyAction="http://tempuri.org/ICertonaService/GetAllServiceProtocolsAvailableResponse")]
        Resonance.Insight3.Web.CertonaService.GetAllServiceProtocolsAvailableResponse GetAllServiceProtocolsAvailable(Resonance.Insight3.Web.CertonaService.GetAllServiceProtocolsAvailableRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertonaService/GetAllServiceTypes", ReplyAction="http://tempuri.org/ICertonaService/GetAllServiceTypesResponse")]
        Resonance.Insight3.Web.CertonaService.GetAllServiceTypesResponse GetAllServiceTypes(Resonance.Insight3.Web.CertonaService.GetAllServiceTypesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertonaService/GetCatalogsForApplication", ReplyAction="http://tempuri.org/ICertonaService/GetCatalogsForApplicationResponse")]
        Resonance.Insight3.Web.CertonaService.GetCatalogsForApplicationResponse GetCatalogsForApplication(Resonance.Insight3.Web.CertonaService.GetCatalogsForApplicationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertonaService/GetCatalogCurrencyFields", ReplyAction="http://tempuri.org/ICertonaService/GetCatalogCurrencyFieldsResponse")]
        Resonance.Insight3.Web.CertonaService.GetCatalogCurrencyFieldsResponse GetCatalogCurrencyFields(Resonance.Insight3.Web.CertonaService.GetCatalogCurrencyFieldsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertonaService/GetRemarketingEmailSchemes", ReplyAction="http://tempuri.org/ICertonaService/GetRemarketingEmailSchemesResponse")]
        Resonance.Insight3.Web.CertonaService.GetRemarketingEmailSchemesResponse GetRemarketingEmailSchemes(Resonance.Insight3.Web.CertonaService.GetRemarketingEmailSchemesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertonaService/GetRemarketingESPConfigInfo", ReplyAction="http://tempuri.org/ICertonaService/GetRemarketingESPConfigInfoResponse")]
        Resonance.Insight3.Web.CertonaService.GetRemarketingESPConfigInfoResponse GetRemarketingESPConfigInfo(Resonance.Insight3.Web.CertonaService.GetRemarketingESPConfigInfoRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertonaService/CheckESPCampaignIDUniqueness", ReplyAction="http://tempuri.org/ICertonaService/CheckESPCampaignIDUniquenessResponse")]
        Resonance.Insight3.Web.CertonaService.CheckESPCampaignIDUniquenessResponse CheckESPCampaignIDUniqueness(Resonance.Insight3.Web.CertonaService.CheckESPCampaignIDUniquenessRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertonaService/CheckCampaignNameUniqueness", ReplyAction="http://tempuri.org/ICertonaService/CheckCampaignNameUniquenessResponse")]
        Resonance.Insight3.Web.CertonaService.CheckCampaignNameUniquenessResponse CheckCampaignNameUniqueness(Resonance.Insight3.Web.CertonaService.CheckCampaignNameUniquenessRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertonaService/GetCampaignVariantRule", ReplyAction="http://tempuri.org/ICertonaService/GetCampaignVariantRuleResponse")]
        Resonance.Insight3.Web.CertonaService.GetCampaignVariantRuleResponse GetCampaignVariantRule(Resonance.Insight3.Web.CertonaService.GetCampaignVariantRuleRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertonaService/GetAccountNameByApplicationId", ReplyAction="http://tempuri.org/ICertonaService/GetAccountNameByApplicationIdResponse")]
        Resonance.Insight3.Web.CertonaService.GetAccountNameByApplicationIdResponse GetAccountNameByApplicationId(Resonance.Insight3.Web.CertonaService.GetAccountNameByApplicationIdRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertonaService/GetEmailServiceProviderConfiguration", ReplyAction="http://tempuri.org/ICertonaService/GetEmailServiceProviderConfigurationResponse")]
        Resonance.Insight3.Web.CertonaService.GetEmailServiceProviderConfigurationResponse GetEmailServiceProviderConfiguration(Resonance.Insight3.Web.CertonaService.GetEmailServiceProviderConfigurationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertonaService/GetReportsList", ReplyAction="http://tempuri.org/ICertonaService/GetReportsListResponse")]
        Resonance.Insight3.Web.CertonaService.GetReportsListResponse GetReportsList(Resonance.Insight3.Web.CertonaService.GetReportsListRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertonaService/GetReportingDataLastUpdated", ReplyAction="http://tempuri.org/ICertonaService/GetReportingDataLastUpdatedResponse")]
        Resonance.Insight3.Web.CertonaService.GetReportingDataLastUpdatedResponse GetReportingDataLastUpdated(Resonance.Insight3.Web.CertonaService.GetReportingDataLastUpdatedRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertonaService/GetTrendsDataApplication", ReplyAction="http://tempuri.org/ICertonaService/GetTrendsDataApplicationResponse")]
        Resonance.Insight3.Web.CertonaService.GetTrendsDataResponse GetTrendsDataApplication(Resonance.Insight3.Web.CertonaService.GetTrendsDataApplicationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertonaService/GetTrendsDataPackage", ReplyAction="http://tempuri.org/ICertonaService/GetTrendsDataPackageResponse")]
        Resonance.Insight3.Web.CertonaService.GetTrendsDataResponse GetTrendsDataPackage(Resonance.Insight3.Web.CertonaService.GetTrendsDataPackageRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertonaService/GetTrendsDataScheme", ReplyAction="http://tempuri.org/ICertonaService/GetTrendsDataSchemeResponse")]
        Resonance.Insight3.Web.CertonaService.GetTrendsDataResponse GetTrendsDataScheme(Resonance.Insight3.Web.CertonaService.GetTrendsDataSchemeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertonaService/GetTrendsDataExperience", ReplyAction="http://tempuri.org/ICertonaService/GetTrendsDataExperienceResponse")]
        Resonance.Insight3.Web.CertonaService.GetTrendsDataResponse GetTrendsDataExperience(Resonance.Insight3.Web.CertonaService.GetTrendsDataExperienceRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertonaService/GetTrendsDataVariant", ReplyAction="http://tempuri.org/ICertonaService/GetTrendsDataVariantResponse")]
        Resonance.Insight3.Web.CertonaService.GetTrendsDataResponse GetTrendsDataVariant(Resonance.Insight3.Web.CertonaService.GetTrendsDataVariantRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertonaService/GetSchemeDetails", ReplyAction="http://tempuri.org/ICertonaService/GetSchemeDetailsResponse")]
        Resonance.Insight3.Web.CertonaService.GetSchemeDetailsResponse GetSchemeDetails(Resonance.Insight3.Web.CertonaService.GetSchemeDetailsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertonaService/GetSchemeContext", ReplyAction="http://tempuri.org/ICertonaService/GetSchemeContextResponse")]
        Resonance.Insight3.Web.CertonaService.GetSchemeContextResponse GetSchemeContext(Resonance.Insight3.Web.CertonaService.GetSchemeContextRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertonaService/GetSchemeEventContext", ReplyAction="http://tempuri.org/ICertonaService/GetSchemeEventContextResponse")]
        Resonance.Insight3.Web.CertonaService.GetSchemeEventContextResponse GetSchemeEventContext(Resonance.Insight3.Web.CertonaService.GetSchemeEventContextRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertonaService/GetRuleOperators", ReplyAction="http://tempuri.org/ICertonaService/GetRuleOperatorsResponse")]
        Resonance.Insight3.Web.CertonaService.GetRuleOperatorsResponse GetRuleOperators(Resonance.Insight3.Web.CertonaService.GetRuleOperatorsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertonaService/AuthenticateUser", ReplyAction="http://tempuri.org/ICertonaService/AuthenticateUserResponse")]
        Resonance.Insight3.Web.CertonaService.AuthenticateUserResponse AuthenticateUser(Resonance.Insight3.Web.CertonaService.AuthenticateUserRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertonaService/GetUserAccountApplicationFeatures", ReplyAction="http://tempuri.org/ICertonaService/GetUserAccountApplicationFeaturesResponse")]
        Resonance.Insight3.Web.CertonaService.GetUserAccountApplicationFeaturesResponse GetUserAccountApplicationFeatures(Resonance.Insight3.Web.CertonaService.GetUserAccountApplicationFeaturesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertonaService/SetUserSettings", ReplyAction="http://tempuri.org/ICertonaService/SetUserSettingsResponse")]
        Resonance.Insight3.Web.CertonaService.SetUserSettingsResponse SetUserSettings(Resonance.Insight3.Web.CertonaService.SetUserSettingsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertonaService/GetContentPanel", ReplyAction="http://tempuri.org/ICertonaService/GetContentPanelResponse")]
        Resonance.Insight3.Web.CertonaService.GetContentPanelResponse GetContentPanel(Resonance.Insight3.Web.CertonaService.GetContentPanelRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertonaService/SetContentPanelSectionState", ReplyAction="http://tempuri.org/ICertonaService/SetContentPanelSectionStateResponse")]
        void SetContentPanelSectionState(Resonance.Insight3.Web.CertonaService.SetContentPanelSectionStateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertonaService/GetAccountsByUser", ReplyAction="http://tempuri.org/ICertonaService/GetAccountsByUserResponse")]
        Resonance.Insight3.Web.CertonaService.GetAccountsByUserResponse GetAccountsByUser(Resonance.Insight3.Web.CertonaService.GetAccountsByUserRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertonaService/GetApplicationDetails", ReplyAction="http://tempuri.org/ICertonaService/GetApplicationDetailsResponse")]
        Resonance.Insight3.Web.CertonaService.GetApplicationDetailsResponse GetApplicationDetails(Resonance.Insight3.Web.CertonaService.GetApplicationDetailsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertonaService/GetApplicationPackages", ReplyAction="http://tempuri.org/ICertonaService/GetApplicationPackagesResponse")]
        Resonance.Insight3.Web.CertonaService.GetApplicationPackagesResponse GetApplicationPackages(Resonance.Insight3.Web.CertonaService.GetApplicationPackagesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertonaService/GetApplicationCatalogs", ReplyAction="http://tempuri.org/ICertonaService/GetApplicationCatalogsResponse")]
        Resonance.Insight3.Web.CertonaService.GetApplicationCatalogsResponse GetApplicationCatalogs(Resonance.Insight3.Web.CertonaService.GetApplicationCatalogsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertonaService/GetApplicationSchemes", ReplyAction="http://tempuri.org/ICertonaService/GetApplicationSchemesResponse")]
        Resonance.Insight3.Web.CertonaService.GetApplicationSchemesResponse GetApplicationSchemes(Resonance.Insight3.Web.CertonaService.GetApplicationSchemesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertonaService/GetApplicationSegments", ReplyAction="http://tempuri.org/ICertonaService/GetApplicationSegmentsResponse")]
        Resonance.Insight3.Web.CertonaService.GetApplicationSegmentsResponse GetApplicationSegments(Resonance.Insight3.Web.CertonaService.GetApplicationSegmentsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertonaService/GetFilterAttributes", ReplyAction="http://tempuri.org/ICertonaService/GetFilterAttributesResponse")]
        Resonance.Insight3.Web.CertonaService.GetFilterAttributesResponse GetFilterAttributes(Resonance.Insight3.Web.CertonaService.GetFilterAttributesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertonaService/GetConditionAttributes", ReplyAction="http://tempuri.org/ICertonaService/GetConditionAttributesResponse")]
        Resonance.Insight3.Web.CertonaService.GetConditionAttributesResponse GetConditionAttributes(Resonance.Insight3.Web.CertonaService.GetConditionAttributesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertonaService/GetNavigationMapping", ReplyAction="http://tempuri.org/ICertonaService/GetNavigationMappingResponse")]
        Resonance.Insight3.Web.CertonaService.GetNavigationMappingResponse GetNavigationMapping(Resonance.Insight3.Web.CertonaService.GetNavigationMappingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertonaService/GetUserMapping", ReplyAction="http://tempuri.org/ICertonaService/GetUserMappingResponse")]
        Resonance.Insight3.Web.CertonaService.GetUserMappingResponse GetUserMapping(Resonance.Insight3.Web.CertonaService.GetUserMappingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertonaService/GetCatalogDetails", ReplyAction="http://tempuri.org/ICertonaService/GetCatalogDetailsResponse")]
        Resonance.Insight3.Web.CertonaService.GetCatalogDetailsResponse GetCatalogDetails(Resonance.Insight3.Web.CertonaService.GetCatalogDetailsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertonaService/GetCatalogItem", ReplyAction="http://tempuri.org/ICertonaService/GetCatalogItemResponse")]
        Resonance.Insight3.Web.CertonaService.GetCatalogItemResponse GetCatalogItem(Resonance.Insight3.Web.CertonaService.GetCatalogItemRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertonaService/GetCatalogItems", ReplyAction="http://tempuri.org/ICertonaService/GetCatalogItemsResponse")]
        Resonance.Insight3.Web.CertonaService.GetCatalogItemsResponse GetCatalogItems(Resonance.Insight3.Web.CertonaService.GetCatalogItemsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertonaService/GetCatalogRuleContexts", ReplyAction="http://tempuri.org/ICertonaService/GetCatalogRuleContextsResponse")]
        Resonance.Insight3.Web.CertonaService.GetCatalogRuleContextsResponse GetCatalogRuleContexts(Resonance.Insight3.Web.CertonaService.GetCatalogRuleContextsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertonaService/GetCatalogByRule", ReplyAction="http://tempuri.org/ICertonaService/GetCatalogByRuleResponse")]
        Resonance.Insight3.Web.CertonaService.GetCatalogByRuleResponse GetCatalogByRule(Resonance.Insight3.Web.CertonaService.GetCatalogByRuleRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertonaService/GetCatalogMappingFromResonanceField", ReplyAction="http://tempuri.org/ICertonaService/GetCatalogMappingFromResonanceFieldResponse")]
        Resonance.Insight3.Web.CertonaService.GetCatalogMappingFromResonanceFieldResponse GetCatalogMappingFromResonanceField(Resonance.Insight3.Web.CertonaService.GetCatalogMappingFromResonanceFieldRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertonaService/GetRecommendationTypes", ReplyAction="http://tempuri.org/ICertonaService/GetRecommendationTypesResponse")]
        Resonance.Insight3.Web.CertonaService.GetRecommendationTypesResponse GetRecommendationTypes(Resonance.Insight3.Web.CertonaService.GetRecommendationTypesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertonaService/GetExperienceBoosts", ReplyAction="http://tempuri.org/ICertonaService/GetExperienceBoostsResponse")]
        Resonance.Insight3.Web.CertonaService.GetExperienceBoostsResponse GetExperienceBoosts(Resonance.Insight3.Web.CertonaService.GetExperienceBoostsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertonaService/GetExperienceVariants", ReplyAction="http://tempuri.org/ICertonaService/GetExperienceVariantsResponse")]
        Resonance.Insight3.Web.CertonaService.GetExperienceVariantsResponse GetExperienceVariants(Resonance.Insight3.Web.CertonaService.GetExperienceVariantsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertonaService/GetExperienceDetails", ReplyAction="http://tempuri.org/ICertonaService/GetExperienceDetailsResponse")]
        Resonance.Insight3.Web.CertonaService.GetExperienceDetailsResponse GetExperienceDetails(Resonance.Insight3.Web.CertonaService.GetExperienceDetailsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertonaService/UpdateExperienceDetails", ReplyAction="http://tempuri.org/ICertonaService/UpdateExperienceDetailsResponse")]
        Resonance.Insight3.Web.CertonaService.UpdateExperienceDetailsResponse UpdateExperienceDetails(Resonance.Insight3.Web.CertonaService.UpdateExperienceDetailsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertonaService/UpdateExperienceModifiers", ReplyAction="http://tempuri.org/ICertonaService/UpdateExperienceModifiersResponse")]
        Resonance.Insight3.Web.CertonaService.UpdateExperienceModifiersResponse UpdateExperienceModifiers(Resonance.Insight3.Web.CertonaService.UpdateExperienceModifiersRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertonaService/UpdateVariantModifiers", ReplyAction="http://tempuri.org/ICertonaService/UpdateVariantModifiersResponse")]
        Resonance.Insight3.Web.CertonaService.UpdateVariantModifiersResponse UpdateVariantModifiers(Resonance.Insight3.Web.CertonaService.UpdateVariantModifiersRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertonaService/UpdateExperienceTraffic", ReplyAction="http://tempuri.org/ICertonaService/UpdateExperienceTrafficResponse")]
        Resonance.Insight3.Web.CertonaService.UpdateExperienceTrafficResponse UpdateExperienceTraffic(Resonance.Insight3.Web.CertonaService.UpdateExperienceTrafficRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertonaService/CreateExperience", ReplyAction="http://tempuri.org/ICertonaService/CreateExperienceResponse")]
        Resonance.Insight3.Web.CertonaService.CreateExperienceResponse CreateExperience(Resonance.Insight3.Web.CertonaService.CreateExperienceRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertonaService/GetAccountExplorerStatusList", ReplyAction="http://tempuri.org/ICertonaService/GetAccountExplorerStatusListResponse")]
        Resonance.Insight3.Web.CertonaService.GetAccountExplorerStatusResponse GetAccountExplorerStatusList(Resonance.Insight3.Web.CertonaService.GetAccountExplorerStatusRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertonaService/GetPanelBarStates", ReplyAction="http://tempuri.org/ICertonaService/GetPanelBarStatesResponse")]
        Resonance.Insight3.Web.CertonaService.GetPanelBarStatesResponse GetPanelBarStates(Resonance.Insight3.Web.CertonaService.GetPanelBarStatesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertonaService/GetAccountExplorerTree", ReplyAction="http://tempuri.org/ICertonaService/GetAccountExplorerTreeResponse")]
        Resonance.Insight3.Web.CertonaService.GetAccountExplorerTreeResponse GetAccountExplorerTree(Resonance.Insight3.Web.CertonaService.GetAccountExplorerTreeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertonaService/GetAssetExplorerTree", ReplyAction="http://tempuri.org/ICertonaService/GetAssetExplorerTreeResponse")]
        Resonance.Insight3.Web.CertonaService.GetAssetExplorerTreeResponse GetAssetExplorerTree(Resonance.Insight3.Web.CertonaService.GetAssetExplorerTreeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertonaService/SetPanelBarWidth", ReplyAction="http://tempuri.org/ICertonaService/SetPanelBarWidthResponse")]
        void SetPanelBarWidth(Resonance.Insight3.Web.CertonaService.SetPanelBarWidthRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertonaService/SetSelectedNode", ReplyAction="http://tempuri.org/ICertonaService/SetSelectedNodeResponse")]
        void SetSelectedNode(Resonance.Insight3.Web.CertonaService.SetSelectedNodeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertonaService/SetAccountExplorerStatusList", ReplyAction="http://tempuri.org/ICertonaService/SetAccountExplorerStatusListResponse")]
        void SetAccountExplorerStatusList(Resonance.Insight3.Web.CertonaService.SetAccountExplorerStatusRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertonaService/GetPanelBarWidth", ReplyAction="http://tempuri.org/ICertonaService/GetPanelBarWidthResponse")]
        Resonance.Insight3.Web.CertonaService.GetPanelBarWidthResponse GetPanelBarWidth(Resonance.Insight3.Web.CertonaService.GetPanelBarWidthRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertonaService/SetAccountExplorerNodeState", ReplyAction="http://tempuri.org/ICertonaService/SetAccountExplorerNodeStateResponse")]
        void SetAccountExplorerNodeState(Resonance.Insight3.Web.CertonaService.SetAccountExplorerNodeStateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertonaService/SetAssetExplorerNodeState", ReplyAction="http://tempuri.org/ICertonaService/SetAssetExplorerNodeStateResponse")]
        void SetAssetExplorerNodeState(Resonance.Insight3.Web.CertonaService.SetAssetExplorerNodeStateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertonaService/SetPanelBarStates", ReplyAction="http://tempuri.org/ICertonaService/SetPanelBarStatesResponse")]
        void SetPanelBarStates(Resonance.Insight3.Web.CertonaService.SetPanelBarStatesRequest request);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICertonaServiceChannel : Resonance.Insight3.Web.CertonaService.ICertonaService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CertonaServiceClient : System.ServiceModel.ClientBase<Resonance.Insight3.Web.CertonaService.ICertonaService>, Resonance.Insight3.Web.CertonaService.ICertonaService {
        
        public CertonaServiceClient() {
        }
        
        public CertonaServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CertonaServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CertonaServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CertonaServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Resonance.Insight3.Web.CertonaService.GetSchemeExperiencesResponse GetSchemeExperiences(Resonance.Insight3.Web.CertonaService.GetSchemeExperiencesRequest request) {
            return base.Channel.GetSchemeExperiences(request);
        }
        
        public Resonance.Insight3.Web.CertonaService.GetSchemeNumberOfItemsByExperienceResponse GetSchemeNumberOfItemsByExperience(Resonance.Insight3.Web.CertonaService.GetSchemeNumberOfItemsByExperienceRequest request) {
            return base.Channel.GetSchemeNumberOfItemsByExperience(request);
        }
        
        public Resonance.Insight3.Web.CertonaService.GetToolsListResponse GetToolsList(Resonance.Insight3.Web.CertonaService.GetToolsListRequest request) {
            return base.Channel.GetToolsList(request);
        }
        
        public Resonance.Insight3.Web.CertonaService.GetVariantDetailsResponse GetVariantDetails(Resonance.Insight3.Web.CertonaService.GetVariantDetailsRequest request) {
            return base.Channel.GetVariantDetails(request);
        }
        
        public Resonance.Insight3.Web.CertonaService.GetVariantRulesResponse GetVariantRules(Resonance.Insight3.Web.CertonaService.GetVariantRulesRequest request) {
            return base.Channel.GetVariantRules(request);
        }
        
        public Resonance.Insight3.Web.CertonaService.GetVariantBoostsResponse GetVariantBoosts(Resonance.Insight3.Web.CertonaService.GetVariantBoostsRequest request) {
            return base.Channel.GetVariantBoosts(request);
        }
        
        public Resonance.Insight3.Web.CertonaService.GetVariantSlotsResponse GetVariantSlots(Resonance.Insight3.Web.CertonaService.GetVariantSlotsRequest request) {
            return base.Channel.GetVariantSlots(request);
        }
        
        public Resonance.Insight3.Web.CertonaService.UpdateVariantStatusResponse UpdateVariantStatus(Resonance.Insight3.Web.CertonaService.UpdateVariantStatusRequest request) {
            return base.Channel.UpdateVariantStatus(request);
        }
        
        public Resonance.Insight3.Web.CertonaService.UpdateVariantPriorityResponse UpdateVariantPriority(Resonance.Insight3.Web.CertonaService.UpdateVariantPriorityRequest request) {
            return base.Channel.UpdateVariantPriority(request);
        }
        
        public Resonance.Insight3.Web.CertonaService.UpdateVariantDetailsResponse UpdateVariantDetails(Resonance.Insight3.Web.CertonaService.UpdateVariantDetailsRequest request) {
            return base.Channel.UpdateVariantDetails(request);
        }
        
        public Resonance.Insight3.Web.CertonaService.CreateVariantResponse CreateVariant(Resonance.Insight3.Web.CertonaService.CreateVariantRequest request) {
            return base.Channel.CreateVariant(request);
        }
        
        public Resonance.Insight3.Web.CertonaService.GetLastVariantPriorityByExperienceResponse GetLastVariantPriorityByExperience(Resonance.Insight3.Web.CertonaService.GetLastVariantPriorityByExperienceRequest request) {
            return base.Channel.GetLastVariantPriorityByExperience(request);
        }
        
        public Resonance.Insight3.Web.CertonaService.GetApplicationCatalogsByExperienceResponse GetApplicationCatalogsByExperience(Resonance.Insight3.Web.CertonaService.GetApplicationCatalogsByExperienceRequest request) {
            return base.Channel.GetApplicationCatalogsByExperience(request);
        }
        
        public Resonance.Insight3.Web.CertonaService.CreateRuleResponse CreateRule(Resonance.Insight3.Web.CertonaService.CreateRuleRequest request) {
            return base.Channel.CreateRule(request);
        }
        
        public Resonance.Insight3.Web.CertonaService.UpdateRuleResponse UpdateRule(Resonance.Insight3.Web.CertonaService.UpdateRuleRequest request) {
            return base.Channel.UpdateRule(request);
        }
        
        public Resonance.Insight3.Web.CertonaService.SaveExpressionResponse SaveExpression(Resonance.Insight3.Web.CertonaService.SaveExpressionRequest request) {
            return base.Channel.SaveExpression(request);
        }
        
        public Resonance.Insight3.Web.CertonaService.GetControlSetResponse GetControlSet(Resonance.Insight3.Web.CertonaService.GetControlSetRequest request) {
            return base.Channel.GetControlSet(request);
        }
        
        public Resonance.Insight3.Web.CertonaService.DeleteRuleResponse DeleteRule(Resonance.Insight3.Web.CertonaService.DeleteRuleRequest request) {
            return base.Channel.DeleteRule(request);
        }
        
        public Resonance.Insight3.Web.CertonaService.DeleteExpressionResponse DeleteExpression(Resonance.Insight3.Web.CertonaService.DeleteExpressionRequest request) {
            return base.Channel.DeleteExpression(request);
        }
        
        public Resonance.Insight3.Web.CertonaService.GetContextsResponse GetContexts(Resonance.Insight3.Web.CertonaService.GetContextsRequest request) {
            return base.Channel.GetContexts(request);
        }
        
        public Resonance.Insight3.Web.CertonaService.GetStatusListResponse GetStatusList(Resonance.Insight3.Web.CertonaService.GetStatusListRequest request) {
            return base.Channel.GetStatusList(request);
        }
        
        public Resonance.Insight3.Web.CertonaService.GetModelResponse GetModel(Resonance.Insight3.Web.CertonaService.GetModelRequest request) {
            return base.Channel.GetModel(request);
        }
        
        public Resonance.Insight3.Web.CertonaService.GetModelsResponse GetModels(Resonance.Insight3.Web.CertonaService.GetModelsRequest request) {
            return base.Channel.GetModels(request);
        }
        
        public Resonance.Insight3.Web.CertonaService.GetSegmentItemsResponse GetSegmentItems(Resonance.Insight3.Web.CertonaService.GetSegmentItemsRequest request) {
            return base.Channel.GetSegmentItems(request);
        }
        
        public Resonance.Insight3.Web.CertonaService.GetPackageDetailsResponse GetPackageDetails(Resonance.Insight3.Web.CertonaService.GetPackageDetailsRequest request) {
            return base.Channel.GetPackageDetails(request);
        }
        
        public Resonance.Insight3.Web.CertonaService.GetPackageSchemesResponse GetPackageSchemes(Resonance.Insight3.Web.CertonaService.GetPackageSchemesRequest request) {
            return base.Channel.GetPackageSchemes(request);
        }
        
        public Resonance.Insight3.Web.CertonaService.GetApplicationRemarketingCampaignsResponse GetApplicationRemarketingCampaigns(Resonance.Insight3.Web.CertonaService.GetApplicationRemarketingCampaignsRequest request) {
            return base.Channel.GetApplicationRemarketingCampaigns(request);
        }
        
        public Resonance.Insight3.Web.CertonaService.GetRemarketingCampaignDetailsResponse GetRemarketingCampaignDetails(Resonance.Insight3.Web.CertonaService.GetRemarketingCampaignDetailsRequest request) {
            return base.Channel.GetRemarketingCampaignDetails(request);
        }
        
        public Resonance.Insight3.Web.CertonaService.UpdateRemarketingCampaignStatusesResponse UpdateRemarketingCampaignStatuses(Resonance.Insight3.Web.CertonaService.UpdateRemarketingCampaignStatusesRequest request) {
            return base.Channel.UpdateRemarketingCampaignStatuses(request);
        }
        
        public Resonance.Insight3.Web.CertonaService.ActivateRemarketingCampaignResponse ActivateRemarketingCampaign(Resonance.Insight3.Web.CertonaService.ActivateRemarketingCampaignRequest request) {
            return base.Channel.ActivateRemarketingCampaign(request);
        }
        
        public Resonance.Insight3.Web.CertonaService.CreateRemarketingCampaignResponse CreateRemarketingCampaign(Resonance.Insight3.Web.CertonaService.CreateRemarketingCampaignRequest request) {
            return base.Channel.CreateRemarketingCampaign(request);
        }
        
        public Resonance.Insight3.Web.CertonaService.UpdateRemarketingCampaignResponse UpdateRemarketingCampaign(Resonance.Insight3.Web.CertonaService.UpdateRemarketingCampaignRequest request) {
            return base.Channel.UpdateRemarketingCampaign(request);
        }
        
        public Resonance.Insight3.Web.CertonaService.GetApplicationFrequencyCapResponse GetApplicationFrequencyCap(Resonance.Insight3.Web.CertonaService.GetApplicationFrequencyCapRequest request) {
            return base.Channel.GetApplicationFrequencyCap(request);
        }
        
        public void SetApplicationFrequencyCap(Resonance.Insight3.Web.CertonaService.SetApplicationFrequencyCapsRequest request) {
            base.Channel.SetApplicationFrequencyCap(request);
        }
        
        public Resonance.Insight3.Web.CertonaService.GetAllAbandonmentTypesResponse GetAllAbandonmentTypes(Resonance.Insight3.Web.CertonaService.GetAllAbandonmentTypesRequest request) {
            return base.Channel.GetAllAbandonmentTypes(request);
        }
        
        public Resonance.Insight3.Web.CertonaService.GetAllAbandonmentFiltersResponse GetAllAbandonmentFilters(Resonance.Insight3.Web.CertonaService.GetAllAbandonmentFiltersRequest request) {
            return base.Channel.GetAllAbandonmentFilters(request);
        }
        
        public Resonance.Insight3.Web.CertonaService.GetAllAbandonmentFiltersResponse GetAbandonmentFiltersByAbandonmentID(Resonance.Insight3.Web.CertonaService.GetAbandonmentFiltersByAbandonmentIDRequest request) {
            return base.Channel.GetAbandonmentFiltersByAbandonmentID(request);
        }
        
        public Resonance.Insight3.Web.CertonaService.GetAllAbandonmentIntervalsResponse GetAllAbandonmentIntervals(Resonance.Insight3.Web.CertonaService.GetAllAbandonmentIntervalsRequest request) {
            return base.Channel.GetAllAbandonmentIntervals(request);
        }
        
        public Resonance.Insight3.Web.CertonaService.GetAllDeliveryMethodsResponse GetAllDeliveryMethods(Resonance.Insight3.Web.CertonaService.GetAllDeliveryMethodsRequest request) {
            return base.Channel.GetAllDeliveryMethods(request);
        }
        
        public Resonance.Insight3.Web.CertonaService.GetAllServiceHeadersResponse GetAllServiceHeaders(Resonance.Insight3.Web.CertonaService.GetAllServiceHeadersRequest request) {
            return base.Channel.GetAllServiceHeaders(request);
        }
        
        public Resonance.Insight3.Web.CertonaService.GetAllServiceProtocolsResponse GetAllServiceProtocols(Resonance.Insight3.Web.CertonaService.GetAllServiceProtocolsRequest request) {
            return base.Channel.GetAllServiceProtocols(request);
        }
        
        public Resonance.Insight3.Web.CertonaService.GetAllServiceProtocolsAvailableResponse GetAllServiceProtocolsAvailable(Resonance.Insight3.Web.CertonaService.GetAllServiceProtocolsAvailableRequest request) {
            return base.Channel.GetAllServiceProtocolsAvailable(request);
        }
        
        public Resonance.Insight3.Web.CertonaService.GetAllServiceTypesResponse GetAllServiceTypes(Resonance.Insight3.Web.CertonaService.GetAllServiceTypesRequest request) {
            return base.Channel.GetAllServiceTypes(request);
        }
        
        public Resonance.Insight3.Web.CertonaService.GetCatalogsForApplicationResponse GetCatalogsForApplication(Resonance.Insight3.Web.CertonaService.GetCatalogsForApplicationRequest request) {
            return base.Channel.GetCatalogsForApplication(request);
        }
        
        public Resonance.Insight3.Web.CertonaService.GetCatalogCurrencyFieldsResponse GetCatalogCurrencyFields(Resonance.Insight3.Web.CertonaService.GetCatalogCurrencyFieldsRequest request) {
            return base.Channel.GetCatalogCurrencyFields(request);
        }
        
        public Resonance.Insight3.Web.CertonaService.GetRemarketingEmailSchemesResponse GetRemarketingEmailSchemes(Resonance.Insight3.Web.CertonaService.GetRemarketingEmailSchemesRequest request) {
            return base.Channel.GetRemarketingEmailSchemes(request);
        }
        
        public Resonance.Insight3.Web.CertonaService.GetRemarketingESPConfigInfoResponse GetRemarketingESPConfigInfo(Resonance.Insight3.Web.CertonaService.GetRemarketingESPConfigInfoRequest request) {
            return base.Channel.GetRemarketingESPConfigInfo(request);
        }
        
        public Resonance.Insight3.Web.CertonaService.CheckESPCampaignIDUniquenessResponse CheckESPCampaignIDUniqueness(Resonance.Insight3.Web.CertonaService.CheckESPCampaignIDUniquenessRequest request) {
            return base.Channel.CheckESPCampaignIDUniqueness(request);
        }
        
        public Resonance.Insight3.Web.CertonaService.CheckCampaignNameUniquenessResponse CheckCampaignNameUniqueness(Resonance.Insight3.Web.CertonaService.CheckCampaignNameUniquenessRequest request) {
            return base.Channel.CheckCampaignNameUniqueness(request);
        }
        
        public Resonance.Insight3.Web.CertonaService.GetCampaignVariantRuleResponse GetCampaignVariantRule(Resonance.Insight3.Web.CertonaService.GetCampaignVariantRuleRequest request) {
            return base.Channel.GetCampaignVariantRule(request);
        }
        
        public Resonance.Insight3.Web.CertonaService.GetAccountNameByApplicationIdResponse GetAccountNameByApplicationId(Resonance.Insight3.Web.CertonaService.GetAccountNameByApplicationIdRequest request) {
            return base.Channel.GetAccountNameByApplicationId(request);
        }
        
        public Resonance.Insight3.Web.CertonaService.GetEmailServiceProviderConfigurationResponse GetEmailServiceProviderConfiguration(Resonance.Insight3.Web.CertonaService.GetEmailServiceProviderConfigurationRequest request) {
            return base.Channel.GetEmailServiceProviderConfiguration(request);
        }
        
        public Resonance.Insight3.Web.CertonaService.GetReportsListResponse GetReportsList(Resonance.Insight3.Web.CertonaService.GetReportsListRequest request) {
            return base.Channel.GetReportsList(request);
        }
        
        public Resonance.Insight3.Web.CertonaService.GetReportingDataLastUpdatedResponse GetReportingDataLastUpdated(Resonance.Insight3.Web.CertonaService.GetReportingDataLastUpdatedRequest request) {
            return base.Channel.GetReportingDataLastUpdated(request);
        }
        
        public Resonance.Insight3.Web.CertonaService.GetTrendsDataResponse GetTrendsDataApplication(Resonance.Insight3.Web.CertonaService.GetTrendsDataApplicationRequest request) {
            return base.Channel.GetTrendsDataApplication(request);
        }
        
        public Resonance.Insight3.Web.CertonaService.GetTrendsDataResponse GetTrendsDataPackage(Resonance.Insight3.Web.CertonaService.GetTrendsDataPackageRequest request) {
            return base.Channel.GetTrendsDataPackage(request);
        }
        
        public Resonance.Insight3.Web.CertonaService.GetTrendsDataResponse GetTrendsDataScheme(Resonance.Insight3.Web.CertonaService.GetTrendsDataSchemeRequest request) {
            return base.Channel.GetTrendsDataScheme(request);
        }
        
        public Resonance.Insight3.Web.CertonaService.GetTrendsDataResponse GetTrendsDataExperience(Resonance.Insight3.Web.CertonaService.GetTrendsDataExperienceRequest request) {
            return base.Channel.GetTrendsDataExperience(request);
        }
        
        public Resonance.Insight3.Web.CertonaService.GetTrendsDataResponse GetTrendsDataVariant(Resonance.Insight3.Web.CertonaService.GetTrendsDataVariantRequest request) {
            return base.Channel.GetTrendsDataVariant(request);
        }
        
        public Resonance.Insight3.Web.CertonaService.GetSchemeDetailsResponse GetSchemeDetails(Resonance.Insight3.Web.CertonaService.GetSchemeDetailsRequest request) {
            return base.Channel.GetSchemeDetails(request);
        }
        
        public Resonance.Insight3.Web.CertonaService.GetSchemeContextResponse GetSchemeContext(Resonance.Insight3.Web.CertonaService.GetSchemeContextRequest request) {
            return base.Channel.GetSchemeContext(request);
        }
        
        public Resonance.Insight3.Web.CertonaService.GetSchemeEventContextResponse GetSchemeEventContext(Resonance.Insight3.Web.CertonaService.GetSchemeEventContextRequest request) {
            return base.Channel.GetSchemeEventContext(request);
        }
        
        public Resonance.Insight3.Web.CertonaService.GetRuleOperatorsResponse GetRuleOperators(Resonance.Insight3.Web.CertonaService.GetRuleOperatorsRequest request) {
            return base.Channel.GetRuleOperators(request);
        }
        
        public Resonance.Insight3.Web.CertonaService.AuthenticateUserResponse AuthenticateUser(Resonance.Insight3.Web.CertonaService.AuthenticateUserRequest request) {
            return base.Channel.AuthenticateUser(request);
        }
        
        public Resonance.Insight3.Web.CertonaService.GetUserAccountApplicationFeaturesResponse GetUserAccountApplicationFeatures(Resonance.Insight3.Web.CertonaService.GetUserAccountApplicationFeaturesRequest request) {
            return base.Channel.GetUserAccountApplicationFeatures(request);
        }
        
        public Resonance.Insight3.Web.CertonaService.SetUserSettingsResponse SetUserSettings(Resonance.Insight3.Web.CertonaService.SetUserSettingsRequest request) {
            return base.Channel.SetUserSettings(request);
        }
        
        public Resonance.Insight3.Web.CertonaService.GetContentPanelResponse GetContentPanel(Resonance.Insight3.Web.CertonaService.GetContentPanelRequest request) {
            return base.Channel.GetContentPanel(request);
        }
        
        public void SetContentPanelSectionState(Resonance.Insight3.Web.CertonaService.SetContentPanelSectionStateRequest request) {
            base.Channel.SetContentPanelSectionState(request);
        }
        
        public Resonance.Insight3.Web.CertonaService.GetAccountsByUserResponse GetAccountsByUser(Resonance.Insight3.Web.CertonaService.GetAccountsByUserRequest request) {
            return base.Channel.GetAccountsByUser(request);
        }
        
        public Resonance.Insight3.Web.CertonaService.GetApplicationDetailsResponse GetApplicationDetails(Resonance.Insight3.Web.CertonaService.GetApplicationDetailsRequest request) {
            return base.Channel.GetApplicationDetails(request);
        }
        
        public Resonance.Insight3.Web.CertonaService.GetApplicationPackagesResponse GetApplicationPackages(Resonance.Insight3.Web.CertonaService.GetApplicationPackagesRequest request) {
            return base.Channel.GetApplicationPackages(request);
        }
        
        public Resonance.Insight3.Web.CertonaService.GetApplicationCatalogsResponse GetApplicationCatalogs(Resonance.Insight3.Web.CertonaService.GetApplicationCatalogsRequest request) {
            return base.Channel.GetApplicationCatalogs(request);
        }
        
        public Resonance.Insight3.Web.CertonaService.GetApplicationSchemesResponse GetApplicationSchemes(Resonance.Insight3.Web.CertonaService.GetApplicationSchemesRequest request) {
            return base.Channel.GetApplicationSchemes(request);
        }
        
        public Resonance.Insight3.Web.CertonaService.GetApplicationSegmentsResponse GetApplicationSegments(Resonance.Insight3.Web.CertonaService.GetApplicationSegmentsRequest request) {
            return base.Channel.GetApplicationSegments(request);
        }
        
        public Resonance.Insight3.Web.CertonaService.GetFilterAttributesResponse GetFilterAttributes(Resonance.Insight3.Web.CertonaService.GetFilterAttributesRequest request) {
            return base.Channel.GetFilterAttributes(request);
        }
        
        public Resonance.Insight3.Web.CertonaService.GetConditionAttributesResponse GetConditionAttributes(Resonance.Insight3.Web.CertonaService.GetConditionAttributesRequest request) {
            return base.Channel.GetConditionAttributes(request);
        }
        
        public Resonance.Insight3.Web.CertonaService.GetNavigationMappingResponse GetNavigationMapping(Resonance.Insight3.Web.CertonaService.GetNavigationMappingRequest request) {
            return base.Channel.GetNavigationMapping(request);
        }
        
        public Resonance.Insight3.Web.CertonaService.GetUserMappingResponse GetUserMapping(Resonance.Insight3.Web.CertonaService.GetUserMappingRequest request) {
            return base.Channel.GetUserMapping(request);
        }
        
        public Resonance.Insight3.Web.CertonaService.GetCatalogDetailsResponse GetCatalogDetails(Resonance.Insight3.Web.CertonaService.GetCatalogDetailsRequest request) {
            return base.Channel.GetCatalogDetails(request);
        }
        
        public Resonance.Insight3.Web.CertonaService.GetCatalogItemResponse GetCatalogItem(Resonance.Insight3.Web.CertonaService.GetCatalogItemRequest request) {
            return base.Channel.GetCatalogItem(request);
        }
        
        public Resonance.Insight3.Web.CertonaService.GetCatalogItemsResponse GetCatalogItems(Resonance.Insight3.Web.CertonaService.GetCatalogItemsRequest request) {
            return base.Channel.GetCatalogItems(request);
        }
        
        public Resonance.Insight3.Web.CertonaService.GetCatalogRuleContextsResponse GetCatalogRuleContexts(Resonance.Insight3.Web.CertonaService.GetCatalogRuleContextsRequest request) {
            return base.Channel.GetCatalogRuleContexts(request);
        }
        
        public Resonance.Insight3.Web.CertonaService.GetCatalogByRuleResponse GetCatalogByRule(Resonance.Insight3.Web.CertonaService.GetCatalogByRuleRequest request) {
            return base.Channel.GetCatalogByRule(request);
        }
        
        public Resonance.Insight3.Web.CertonaService.GetCatalogMappingFromResonanceFieldResponse GetCatalogMappingFromResonanceField(Resonance.Insight3.Web.CertonaService.GetCatalogMappingFromResonanceFieldRequest request) {
            return base.Channel.GetCatalogMappingFromResonanceField(request);
        }
        
        public Resonance.Insight3.Web.CertonaService.GetRecommendationTypesResponse GetRecommendationTypes(Resonance.Insight3.Web.CertonaService.GetRecommendationTypesRequest request) {
            return base.Channel.GetRecommendationTypes(request);
        }
        
        public Resonance.Insight3.Web.CertonaService.GetExperienceBoostsResponse GetExperienceBoosts(Resonance.Insight3.Web.CertonaService.GetExperienceBoostsRequest request) {
            return base.Channel.GetExperienceBoosts(request);
        }
        
        public Resonance.Insight3.Web.CertonaService.GetExperienceVariantsResponse GetExperienceVariants(Resonance.Insight3.Web.CertonaService.GetExperienceVariantsRequest request) {
            return base.Channel.GetExperienceVariants(request);
        }
        
        public Resonance.Insight3.Web.CertonaService.GetExperienceDetailsResponse GetExperienceDetails(Resonance.Insight3.Web.CertonaService.GetExperienceDetailsRequest request) {
            return base.Channel.GetExperienceDetails(request);
        }
        
        public Resonance.Insight3.Web.CertonaService.UpdateExperienceDetailsResponse UpdateExperienceDetails(Resonance.Insight3.Web.CertonaService.UpdateExperienceDetailsRequest request) {
            return base.Channel.UpdateExperienceDetails(request);
        }
        
        public Resonance.Insight3.Web.CertonaService.UpdateExperienceModifiersResponse UpdateExperienceModifiers(Resonance.Insight3.Web.CertonaService.UpdateExperienceModifiersRequest request) {
            return base.Channel.UpdateExperienceModifiers(request);
        }
        
        public Resonance.Insight3.Web.CertonaService.UpdateVariantModifiersResponse UpdateVariantModifiers(Resonance.Insight3.Web.CertonaService.UpdateVariantModifiersRequest request) {
            return base.Channel.UpdateVariantModifiers(request);
        }
        
        public Resonance.Insight3.Web.CertonaService.UpdateExperienceTrafficResponse UpdateExperienceTraffic(Resonance.Insight3.Web.CertonaService.UpdateExperienceTrafficRequest request) {
            return base.Channel.UpdateExperienceTraffic(request);
        }
        
        public Resonance.Insight3.Web.CertonaService.CreateExperienceResponse CreateExperience(Resonance.Insight3.Web.CertonaService.CreateExperienceRequest request) {
            return base.Channel.CreateExperience(request);
        }
        
        public Resonance.Insight3.Web.CertonaService.GetAccountExplorerStatusResponse GetAccountExplorerStatusList(Resonance.Insight3.Web.CertonaService.GetAccountExplorerStatusRequest request) {
            return base.Channel.GetAccountExplorerStatusList(request);
        }
        
        public Resonance.Insight3.Web.CertonaService.GetPanelBarStatesResponse GetPanelBarStates(Resonance.Insight3.Web.CertonaService.GetPanelBarStatesRequest request) {
            return base.Channel.GetPanelBarStates(request);
        }
        
        public Resonance.Insight3.Web.CertonaService.GetAccountExplorerTreeResponse GetAccountExplorerTree(Resonance.Insight3.Web.CertonaService.GetAccountExplorerTreeRequest request) {
            return base.Channel.GetAccountExplorerTree(request);
        }
        
        public Resonance.Insight3.Web.CertonaService.GetAssetExplorerTreeResponse GetAssetExplorerTree(Resonance.Insight3.Web.CertonaService.GetAssetExplorerTreeRequest request) {
            return base.Channel.GetAssetExplorerTree(request);
        }
        
        public void SetPanelBarWidth(Resonance.Insight3.Web.CertonaService.SetPanelBarWidthRequest request) {
            base.Channel.SetPanelBarWidth(request);
        }
        
        public void SetSelectedNode(Resonance.Insight3.Web.CertonaService.SetSelectedNodeRequest request) {
            base.Channel.SetSelectedNode(request);
        }
        
        public void SetAccountExplorerStatusList(Resonance.Insight3.Web.CertonaService.SetAccountExplorerStatusRequest request) {
            base.Channel.SetAccountExplorerStatusList(request);
        }
        
        public Resonance.Insight3.Web.CertonaService.GetPanelBarWidthResponse GetPanelBarWidth(Resonance.Insight3.Web.CertonaService.GetPanelBarWidthRequest request) {
            return base.Channel.GetPanelBarWidth(request);
        }
        
        public void SetAccountExplorerNodeState(Resonance.Insight3.Web.CertonaService.SetAccountExplorerNodeStateRequest request) {
            base.Channel.SetAccountExplorerNodeState(request);
        }
        
        public void SetAssetExplorerNodeState(Resonance.Insight3.Web.CertonaService.SetAssetExplorerNodeStateRequest request) {
            base.Channel.SetAssetExplorerNodeState(request);
        }
        
        public void SetPanelBarStates(Resonance.Insight3.Web.CertonaService.SetPanelBarStatesRequest request) {
            base.Channel.SetPanelBarStates(request);
        }
    }
}
